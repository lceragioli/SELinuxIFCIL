;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

; nameservice.miscfile > dnsmasq.subj > luci.subj > nameservice.miscfile
;libubox.datafile > ntpdhotplug.subj > libubox.datafile
;ubus.execfile > luci.subj > ubus.execfile
;nameservice.miscfile > luci.subj > nameservice.miscfile
;fwenv.subj [append]> tmpfile.locktmpfile > fwenv.subj
;fwenv.subj tmpfile.locktmpfile fwenv.subj


(tunable
 recv_invalid_peers
 true)

(tunableif .recv_invalid_peers
           (true
            (call .associate_invalid_sctp_sockets (.recvpeer.subj_typeattr))
            (call .recv_invalid_netpeers (.recvpeer.subj_typeattr))

            (call .net.netif.ingress_all_netifs (.invalid))
            (call .net.node.recvfrom_all_netnodes (.invalid))))

(block recv_invalid_peers

       ;;
       ;; Contexts
       ;;

       (genfscon
        "selinuxfs"
        "/booleans/recv_invalid_peers"
        selinuxbool_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .selinux.bool.obj_template))

(block recvpeer

       ;;
       ;; Policy
       ;;

       (blockinherit .subj.subj_all_macro_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(tunable
 recv_send_invalid_packets
 true)

(tunableif .recv_send_invalid_packets
           (true
            (call .recvsend_invalid_netpackets
                  (.recvsendpacket.subj_typeattr))

            (call .forward_invalid_netpackets (.invalid))))

(block recv_send_invalid_packets

       ;;
       ;; Contexts
       ;;

       (genfscon
        "selinuxfs"
        "/booleans/recv_send_invalid_packets"
        selinuxbool_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .selinux.bool.obj_template))

(block recvsendpacket

       ;;
       ;; Policy
       ;;

       (blockinherit .subj.subj_all_macro_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(tunable
 load_policy
 true)

(tunableif .load_policy
           (true
            (allow .selinux.setenforce.subj_typeattr .selinux
                   (security (setenforce)))
            (allow .selinux.loadpolicy.subj_typeattr .selinux
                   (security (load_policy)))))

(block load_policy

       ;;
       ;; Contexts
       ;;

       (genfscon
        "selinuxfs"
        "/booleans/load_policy"
        selinuxbool_file_context)

       ;;
       ;; Macros
       ;;

       (macro get_selinuxbools ((type ARG1))
              (call read_selinuxbool_files (ARG1))
              (call .selinux.list_fs_dirs (ARG1)))

       (macro set_selinuxbools ((type ARG1))
              (allow ARG1 .selinux (security (setbool)))

              (call .selinux.list_fs_dirs (ARG1))
              (call .selinux.readwrite_fs_files (ARG1))

              (tunableif
               .load_policy
               (true
                (call readwrite_selinuxbool_files (ARG1)))))

       ;;
       ;; Policy
       ;;

       (blockinherit .selinux.bool.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(tunable
 volatile_overlay
 true)

(tunableif .volatile_overlay
           (true
            (call .tmp.associate_filesystems (.file.obj_typeattr))))

(block volatile_overlay

       ;;
       ;; Contexts
       ;;

       (genfscon
        "selinuxfs"
        "/booleans/volatile_overlay"
        selinuxbool_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .selinux.bool.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(tunable
 load_kernel_module
 true)

(tunableif .load_kernel_module
           (true
            (allow .sys.loadkernelmodule.subj_typeattr self
                   (capability (sys_module)))

            ;; it uses init_module() even though the modules are not compressed?
            (allow .sys.loadkernelmodule.subj_typeattr self
                   (system (module_load)))))

(block load_kernel_module

       ;;
       ;; Contexts
       ;;

       (genfscon
        "selinuxfs"
        "/booleans/load_kernel_module"
        selinuxbool_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .selinux.bool.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(tunable
 recvfrom_sendto_invalid_associations
 true)

(tunableif .recvfrom_sendto_invalid_associations
           (true
            (call .recvfromsendto_invalid_associations
                  (.recvfromsendtoassoc.subj_typeattr))

            (call .net.netif.egressingress_all_netifs (.invalid))
            (call .net.node.recvfromsendto_all_netnodes (.invalid))))

(block recvfrom_sendto_invalid_associations

       ;;
       ;; Contexts
       ;;

       (genfscon
        "selinuxfs"
        "/booleans/recvfrom_sendto_invalid_associations"
        selinuxbool_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .selinux.bool.obj_template))

(block recvfromsendtoassoc

       ;;
       ;; Policy
       ;;

       (blockinherit .subj.subj_all_macro_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file

    ;;
    ;; Contexts
    ;;

    (filecon
     "/www/cgi-bin"
     dir
     cgiscriptfile_file_context)
    (filecon
     "/www/cgi-bin/.*"
     any
     cgiscriptfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_cgiscriptfile ((type ARG1))
           (call .www.miscfile_obj_type_transition
                 (ARG1 cgiscriptfile dir "cgi-bin")))

    ;;
    ;; Policy
    ;;

    (blockinherit cgiscript.obj_template)

    (call obj_type_transition_cgiscriptfile (unconfined.subj_typeattr))

    (block cgiscript

           ;;
           ;; Macros
           ;;

           (macro entrypoint_all_files ((type ARG1))
                  (allow ARG1 obj_typeattr (file (entrypoint))))

           ;;
           ;; Policy
           ;;

           (blockinherit file.obj_all_macro_template)

           (call exec.obj_type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   cgiscriptfile_file_context
                   (.u
                    .r
                    cgiscriptfile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   cgiscriptfile)

                  (call .file.cgiscript.obj_type (cgiscriptfile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_cgiscriptfile_dirs ((type ARG1))
                         (allow ARG1 cgiscriptfile addname_dir))

                  (macro append_cgiscriptfile_blk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile append_blk_file))

                  (macro append_cgiscriptfile_chr_files ((type ARG1))
                         (allow ARG1 cgiscriptfile append_chr_file))

                  (macro append_cgiscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 cgiscriptfile append_fifo_file))

                  (macro append_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile append_file))

                  (macro appendinherited_cgiscriptfile_blk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile appendinherited_blk_file))

                  (macro appendinherited_cgiscriptfile_chr_files ((type ARG1))
                         (allow ARG1 cgiscriptfile appendinherited_chr_file))

                  (macro appendinherited_cgiscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 cgiscriptfile appendinherited_fifo_file))

                  (macro appendinherited_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile appendinherited_file))

                  (macro cgiscriptfile_subj_type_transition ((type ARG1)(type ARG2))
                         (typetransition ARG1 cgiscriptfile process "*" ARG2))

                  (macro cgiscriptfile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 cgiscriptfile ARG3 ARG4 ARG2)
                         (call addname_cgiscriptfile_dirs (ARG1)))

                  (macro create_cgiscriptfile ((type ARG1))
                         (allow ARG1 cgiscriptfile (allfiles (create))))

                  (macro create_cgiscriptfile_blk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile create_blk_file))

                  (macro create_cgiscriptfile_chr_files ((type ARG1))
                         (allow ARG1 cgiscriptfile create_chr_file))

                  (macro create_cgiscriptfile_dirs ((type ARG1))
                         (allow ARG1 cgiscriptfile create_dir))

                  (macro create_cgiscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 cgiscriptfile create_fifo_file))

                  (macro create_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile create_file))

                  (macro create_cgiscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile create_lnk_file))

                  (macro create_cgiscriptfile_sock_files ((type ARG1))
                         (allow ARG1 cgiscriptfile create_sock_file))

                  (macro deletename_cgiscriptfile_dirs ((type ARG1))
                         (allow ARG1 cgiscriptfile deletename_dir))

                  (macro delete_cgiscriptfile ((type ARG1))
                         (allow ARG1 cgiscriptfile (allfiles (delete))))

                  (macro delete_cgiscriptfile_blk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile delete_blk_file))

                  (macro delete_cgiscriptfile_chr_files ((type ARG1))
                         (allow ARG1 cgiscriptfile delete_chr_file))

                  (macro delete_cgiscriptfile_dirs ((type ARG1))
                         (allow ARG1 cgiscriptfile delete_dir))

                  (macro delete_cgiscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 cgiscriptfile delete_fifo_file))

                  (macro delete_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile delete_file))

                  (macro delete_cgiscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile delete_lnk_file))

                  (macro delete_cgiscriptfile_sock_files ((type ARG1))
                         (allow ARG1 cgiscriptfile delete_sock_file))

                  (macro entrypoint_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile (file (entrypoint))))

                  (macro execute_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile execute_file))

                  (macro list_cgiscriptfile_dirs ((type ARG1))
                         (allow ARG1 cgiscriptfile list_dir))

                  (macro listinherited_cgiscriptfile_dirs ((type ARG1))
                         (allow ARG1 cgiscriptfile listinherited_dir))

                  (macro manage_cgiscriptfile ((type ARG1))
                         (allow ARG1 cgiscriptfile (allfiles (manage))))

                  (macro manage_cgiscriptfile_blk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile manage_blk_file))

                  (macro manage_cgiscriptfile_chr_files ((type ARG1))
                         (allow ARG1 cgiscriptfile manage_chr_file))

                  (macro manage_cgiscriptfile_dirs ((type ARG1))
                         (allow ARG1 cgiscriptfile manage_dir))

                  (macro manage_cgiscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 cgiscriptfile manage_fifo_file))

                  (macro manage_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile manage_file))

                  (macro manage_cgiscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile manage_lnk_file))

                  (macro manage_cgiscriptfile_sock_files ((type ARG1))
                         (allow ARG1 cgiscriptfile manage_sock_file))

                  (macro mapexecute_cgiscriptfile_chr_files ((type ARG1))
                         (allow ARG1 cgiscriptfile mapexecute_chr_file))

                  (macro mapexecute_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile mapexecute_file))

                  (macro mounton_cgiscriptfile ((type ARG1))
                         (allow ARG1 cgiscriptfile (allfiles (mounton))))

                  (macro mounton_cgiscriptfile_blk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile mounton_blk_file))

                  (macro mounton_cgiscriptfile_chr_files ((type ARG1))
                         (allow ARG1 cgiscriptfile mounton_chr_file))

                  (macro mounton_cgiscriptfile_dirs ((type ARG1))
                         (allow ARG1 cgiscriptfile mounton_dir))

                  (macro mounton_cgiscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 cgiscriptfile mounton_fifo_file))

                  (macro mounton_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile mounton_file))

                  (macro mounton_cgiscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile mounton_lnk_file))

                  (macro mounton_cgiscriptfile_sock_files ((type ARG1))
                         (allow ARG1 cgiscriptfile mounton_sock_file))

                  (macro read_cgiscriptfile ((type ARG1))
                         (allow ARG1 cgiscriptfile (allfiles (read))))

                  (macro read_cgiscriptfile_blk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile read_blk_file))

                  (macro read_cgiscriptfile_chr_files ((type ARG1))
                         (allow ARG1 cgiscriptfile read_chr_file))

                  (macro read_cgiscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 cgiscriptfile read_fifo_file))

                  (macro read_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile read_file))

                  (macro readinherited_cgiscriptfile_blk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile readinherited_blk_file))

                  (macro readinherited_cgiscriptfile_chr_files ((type ARG1))
                         (allow ARG1 cgiscriptfile readinherited_chr_file))

                  (macro readinherited_cgiscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 cgiscriptfile readinherited_fifo_file))

                  (macro readinherited_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile readinherited_file))

                  (macro readinherited_cgiscriptfile_sock_files ((type ARG1))
                         (allow ARG1 cgiscriptfile readinherited_sock_file))

                  (macro read_cgiscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile read_lnk_file))

                  (macro read_cgiscriptfile_sock_files ((type ARG1))
                         (allow ARG1 cgiscriptfile read_sock_file))

                  (macro readwrite_cgiscriptfile ((type ARG1))
                         (allow ARG1 cgiscriptfile (allfiles (readwrite))))

                  (macro readwrite_cgiscriptfile_blk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile readwrite_blk_file))

                  (macro readwrite_cgiscriptfile_chr_files ((type ARG1))
                         (allow ARG1 cgiscriptfile readwrite_chr_file))

                  (macro readwrite_cgiscriptfile_dirs ((type ARG1))
                         (allow ARG1 cgiscriptfile readwrite_dir))

                  (macro readwrite_cgiscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 cgiscriptfile readwrite_fifo_file))

                  (macro readwrite_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile readwrite_file))

                  (macro readwriteinherited_cgiscriptfile_blk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile readwriteinherited_blk_file))

                  (macro readwriteinherited_cgiscriptfile_chr_files ((type ARG1))
                         (allow ARG1 cgiscriptfile readwriteinherited_chr_file))

                  (macro readwriteinherited_cgiscriptfile_dirs ((type ARG1))
                         (allow ARG1 cgiscriptfile readwriteinherited_dir))

                  (macro readwriteinherited_cgiscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 cgiscriptfile readwriteinherited_fifo_file))

                  (macro readwriteinherited_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile readwriteinherited_file))

                  (macro readwriteinherited_cgiscriptfile_sock_files ((type ARG1))
                         (allow ARG1 cgiscriptfile readwriteinherited_sock_file))

                  (macro readwrite_cgiscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile readwrite_lnk_file))

                  (macro readwrite_cgiscriptfile_sock_files ((type ARG1))
                         (allow ARG1 cgiscriptfile readwrite_sock_file))

                  (macro relabel_cgiscriptfile ((type ARG1))
                         (allow ARG1 cgiscriptfile (allfiles (relabel))))

                  (macro relabel_cgiscriptfile_blk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabel_blk_file))

                  (macro relabel_cgiscriptfile_chr_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabel_chr_file))

                  (macro relabel_cgiscriptfile_dirs ((type ARG1))
                         (allow ARG1 cgiscriptfile relabel_dir))

                  (macro relabel_cgiscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabel_fifo_file))

                  (macro relabel_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabel_file))

                  (macro relabel_cgiscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabel_lnk_file))

                  (macro relabel_cgiscriptfile_sock_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabel_sock_file))

                  (macro relabelfrom_cgiscriptfile ((type ARG1))
                         (allow ARG1 cgiscriptfile (allfiles (relabelfrom))))

                  (macro relabelfrom_cgiscriptfile_blk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabelfrom_blk_file))

                  (macro relabelfrom_cgiscriptfile_chr_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabelfrom_chr_file))

                  (macro relabelfrom_cgiscriptfile_dirs ((type ARG1))
                         (allow ARG1 cgiscriptfile relabelfrom_dir))

                  (macro relabelfrom_cgiscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabelfrom_fifo_file))

                  (macro relabelfrom_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabelfrom_file))

                  (macro relabelfrom_cgiscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabelfrom_lnk_file))

                  (macro relabelfrom_cgiscriptfile_sock_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabelfrom_sock_file))

                  (macro relabelto_cgiscriptfile ((type ARG1))
                         (allow ARG1 cgiscriptfile (allfiles (relabelto))))

                  (macro relabelto_cgiscriptfile_blk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabelto_blk_file))

                  (macro relabelto_cgiscriptfile_chr_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabelto_chr_file))

                  (macro relabelto_cgiscriptfile_dirs ((type ARG1))
                         (allow ARG1 cgiscriptfile relabelto_dir))

                  (macro relabelto_cgiscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabelto_fifo_file))

                  (macro relabelto_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabelto_file))

                  (macro relabelto_cgiscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabelto_lnk_file))

                  (macro relabelto_cgiscriptfile_sock_files ((type ARG1))
                         (allow ARG1 cgiscriptfile relabelto_sock_file))

                  (macro rename_cgiscriptfile ((type ARG1))
                         (allow ARG1 cgiscriptfile (allfiles (rename))))

                  (macro rename_cgiscriptfile_blk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile rename_blk_file))

                  (macro rename_cgiscriptfile_chr_files ((type ARG1))
                         (allow ARG1 cgiscriptfile rename_chr_file))

                  (macro rename_cgiscriptfile_dirs ((type ARG1))
                         (allow ARG1 cgiscriptfile rename_dir))

                  (macro rename_cgiscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 cgiscriptfile rename_fifo_file))

                  (macro rename_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile rename_file))

                  (macro rename_cgiscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile rename_lnk_file))

                  (macro rename_cgiscriptfile_sock_files ((type ARG1))
                         (allow ARG1 cgiscriptfile rename_sock_file))

                  (macro search_cgiscriptfile_dirs ((type ARG1))
                         (allow ARG1 cgiscriptfile search_dir))

                  (macro write_cgiscriptfile ((type ARG1))
                         (allow ARG1 cgiscriptfile (allfiles (write))))

                  (macro write_cgiscriptfile_blk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile write_blk_file))

                  (macro write_cgiscriptfile_chr_files ((type ARG1))
                         (allow ARG1 cgiscriptfile write_chr_file))

                  (macro write_cgiscriptfile_dirs ((type ARG1))
                         (allow ARG1 cgiscriptfile write_dir))

                  (macro write_cgiscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 cgiscriptfile write_fifo_file))

                  (macro write_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile write_file))

                  (macro writeinherited_cgiscriptfile_blk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile writeinherited_blk_file))

                  (macro writeinherited_cgiscriptfile_chr_files ((type ARG1))
                         (allow ARG1 cgiscriptfile writeinherited_chr_file))

                  (macro writeinherited_cgiscriptfile_dirs ((type ARG1))
                         (allow ARG1 cgiscriptfile writeinherited_dir))

                  (macro writeinherited_cgiscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 cgiscriptfile writeinherited_fifo_file))

                  (macro writeinherited_cgiscriptfile_files ((type ARG1))
                         (allow ARG1 cgiscriptfile writeinherited_file))

                  (macro writeinherited_cgiscriptfile_sock_files ((type ARG1))
                         (allow ARG1 cgiscriptfile writeinherited_sock_file))

                  (macro write_cgiscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 cgiscriptfile write_lnk_file))

                  (macro write_cgiscriptfile_sock_files ((type ARG1))
                         (allow ARG1 cgiscriptfile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .file.cgiscript.obj_base_template)
                  (blockinherit .file.cgiscript.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .libubox.obj_type_transition_datafile (unconfined.subj_typeattr)))

(block libubox

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/share/libubox"
        dir
        datafile_file_context)
       (filecon
        "/usr/share/libubox/.*"
        any
        datafile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_datafile ((type ARG1))
              (call .file.datafile_obj_type_transition
                    (ARG1 datafile dir "libubox")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.data.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .acl.obj_type_transition_datafile (unconfined.subj_typeattr)))

(block acl

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/share/acl\.d"
        dir
        datafile_file_context)
       (filecon
        "/usr/share/acl\.d/.*"
        any
        datafile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_datafile ((type ARG1))
              (call .file.datafile_obj_type_transition
                    (ARG1 datafile dir "acl.d")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.data.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .terminfo.obj_type_transition_datafile (unconfined.subj_typeattr)))

(block terminfo

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/share/terminfo"
        dir
        datafile_file_context)
       (filecon
        "/usr/share/terminfo/.*"
        any
        datafile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_datafile ((type ARG1))
              (call .file.datafile_obj_type_transition
                    (ARG1 datafile dir "terminfo")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.data.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .udhcpc.obj_type_transition_datafile (unconfined.subj_typeattr)))

(block udhcpc

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/share/udhcpc"
        dir
        datafile_file_context)
       (filecon
        "/usr/share/udhcpc/.*"
        any
        datafile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_datafile ((type ARG1))
              (call .file.datafile_obj_type_transition
                    (ARG1 datafile dir "udhcpc")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.data.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .libiwinfo.obj_type_transition_datafile (unconfined.subj_typeattr)))

(block libiwinfo

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/share/libiwinfo"
        dir
        datafile_file_context)
       (filecon
        "/usr/share/libiwinfo/.*"
        any
        datafile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_datafile ((type ARG1))
              (call .file.datafile_obj_type_transition
                    (ARG1 datafile dir "libiwinfo")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.data.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file

    (block cert

           ;;
           ;; Policy
           ;;

           (blockinherit file.obj_all_macro_template)

           (call file.obj_type (obj_typeattr))

           (call .xattr.associate_filesystems (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   certfile_file_context
                   (.u
                    .r
                    certfile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   certfile)

                  (call .file.cert.obj_type (certfile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_certfile_dirs ((type ARG1))
                         (allow ARG1 certfile addname_dir))

                  (macro append_certfile_blk_files ((type ARG1))
                         (allow ARG1 certfile append_blk_file))

                  (macro append_certfile_chr_files ((type ARG1))
                         (allow ARG1 certfile append_chr_file))

                  (macro append_certfile_fifo_files ((type ARG1))
                         (allow ARG1 certfile append_fifo_file))

                  (macro append_certfile_files ((type ARG1))
                         (allow ARG1 certfile append_file))

                  (macro appendinherited_certfile_blk_files ((type ARG1))
                         (allow ARG1 certfile appendinherited_blk_file))

                  (macro appendinherited_certfile_chr_files ((type ARG1))
                         (allow ARG1 certfile appendinherited_chr_file))

                  (macro appendinherited_certfile_fifo_files ((type ARG1))
                         (allow ARG1 certfile appendinherited_fifo_file))

                  (macro appendinherited_certfile_files ((type ARG1))
                         (allow ARG1 certfile appendinherited_file))

                  (macro certfile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 certfile ARG3 ARG4 ARG2)
                         (call addname_certfile_dirs (ARG1)))

                  (macro create_certfile ((type ARG1))
                         (allow ARG1 certfile (allfiles (create))))

                  (macro create_certfile_blk_files ((type ARG1))
                         (allow ARG1 certfile create_blk_file))

                  (macro create_certfile_chr_files ((type ARG1))
                         (allow ARG1 certfile create_chr_file))

                  (macro create_certfile_dirs ((type ARG1))
                         (allow ARG1 certfile create_dir))

                  (macro create_certfile_fifo_files ((type ARG1))
                         (allow ARG1 certfile create_fifo_file))

                  (macro create_certfile_files ((type ARG1))
                         (allow ARG1 certfile create_file))

                  (macro create_certfile_lnk_files ((type ARG1))
                         (allow ARG1 certfile create_lnk_file))

                  (macro create_certfile_sock_files ((type ARG1))
                         (allow ARG1 certfile create_sock_file))

                  (macro deletename_certfile_dirs ((type ARG1))
                         (allow ARG1 certfile deletename_dir))

                  (macro delete_certfile ((type ARG1))
                         (allow ARG1 certfile (allfiles (delete))))

                  (macro delete_certfile_blk_files ((type ARG1))
                         (allow ARG1 certfile delete_blk_file))

                  (macro delete_certfile_chr_files ((type ARG1))
                         (allow ARG1 certfile delete_chr_file))

                  (macro delete_certfile_dirs ((type ARG1))
                         (allow ARG1 certfile delete_dir))

                  (macro delete_certfile_fifo_files ((type ARG1))
                         (allow ARG1 certfile delete_fifo_file))

                  (macro delete_certfile_files ((type ARG1))
                         (allow ARG1 certfile delete_file))

                  (macro delete_certfile_lnk_files ((type ARG1))
                         (allow ARG1 certfile delete_lnk_file))

                  (macro delete_certfile_sock_files ((type ARG1))
                         (allow ARG1 certfile delete_sock_file))

                  (macro execute_certfile_files ((type ARG1))
                         (allow ARG1 certfile execute_file))

                  (macro list_certfile_dirs ((type ARG1))
                         (allow ARG1 certfile list_dir))

                  (macro listinherited_certfile_dirs ((type ARG1))
                         (allow ARG1 certfile listinherited_dir))

                  (macro load_certfile_files ((type ARG1))
                         (allow ARG1 certfile (system (module_load))))

                  (macro manage_certfile ((type ARG1))
                         (allow ARG1 certfile (allfiles (manage))))

                  (macro manage_certfile_blk_files ((type ARG1))
                         (allow ARG1 certfile manage_blk_file))

                  (macro manage_certfile_chr_files ((type ARG1))
                         (allow ARG1 certfile manage_chr_file))

                  (macro manage_certfile_dirs ((type ARG1))
                         (allow ARG1 certfile manage_dir))

                  (macro manage_certfile_fifo_files ((type ARG1))
                         (allow ARG1 certfile manage_fifo_file))

                  (macro manage_certfile_files ((type ARG1))
                         (allow ARG1 certfile manage_file))

                  (macro manage_certfile_lnk_files ((type ARG1))
                         (allow ARG1 certfile manage_lnk_file))

                  (macro manage_certfile_sock_files ((type ARG1))
                         (allow ARG1 certfile manage_sock_file))

                  (macro mapexecute_certfile_chr_files ((type ARG1))
                         (allow ARG1 certfile mapexecute_chr_file))

                  (macro mapexecute_certfile_files ((type ARG1))
                         (allow ARG1 certfile mapexecute_file))

                  (macro mounton_certfile ((type ARG1))
                         (allow ARG1 certfile (allfiles (mounton))))

                  (macro mounton_certfile_blk_files ((type ARG1))
                         (allow ARG1 certfile mounton_blk_file))

                  (macro mounton_certfile_chr_files ((type ARG1))
                         (allow ARG1 certfile mounton_chr_file))

                  (macro mounton_certfile_dirs ((type ARG1))
                         (allow ARG1 certfile mounton_dir))

                  (macro mounton_certfile_fifo_files ((type ARG1))
                         (allow ARG1 certfile mounton_fifo_file))

                  (macro mounton_certfile_files ((type ARG1))
                         (allow ARG1 certfile mounton_file))

                  (macro mounton_certfile_lnk_files ((type ARG1))
                         (allow ARG1 certfile mounton_lnk_file))

                  (macro mounton_certfile_sock_files ((type ARG1))
                         (allow ARG1 certfile mounton_sock_file))

                  (macro read_certfile ((type ARG1))
                         (allow ARG1 certfile (allfiles (read))))

                  (macro read_certfile_blk_files ((type ARG1))
                         (allow ARG1 certfile read_blk_file))

                  (macro read_certfile_chr_files ((type ARG1))
                         (allow ARG1 certfile read_chr_file))

                  (macro read_certfile_fifo_files ((type ARG1))
                         (allow ARG1 certfile read_fifo_file))

                  (macro read_certfile_files ((type ARG1))
                         (allow ARG1 certfile read_file))

                  (macro readinherited_certfile_blk_files ((type ARG1))
                         (allow ARG1 certfile readinherited_blk_file))

                  (macro readinherited_certfile_chr_files ((type ARG1))
                         (allow ARG1 certfile readinherited_chr_file))

                  (macro readinherited_certfile_fifo_files ((type ARG1))
                         (allow ARG1 certfile readinherited_fifo_file))

                  (macro readinherited_certfile_files ((type ARG1))
                         (allow ARG1 certfile readinherited_file))

                  (macro readinherited_certfile_sock_files ((type ARG1))
                         (allow ARG1 certfile readinherited_sock_file))

                  (macro read_certfile_lnk_files ((type ARG1))
                         (allow ARG1 certfile read_lnk_file))

                  (macro read_certfile_sock_files ((type ARG1))
                         (allow ARG1 certfile read_sock_file))

                  (macro readwrite_certfile ((type ARG1))
                         (allow ARG1 certfile (allfiles (readwrite))))

                  (macro readwrite_certfile_blk_files ((type ARG1))
                         (allow ARG1 certfile readwrite_blk_file))

                  (macro readwrite_certfile_chr_files ((type ARG1))
                         (allow ARG1 certfile readwrite_chr_file))

                  (macro readwrite_certfile_dirs ((type ARG1))
                         (allow ARG1 certfile readwrite_dir))

                  (macro readwrite_certfile_fifo_files ((type ARG1))
                         (allow ARG1 certfile readwrite_fifo_file))

                  (macro readwrite_certfile_files ((type ARG1))
                         (allow ARG1 certfile readwrite_file))

                  (macro readwriteinherited_certfile_blk_files ((type ARG1))
                         (allow ARG1 certfile readwriteinherited_blk_file))

                  (macro readwriteinherited_certfile_chr_files ((type ARG1))
                         (allow ARG1 certfile readwriteinherited_chr_file))

                  (macro readwriteinherited_certfile_dirs ((type ARG1))
                         (allow ARG1 certfile readwriteinherited_dir))

                  (macro readwriteinherited_certfile_fifo_files ((type ARG1))
                         (allow ARG1 certfile readwriteinherited_fifo_file))

                  (macro readwriteinherited_certfile_files ((type ARG1))
                         (allow ARG1 certfile readwriteinherited_file))

                  (macro readwriteinherited_certfile_sock_files ((type ARG1))
                         (allow ARG1 certfile readwriteinherited_sock_file))

                  (macro readwrite_certfile_lnk_files ((type ARG1))
                         (allow ARG1 certfile readwrite_lnk_file))

                  (macro readwrite_certfile_sock_files ((type ARG1))
                         (allow ARG1 certfile readwrite_sock_file))

                  (macro relabel_certfile ((type ARG1))
                         (allow ARG1 certfile (allfiles (relabel))))

                  (macro relabel_certfile_blk_files ((type ARG1))
                         (allow ARG1 certfile relabel_blk_file))

                  (macro relabel_certfile_chr_files ((type ARG1))
                         (allow ARG1 certfile relabel_chr_file))

                  (macro relabel_certfile_dirs ((type ARG1))
                         (allow ARG1 certfile relabel_dir))

                  (macro relabel_certfile_fifo_files ((type ARG1))
                         (allow ARG1 certfile relabel_fifo_file))

                  (macro relabel_certfile_files ((type ARG1))
                         (allow ARG1 certfile relabel_file))

                  (macro relabel_certfile_lnk_files ((type ARG1))
                         (allow ARG1 certfile relabel_lnk_file))

                  (macro relabel_certfile_sock_files ((type ARG1))
                         (allow ARG1 certfile relabel_sock_file))

                  (macro relabelfrom_certfile ((type ARG1))
                         (allow ARG1 certfile (allfiles (relabelfrom))))

                  (macro relabelfrom_certfile_blk_files ((type ARG1))
                         (allow ARG1 certfile relabelfrom_blk_file))

                  (macro relabelfrom_certfile_chr_files ((type ARG1))
                         (allow ARG1 certfile relabelfrom_chr_file))

                  (macro relabelfrom_certfile_dirs ((type ARG1))
                         (allow ARG1 certfile relabelfrom_dir))

                  (macro relabelfrom_certfile_fifo_files ((type ARG1))
                         (allow ARG1 certfile relabelfrom_fifo_file))

                  (macro relabelfrom_certfile_files ((type ARG1))
                         (allow ARG1 certfile relabelfrom_file))

                  (macro relabelfrom_certfile_lnk_files ((type ARG1))
                         (allow ARG1 certfile relabelfrom_lnk_file))

                  (macro relabelfrom_certfile_sock_files ((type ARG1))
                         (allow ARG1 certfile relabelfrom_sock_file))

                  (macro relabelto_certfile ((type ARG1))
                         (allow ARG1 certfile (allfiles (relabelto))))

                  (macro relabelto_certfile_blk_files ((type ARG1))
                         (allow ARG1 certfile relabelto_blk_file))

                  (macro relabelto_certfile_chr_files ((type ARG1))
                         (allow ARG1 certfile relabelto_chr_file))

                  (macro relabelto_certfile_dirs ((type ARG1))
                         (allow ARG1 certfile relabelto_dir))

                  (macro relabelto_certfile_fifo_files ((type ARG1))
                         (allow ARG1 certfile relabelto_fifo_file))

                  (macro relabelto_certfile_files ((type ARG1))
                         (allow ARG1 certfile relabelto_file))

                  (macro relabelto_certfile_lnk_files ((type ARG1))
                         (allow ARG1 certfile relabelto_lnk_file))

                  (macro relabelto_certfile_sock_files ((type ARG1))
                         (allow ARG1 certfile relabelto_sock_file))

                  (macro rename_certfile ((type ARG1))
                         (allow ARG1 certfile (allfiles (rename))))

                  (macro rename_certfile_blk_files ((type ARG1))
                         (allow ARG1 certfile rename_blk_file))

                  (macro rename_certfile_chr_files ((type ARG1))
                         (allow ARG1 certfile rename_chr_file))

                  (macro rename_certfile_dirs ((type ARG1))
                         (allow ARG1 certfile rename_dir))

                  (macro rename_certfile_fifo_files ((type ARG1))
                         (allow ARG1 certfile rename_fifo_file))

                  (macro rename_certfile_files ((type ARG1))
                         (allow ARG1 certfile rename_file))

                  (macro rename_certfile_lnk_files ((type ARG1))
                         (allow ARG1 certfile rename_lnk_file))

                  (macro rename_certfile_sock_files ((type ARG1))
                         (allow ARG1 certfile rename_sock_file))

                  (macro search_certfile_dirs ((type ARG1))
                         (allow ARG1 certfile search_dir))

                  (macro write_certfile ((type ARG1))
                         (allow ARG1 certfile (allfiles (write))))

                  (macro write_certfile_blk_files ((type ARG1))
                         (allow ARG1 certfile write_blk_file))

                  (macro write_certfile_chr_files ((type ARG1))
                         (allow ARG1 certfile write_chr_file))

                  (macro write_certfile_dirs ((type ARG1))
                         (allow ARG1 certfile write_dir))

                  (macro write_certfile_fifo_files ((type ARG1))
                         (allow ARG1 certfile write_fifo_file))

                  (macro write_certfile_files ((type ARG1))
                         (allow ARG1 certfile write_file))

                  (macro writeinherited_certfile_blk_files ((type ARG1))
                         (allow ARG1 certfile writeinherited_blk_file))

                  (macro writeinherited_certfile_chr_files ((type ARG1))
                         (allow ARG1 certfile writeinherited_chr_file))

                  (macro writeinherited_certfile_dirs ((type ARG1))
                         (allow ARG1 certfile writeinherited_dir))

                  (macro writeinherited_certfile_fifo_files ((type ARG1))
                         (allow ARG1 certfile writeinherited_fifo_file))

                  (macro writeinherited_certfile_files ((type ARG1))
                         (allow ARG1 certfile writeinherited_file))

                  (macro writeinherited_certfile_sock_files ((type ARG1))
                         (allow ARG1 certfile writeinherited_sock_file))

                  (macro write_certfile_lnk_files ((type ARG1))
                         (allow ARG1 certfile write_lnk_file))

                  (macro write_certfile_sock_files ((type ARG1))
                         (allow ARG1 certfile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .file.cert.obj_base_template)
                  (blockinherit .file.cert.obj_macro_template))

           (block except

                  ;;
                  ;; Policy
                  ;;

                  (blockinherit obj_all_macro_template)

                  (typeattributeset
                   obj_typeattr
                   (and
                    cert.obj_typeattr
                    (not
                     (exception.obj_typeattr))))

                  (optional certfile_opt_sandbox
                            (call .file.sandboxexception.obj_type
                                  (obj_typeattr))))

           (block exception

                  ;;
                  ;; Policy
                  ;;

                  (blockinherit obj_all_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file

    ;;
    ;; Contexts
    ;;

    (filecon
     "/home"
     dir
     homefile_file_context)
    (filecon
     "/home/.*"
     any
     homefile_file_context)

    (filecon
     "/root"
     dir
     homefile_file_context)
    (filecon
     "/root/.*"
     any
     homefile_file_context)

    ;;
    ;; Macros
    ;;

    (macro mounton_homefile_dirs ((type ARG1))
           (allow ARG1 homefile (dir (getattr mounton))))

    (macro obj_type_transition_homefile ((type ARG1))
           (call .sys.rootfile_obj_type_transition
                 (ARG1 homefile dir "home"))
           (call .sys.rootfile_obj_type_transition
                 (ARG1 homefile dir "root")))

    ;;
    ;; Policy
    ;;

    (blockinherit home.obj_template)

    (call obj_type_transition_homefile (unconfined.subj_typeattr))

    (block home

           ;;
           ;; Policy
           ;;

           (blockinherit file.obj_all_macro_template)

           (call file.obj_type (obj_typeattr))

           (call .xattr.associate_filesystems (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   homefile_file_context
                   (.u
                    .r
                    homefile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   homefile)

                  (call .file.home.obj_type (homefile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_homefile_dirs ((type ARG1))
                         (allow ARG1 homefile addname_dir))

                  (macro append_homefile_blk_files ((type ARG1))
                         (allow ARG1 homefile append_blk_file))

                  (macro append_homefile_chr_files ((type ARG1))
                         (allow ARG1 homefile append_chr_file))

                  (macro append_homefile_fifo_files ((type ARG1))
                         (allow ARG1 homefile append_fifo_file))

                  (macro append_homefile_files ((type ARG1))
                         (allow ARG1 homefile append_file))

                  (macro appendinherited_homefile_blk_files ((type ARG1))
                         (allow ARG1 homefile appendinherited_blk_file))

                  (macro appendinherited_homefile_chr_files ((type ARG1))
                         (allow ARG1 homefile appendinherited_chr_file))

                  (macro appendinherited_homefile_fifo_files ((type ARG1))
                         (allow ARG1 homefile appendinherited_fifo_file))

                  (macro appendinherited_homefile_files ((type ARG1))
                         (allow ARG1 homefile appendinherited_file))

                  (macro create_homefile ((type ARG1))
                         (allow ARG1 homefile (allfiles (create))))

                  (macro create_homefile_blk_files ((type ARG1))
                         (allow ARG1 homefile create_blk_file))

                  (macro create_homefile_chr_files ((type ARG1))
                         (allow ARG1 homefile create_chr_file))

                  (macro create_homefile_dirs ((type ARG1))
                         (allow ARG1 homefile create_dir))

                  (macro create_homefile_fifo_files ((type ARG1))
                         (allow ARG1 homefile create_fifo_file))

                  (macro create_homefile_files ((type ARG1))
                         (allow ARG1 homefile create_file))

                  (macro create_homefile_lnk_files ((type ARG1))
                         (allow ARG1 homefile create_lnk_file))

                  (macro create_homefile_sock_files ((type ARG1))
                         (allow ARG1 homefile create_sock_file))

                  (macro deletename_homefile_dirs ((type ARG1))
                         (allow ARG1 homefile deletename_dir))

                  (macro delete_homefile ((type ARG1))
                         (allow ARG1 homefile (allfiles (delete))))

                  (macro delete_homefile_blk_files ((type ARG1))
                         (allow ARG1 homefile delete_blk_file))

                  (macro delete_homefile_chr_files ((type ARG1))
                         (allow ARG1 homefile delete_chr_file))

                  (macro delete_homefile_dirs ((type ARG1))
                         (allow ARG1 homefile delete_dir))

                  (macro delete_homefile_fifo_files ((type ARG1))
                         (allow ARG1 homefile delete_fifo_file))

                  (macro delete_homefile_files ((type ARG1))
                         (allow ARG1 homefile delete_file))

                  (macro delete_homefile_lnk_files ((type ARG1))
                         (allow ARG1 homefile delete_lnk_file))

                  (macro delete_homefile_sock_files ((type ARG1))
                         (allow ARG1 homefile delete_sock_file))

                  (macro execute_homefile_files ((type ARG1))
                         (allow ARG1 homefile execute_file))

                  (macro homefile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 homefile ARG3 ARG4 ARG2)
                         (call addname_homefile_dirs (ARG1)))

                  (macro list_homefile_dirs ((type ARG1))
                         (allow ARG1 homefile list_dir))

                  (macro listinherited_homefile_dirs ((type ARG1))
                         (allow ARG1 homefile listinherited_dir))

                  (macro manage_homefile ((type ARG1))
                         (allow ARG1 homefile (allfiles (manage))))

                  (macro manage_homefile_blk_files ((type ARG1))
                         (allow ARG1 homefile manage_blk_file))

                  (macro manage_homefile_chr_files ((type ARG1))
                         (allow ARG1 homefile manage_chr_file))

                  (macro manage_homefile_dirs ((type ARG1))
                         (allow ARG1 homefile manage_dir))

                  (macro manage_homefile_fifo_files ((type ARG1))
                         (allow ARG1 homefile manage_fifo_file))

                  (macro manage_homefile_files ((type ARG1))
                         (allow ARG1 homefile manage_file))

                  (macro manage_homefile_lnk_files ((type ARG1))
                         (allow ARG1 homefile manage_lnk_file))

                  (macro manage_homefile_sock_files ((type ARG1))
                         (allow ARG1 homefile manage_sock_file))

                  (macro mapexecute_homefile_chr_files ((type ARG1))
                         (allow ARG1 homefile mapexecute_chr_file))

                  (macro mapexecute_homefile_files ((type ARG1))
                         (allow ARG1 homefile mapexecute_file))

                  (macro mounton_homefile ((type ARG1))
                         (allow ARG1 homefile (allfiles (mounton))))

                  (macro mounton_homefile_blk_files ((type ARG1))
                         (allow ARG1 homefile mounton_blk_file))

                  (macro mounton_homefile_chr_files ((type ARG1))
                         (allow ARG1 homefile mounton_chr_file))

                  (macro mounton_homefile_dirs ((type ARG1))
                         (allow ARG1 homefile mounton_dir))

                  (macro mounton_homefile_fifo_files ((type ARG1))
                         (allow ARG1 homefile mounton_fifo_file))

                  (macro mounton_homefile_files ((type ARG1))
                         (allow ARG1 homefile mounton_file))

                  (macro mounton_homefile_lnk_files ((type ARG1))
                         (allow ARG1 homefile mounton_lnk_file))

                  (macro mounton_homefile_sock_files ((type ARG1))
                         (allow ARG1 homefile mounton_sock_file))

                  (macro read_homefile ((type ARG1))
                         (allow ARG1 homefile (allfiles (read))))

                  (macro read_homefile_blk_files ((type ARG1))
                         (allow ARG1 homefile read_blk_file))

                  (macro read_homefile_chr_files ((type ARG1))
                         (allow ARG1 homefile read_chr_file))

                  (macro read_homefile_fifo_files ((type ARG1))
                         (allow ARG1 homefile read_fifo_file))

                  (macro read_homefile_files ((type ARG1))
                         (allow ARG1 homefile read_file))

                  (macro readinherited_homefile_blk_files ((type ARG1))
                         (allow ARG1 homefile readinherited_blk_file))

                  (macro readinherited_homefile_chr_files ((type ARG1))
                         (allow ARG1 homefile readinherited_chr_file))

                  (macro readinherited_homefile_fifo_files ((type ARG1))
                         (allow ARG1 homefile readinherited_fifo_file))

                  (macro readinherited_homefile_files ((type ARG1))
                         (allow ARG1 homefile readinherited_file))

                  (macro readinherited_homefile_sock_files ((type ARG1))
                         (allow ARG1 homefile readinherited_sock_file))

                  (macro read_homefile_lnk_files ((type ARG1))
                         (allow ARG1 homefile read_lnk_file))

                  (macro read_homefile_sock_files ((type ARG1))
                         (allow ARG1 homefile read_sock_file))

                  (macro readwrite_homefile ((type ARG1))
                         (allow ARG1 homefile (allfiles (readwrite))))

                  (macro readwrite_homefile_blk_files ((type ARG1))
                         (allow ARG1 homefile readwrite_blk_file))

                  (macro readwrite_homefile_chr_files ((type ARG1))
                         (allow ARG1 homefile readwrite_chr_file))

                  (macro readwrite_homefile_dirs ((type ARG1))
                         (allow ARG1 homefile readwrite_dir))

                  (macro readwrite_homefile_fifo_files ((type ARG1))
                         (allow ARG1 homefile readwrite_fifo_file))

                  (macro readwrite_homefile_files ((type ARG1))
                         (allow ARG1 homefile readwrite_file))

                  (macro readwriteinherited_homefile_blk_files ((type ARG1))
                         (allow ARG1 homefile readwriteinherited_blk_file))

                  (macro readwriteinherited_homefile_chr_files ((type ARG1))
                         (allow ARG1 homefile readwriteinherited_chr_file))

                  (macro readwriteinherited_homefile_dirs ((type ARG1))
                         (allow ARG1 homefile readwriteinherited_dir))

                  (macro readwriteinherited_homefile_fifo_files ((type ARG1))
                         (allow ARG1 homefile readwriteinherited_fifo_file))

                  (macro readwriteinherited_homefile_files ((type ARG1))
                         (allow ARG1 homefile readwriteinherited_file))

                  (macro readwriteinherited_homefile_sock_files ((type ARG1))
                         (allow ARG1 homefile readwriteinherited_sock_file))

                  (macro readwrite_homefile_lnk_files ((type ARG1))
                         (allow ARG1 homefile readwrite_lnk_file))

                  (macro readwrite_homefile_sock_files ((type ARG1))
                         (allow ARG1 homefile readwrite_sock_file))

                  (macro relabel_homefile ((type ARG1))
                         (allow ARG1 homefile (allfiles (relabel))))

                  (macro relabel_homefile_blk_files ((type ARG1))
                         (allow ARG1 homefile relabel_blk_file))

                  (macro relabel_homefile_chr_files ((type ARG1))
                         (allow ARG1 homefile relabel_chr_file))

                  (macro relabel_homefile_dirs ((type ARG1))
                         (allow ARG1 homefile relabel_dir))

                  (macro relabel_homefile_fifo_files ((type ARG1))
                         (allow ARG1 homefile relabel_fifo_file))

                  (macro relabel_homefile_files ((type ARG1))
                         (allow ARG1 homefile relabel_file))

                  (macro relabel_homefile_lnk_files ((type ARG1))
                         (allow ARG1 homefile relabel_lnk_file))

                  (macro relabel_homefile_sock_files ((type ARG1))
                         (allow ARG1 homefile relabel_sock_file))

                  (macro relabelfrom_homefile ((type ARG1))
                         (allow ARG1 homefile (allfiles (relabelfrom))))

                  (macro relabelfrom_homefile_blk_files ((type ARG1))
                         (allow ARG1 homefile relabelfrom_blk_file))

                  (macro relabelfrom_homefile_chr_files ((type ARG1))
                         (allow ARG1 homefile relabelfrom_chr_file))

                  (macro relabelfrom_homefile_dirs ((type ARG1))
                         (allow ARG1 homefile relabelfrom_dir))

                  (macro relabelfrom_homefile_fifo_files ((type ARG1))
                         (allow ARG1 homefile relabelfrom_fifo_file))

                  (macro relabelfrom_homefile_files ((type ARG1))
                         (allow ARG1 homefile relabelfrom_file))

                  (macro relabelfrom_homefile_lnk_files ((type ARG1))
                         (allow ARG1 homefile relabelfrom_lnk_file))

                  (macro relabelfrom_homefile_sock_files ((type ARG1))
                         (allow ARG1 homefile relabelfrom_sock_file))

                  (macro relabelto_homefile ((type ARG1))
                         (allow ARG1 homefile (allfiles (relabelto))))

                  (macro relabelto_homefile_blk_files ((type ARG1))
                         (allow ARG1 homefile relabelto_blk_file))

                  (macro relabelto_homefile_chr_files ((type ARG1))
                         (allow ARG1 homefile relabelto_chr_file))

                  (macro relabelto_homefile_dirs ((type ARG1))
                         (allow ARG1 homefile relabelto_dir))

                  (macro relabelto_homefile_fifo_files ((type ARG1))
                         (allow ARG1 homefile relabelto_fifo_file))

                  (macro relabelto_homefile_files ((type ARG1))
                         (allow ARG1 homefile relabelto_file))

                  (macro relabelto_homefile_lnk_files ((type ARG1))
                         (allow ARG1 homefile relabelto_lnk_file))

                  (macro relabelto_homefile_sock_files ((type ARG1))
                         (allow ARG1 homefile relabelto_sock_file))

                  (macro rename_homefile ((type ARG1))
                         (allow ARG1 homefile (allfiles (rename))))

                  (macro rename_homefile_blk_files ((type ARG1))
                         (allow ARG1 homefile rename_blk_file))

                  (macro rename_homefile_chr_files ((type ARG1))
                         (allow ARG1 homefile rename_chr_file))

                  (macro rename_homefile_dirs ((type ARG1))
                         (allow ARG1 homefile rename_dir))

                  (macro rename_homefile_fifo_files ((type ARG1))
                         (allow ARG1 homefile rename_fifo_file))

                  (macro rename_homefile_files ((type ARG1))
                         (allow ARG1 homefile rename_file))

                  (macro rename_homefile_lnk_files ((type ARG1))
                         (allow ARG1 homefile rename_lnk_file))

                  (macro rename_homefile_sock_files ((type ARG1))
                         (allow ARG1 homefile rename_sock_file))

                  (macro search_homefile_dirs ((type ARG1))
                         (allow ARG1 homefile search_dir))

                  (macro write_homefile ((type ARG1))
                         (allow ARG1 homefile (allfiles (write))))

                  (macro write_homefile_blk_files ((type ARG1))
                         (allow ARG1 homefile write_blk_file))

                  (macro write_homefile_chr_files ((type ARG1))
                         (allow ARG1 homefile write_chr_file))

                  (macro write_homefile_dirs ((type ARG1))
                         (allow ARG1 homefile write_dir))

                  (macro write_homefile_fifo_files ((type ARG1))
                         (allow ARG1 homefile write_fifo_file))

                  (macro write_homefile_files ((type ARG1))
                         (allow ARG1 homefile write_file))

                  (macro writeinherited_homefile_blk_files ((type ARG1))
                         (allow ARG1 homefile writeinherited_blk_file))

                  (macro writeinherited_homefile_chr_files ((type ARG1))
                         (allow ARG1 homefile writeinherited_chr_file))

                  (macro writeinherited_homefile_dirs ((type ARG1))
                         (allow ARG1 homefile writeinherited_dir))

                  (macro writeinherited_homefile_fifo_files ((type ARG1))
                         (allow ARG1 homefile writeinherited_fifo_file))

                  (macro writeinherited_homefile_files ((type ARG1))
                         (allow ARG1 homefile writeinherited_file))

                  (macro writeinherited_homefile_sock_files ((type ARG1))
                         (allow ARG1 homefile writeinherited_sock_file))

                  (macro write_homefile_lnk_files ((type ARG1))
                         (allow ARG1 homefile write_lnk_file))

                  (macro write_homefile_sock_files ((type ARG1))
                         (allow ARG1 homefile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .file.home.obj_base_template)
                  (blockinherit .file.home.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file

    (block auth

           ;;
           ;; Policy
           ;;

           (blockinherit file.obj_all_macro_template)

           (call exception.obj_type (obj_typeattr))

           (call .xattr.associate_filesystems (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   authfile_file_context
                   (.u
                    .r
                    authfile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   authfile)

                  (call .file.auth.obj_type (authfile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_authfile_dirs ((type ARG1))
                         (allow ARG1 authfile addname_dir))

                  (macro append_authfile_blk_files ((type ARG1))
                         (allow ARG1 authfile append_blk_file))

                  (macro append_authfile_chr_files ((type ARG1))
                         (allow ARG1 authfile append_chr_file))

                  (macro append_authfile_fifo_files ((type ARG1))
                         (allow ARG1 authfile append_fifo_file))

                  (macro append_authfile_files ((type ARG1))
                         (allow ARG1 authfile append_file))

                  (macro appendinherited_authfile_blk_files ((type ARG1))
                         (allow ARG1 authfile appendinherited_blk_file))

                  (macro appendinherited_authfile_chr_files ((type ARG1))
                         (allow ARG1 authfile appendinherited_chr_file))

                  (macro appendinherited_authfile_fifo_files ((type ARG1))
                         (allow ARG1 authfile appendinherited_fifo_file))

                  (macro appendinherited_authfile_files ((type ARG1))
                         (allow ARG1 authfile appendinherited_file))

                  (macro authfile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 authfile ARG3 ARG4 ARG2)
                         (call addname_authfile_dirs (ARG1)))

                  (macro create_authfile ((type ARG1))
                         (allow ARG1 authfile (allfiles (create))))

                  (macro create_authfile_blk_files ((type ARG1))
                         (allow ARG1 authfile create_blk_file))

                  (macro create_authfile_chr_files ((type ARG1))
                         (allow ARG1 authfile create_chr_file))

                  (macro create_authfile_dirs ((type ARG1))
                         (allow ARG1 authfile create_dir))

                  (macro create_authfile_fifo_files ((type ARG1))
                         (allow ARG1 authfile create_fifo_file))

                  (macro create_authfile_files ((type ARG1))
                         (allow ARG1 authfile create_file))

                  (macro create_authfile_lnk_files ((type ARG1))
                         (allow ARG1 authfile create_lnk_file))

                  (macro create_authfile_sock_files ((type ARG1))
                         (allow ARG1 authfile create_sock_file))

                  (macro deletename_authfile_dirs ((type ARG1))
                         (allow ARG1 authfile deletename_dir))

                  (macro delete_authfile ((type ARG1))
                         (allow ARG1 authfile (allfiles (delete))))

                  (macro delete_authfile_blk_files ((type ARG1))
                         (allow ARG1 authfile delete_blk_file))

                  (macro delete_authfile_chr_files ((type ARG1))
                         (allow ARG1 authfile delete_chr_file))

                  (macro delete_authfile_dirs ((type ARG1))
                         (allow ARG1 authfile delete_dir))

                  (macro delete_authfile_fifo_files ((type ARG1))
                         (allow ARG1 authfile delete_fifo_file))

                  (macro delete_authfile_files ((type ARG1))
                         (allow ARG1 authfile delete_file))

                  (macro delete_authfile_lnk_files ((type ARG1))
                         (allow ARG1 authfile delete_lnk_file))

                  (macro delete_authfile_sock_files ((type ARG1))
                         (allow ARG1 authfile delete_sock_file))

                  (macro execute_authfile_files ((type ARG1))
                         (allow ARG1 authfile execute_file))

                  (macro list_authfile_dirs ((type ARG1))
                         (allow ARG1 authfile list_dir))

                  (macro listinherited_authfile_dirs ((type ARG1))
                         (allow ARG1 authfile listinherited_dir))

                  (macro manage_authfile ((type ARG1))
                         (allow ARG1 authfile (allfiles (manage))))

                  (macro manage_authfile_blk_files ((type ARG1))
                         (allow ARG1 authfile manage_blk_file))

                  (macro manage_authfile_chr_files ((type ARG1))
                         (allow ARG1 authfile manage_chr_file))

                  (macro manage_authfile_dirs ((type ARG1))
                         (allow ARG1 authfile manage_dir))

                  (macro manage_authfile_fifo_files ((type ARG1))
                         (allow ARG1 authfile manage_fifo_file))

                  (macro manage_authfile_files ((type ARG1))
                         (allow ARG1 authfile manage_file))

                  (macro manage_authfile_lnk_files ((type ARG1))
                         (allow ARG1 authfile manage_lnk_file))

                  (macro manage_authfile_sock_files ((type ARG1))
                         (allow ARG1 authfile manage_sock_file))

                  (macro mapexecute_authfile_chr_files ((type ARG1))
                         (allow ARG1 authfile mapexecute_chr_file))

                  (macro mapexecute_authfile_files ((type ARG1))
                         (allow ARG1 authfile mapexecute_file))

                  (macro mounton_authfile ((type ARG1))
                         (allow ARG1 authfile (allfiles (mounton))))

                  (macro mounton_authfile_blk_files ((type ARG1))
                         (allow ARG1 authfile mounton_blk_file))

                  (macro mounton_authfile_chr_files ((type ARG1))
                         (allow ARG1 authfile mounton_chr_file))

                  (macro mounton_authfile_dirs ((type ARG1))
                         (allow ARG1 authfile mounton_dir))

                  (macro mounton_authfile_fifo_files ((type ARG1))
                         (allow ARG1 authfile mounton_fifo_file))

                  (macro mounton_authfile_files ((type ARG1))
                         (allow ARG1 authfile mounton_file))

                  (macro mounton_authfile_lnk_files ((type ARG1))
                         (allow ARG1 authfile mounton_lnk_file))

                  (macro mounton_authfile_sock_files ((type ARG1))
                         (allow ARG1 authfile mounton_sock_file))

                  (macro read_authfile ((type ARG1))
                         (allow ARG1 authfile (allfiles (read))))

                  (macro read_authfile_blk_files ((type ARG1))
                         (allow ARG1 authfile read_blk_file))

                  (macro read_authfile_chr_files ((type ARG1))
                         (allow ARG1 authfile read_chr_file))

                  (macro read_authfile_fifo_files ((type ARG1))
                         (allow ARG1 authfile read_fifo_file))

                  (macro read_authfile_files ((type ARG1))
                         (allow ARG1 authfile read_file))

                  (macro readinherited_authfile_blk_files ((type ARG1))
                         (allow ARG1 authfile readinherited_blk_file))

                  (macro readinherited_authfile_chr_files ((type ARG1))
                         (allow ARG1 authfile readinherited_chr_file))

                  (macro readinherited_authfile_fifo_files ((type ARG1))
                         (allow ARG1 authfile readinherited_fifo_file))

                  (macro readinherited_authfile_files ((type ARG1))
                         (allow ARG1 authfile readinherited_file))

                  (macro readinherited_authfile_sock_files ((type ARG1))
                         (allow ARG1 authfile readinherited_sock_file))

                  (macro read_authfile_lnk_files ((type ARG1))
                         (allow ARG1 authfile read_lnk_file))

                  (macro read_authfile_sock_files ((type ARG1))
                         (allow ARG1 authfile read_sock_file))

                  (macro readwrite_authfile ((type ARG1))
                         (allow ARG1 authfile (allfiles (readwrite))))

                  (macro readwrite_authfile_blk_files ((type ARG1))
                         (allow ARG1 authfile readwrite_blk_file))

                  (macro readwrite_authfile_chr_files ((type ARG1))
                         (allow ARG1 authfile readwrite_chr_file))

                  (macro readwrite_authfile_dirs ((type ARG1))
                         (allow ARG1 authfile readwrite_dir))

                  (macro readwrite_authfile_fifo_files ((type ARG1))
                         (allow ARG1 authfile readwrite_fifo_file))

                  (macro readwrite_authfile_files ((type ARG1))
                         (allow ARG1 authfile readwrite_file))

                  (macro readwriteinherited_authfile_blk_files ((type ARG1))
                         (allow ARG1 authfile readwriteinherited_blk_file))

                  (macro readwriteinherited_authfile_chr_files ((type ARG1))
                         (allow ARG1 authfile readwriteinherited_chr_file))

                  (macro readwriteinherited_authfile_dirs ((type ARG1))
                         (allow ARG1 authfile readwriteinherited_dir))

                  (macro readwriteinherited_authfile_fifo_files ((type ARG1))
                         (allow ARG1 authfile readwriteinherited_fifo_file))

                  (macro readwriteinherited_authfile_files ((type ARG1))
                         (allow ARG1 authfile readwriteinherited_file))

                  (macro readwriteinherited_authfile_sock_files ((type ARG1))
                         (allow ARG1 authfile readwriteinherited_sock_file))

                  (macro readwrite_authfile_lnk_files ((type ARG1))
                         (allow ARG1 authfile readwrite_lnk_file))

                  (macro readwrite_authfile_sock_files ((type ARG1))
                         (allow ARG1 authfile readwrite_sock_file))

                  (macro relabel_authfile ((type ARG1))
                         (allow ARG1 authfile (allfiles (relabel))))

                  (macro relabel_authfile_blk_files ((type ARG1))
                         (allow ARG1 authfile relabel_blk_file))

                  (macro relabel_authfile_chr_files ((type ARG1))
                         (allow ARG1 authfile relabel_chr_file))

                  (macro relabel_authfile_dirs ((type ARG1))
                         (allow ARG1 authfile relabel_dir))

                  (macro relabel_authfile_fifo_files ((type ARG1))
                         (allow ARG1 authfile relabel_fifo_file))

                  (macro relabel_authfile_files ((type ARG1))
                         (allow ARG1 authfile relabel_file))

                  (macro relabel_authfile_lnk_files ((type ARG1))
                         (allow ARG1 authfile relabel_lnk_file))

                  (macro relabel_authfile_sock_files ((type ARG1))
                         (allow ARG1 authfile relabel_sock_file))

                  (macro relabelfrom_authfile ((type ARG1))
                         (allow ARG1 authfile (allfiles (relabelfrom))))

                  (macro relabelfrom_authfile_blk_files ((type ARG1))
                         (allow ARG1 authfile relabelfrom_blk_file))

                  (macro relabelfrom_authfile_chr_files ((type ARG1))
                         (allow ARG1 authfile relabelfrom_chr_file))

                  (macro relabelfrom_authfile_dirs ((type ARG1))
                         (allow ARG1 authfile relabelfrom_dir))

                  (macro relabelfrom_authfile_fifo_files ((type ARG1))
                         (allow ARG1 authfile relabelfrom_fifo_file))

                  (macro relabelfrom_authfile_files ((type ARG1))
                         (allow ARG1 authfile relabelfrom_file))

                  (macro relabelfrom_authfile_lnk_files ((type ARG1))
                         (allow ARG1 authfile relabelfrom_lnk_file))

                  (macro relabelfrom_authfile_sock_files ((type ARG1))
                         (allow ARG1 authfile relabelfrom_sock_file))

                  (macro relabelto_authfile ((type ARG1))
                         (allow ARG1 authfile (allfiles (relabelto))))

                  (macro relabelto_authfile_blk_files ((type ARG1))
                         (allow ARG1 authfile relabelto_blk_file))

                  (macro relabelto_authfile_chr_files ((type ARG1))
                         (allow ARG1 authfile relabelto_chr_file))

                  (macro relabelto_authfile_dirs ((type ARG1))
                         (allow ARG1 authfile relabelto_dir))

                  (macro relabelto_authfile_fifo_files ((type ARG1))
                         (allow ARG1 authfile relabelto_fifo_file))

                  (macro relabelto_authfile_files ((type ARG1))
                         (allow ARG1 authfile relabelto_file))

                  (macro relabelto_authfile_lnk_files ((type ARG1))
                         (allow ARG1 authfile relabelto_lnk_file))

                  (macro relabelto_authfile_sock_files ((type ARG1))
                         (allow ARG1 authfile relabelto_sock_file))

                  (macro rename_authfile ((type ARG1))
                         (allow ARG1 authfile (allfiles (rename))))

                  (macro rename_authfile_blk_files ((type ARG1))
                         (allow ARG1 authfile rename_blk_file))

                  (macro rename_authfile_chr_files ((type ARG1))
                         (allow ARG1 authfile rename_chr_file))

                  (macro rename_authfile_dirs ((type ARG1))
                         (allow ARG1 authfile rename_dir))

                  (macro rename_authfile_fifo_files ((type ARG1))
                         (allow ARG1 authfile rename_fifo_file))

                  (macro rename_authfile_files ((type ARG1))
                         (allow ARG1 authfile rename_file))

                  (macro rename_authfile_lnk_files ((type ARG1))
                         (allow ARG1 authfile rename_lnk_file))

                  (macro rename_authfile_sock_files ((type ARG1))
                         (allow ARG1 authfile rename_sock_file))

                  (macro search_authfile_dirs ((type ARG1))
                         (allow ARG1 authfile search_dir))

                  (macro write_authfile ((type ARG1))
                         (allow ARG1 authfile (allfiles (write))))

                  (macro write_authfile_blk_files ((type ARG1))
                         (allow ARG1 authfile write_blk_file))

                  (macro write_authfile_chr_files ((type ARG1))
                         (allow ARG1 authfile write_chr_file))

                  (macro write_authfile_dirs ((type ARG1))
                         (allow ARG1 authfile write_dir))

                  (macro write_authfile_fifo_files ((type ARG1))
                         (allow ARG1 authfile write_fifo_file))

                  (macro write_authfile_files ((type ARG1))
                         (allow ARG1 authfile write_file))

                  (macro writeinherited_authfile_blk_files ((type ARG1))
                         (allow ARG1 authfile writeinherited_blk_file))

                  (macro writeinherited_authfile_chr_files ((type ARG1))
                         (allow ARG1 authfile writeinherited_chr_file))

                  (macro writeinherited_authfile_dirs ((type ARG1))
                         (allow ARG1 authfile writeinherited_dir))

                  (macro writeinherited_authfile_fifo_files ((type ARG1))
                         (allow ARG1 authfile writeinherited_fifo_file))

                  (macro writeinherited_authfile_files ((type ARG1))
                         (allow ARG1 authfile writeinherited_file))

                  (macro writeinherited_authfile_sock_files ((type ARG1))
                         (allow ARG1 authfile writeinherited_sock_file))

                  (macro write_authfile_lnk_files ((type ARG1))
                         (allow ARG1 authfile write_lnk_file))

                  (macro write_authfile_sock_files ((type ARG1))
                         (allow ARG1 authfile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .file.auth.obj_base_template)
                  (blockinherit .file.auth.obj_macro_template))

           (block relabelto

                  ;;
                  ;; Policy
                  ;;

                  (blockinherit .subj.subj_all_macro_template)

                  (typeattribute
                   not_subj_typeattr)

                  (typeattributeset
                   not_subj_typeattr
                   (not
                    subj_typeattr))

                  (neverallow not_subj_typeattr obj_typeattr
                              (file (relabelto)))

                  (call subj_type (unconfined.subj_typeattr)))

           (block write

                  ;;
                  ;; Policy
                  ;;

                  (blockinherit .subj.subj_all_macro_template)

                  (typeattribute
                   not_subj_typeattr)

                  (typeattributeset
                   not_subj_typeattr
                   (not
                    subj_typeattr))

                  (neverallow not_subj_typeattr obj_typeattr
                              (file (append write)))
                  
                  (call subj_type (unconfined.subj_typeattr))))

    (block exceptauth

           ;;
           ;; Policy
           ;;

           (blockinherit obj_all_macro_template)

           (typeattributeset
            obj_typeattr
            (and
             file.obj_typeattr
             (not
              (auth.obj_typeattr))))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file

    ;;
    ;; Contexts
    ;;

    (filecon
     "/usr/lib"
     dir
     libfile_file_context)
    (filecon
     "/usr/lib/.*"
     any
     libfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro datafile_obj_type_transition_libfile ((type ARG1))
           (call .file.datafile_obj_type_transition
                 (ARG1 libfile dir "lib")))

    (macro obj_type_transition_libfile ((type ARG1))
           (call .sys.rootfile_obj_type_transition
                 (ARG1 libfile dir "lib")))

    ;;
    ;; Policy
    ;;

    (blockinherit lib.obj_template)

    (call datafile_obj_type_transition_libfile (unconfined.subj_typeattr))
    (call obj_type_transition_libfile (unconfined.subj_typeattr))

    (block lib

           ;;
           ;; Policy
           ;;

           (blockinherit file.obj_all_macro_template)

           (call file.obj_type (obj_typeattr))

           (call .xattr.associate_filesystems (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   libfile_file_context
                   (.u
                    .r
                    libfile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   libfile)

                  (call .file.lib.obj_type (libfile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_libfile_dirs ((type ARG1))
                         (allow ARG1 libfile addname_dir))

                  (macro append_libfile_blk_files ((type ARG1))
                         (allow ARG1 libfile append_blk_file))

                  (macro append_libfile_chr_files ((type ARG1))
                         (allow ARG1 libfile append_chr_file))

                  (macro append_libfile_fifo_files ((type ARG1))
                         (allow ARG1 libfile append_fifo_file))

                  (macro append_libfile_files ((type ARG1))
                         (allow ARG1 libfile append_file))

                  (macro appendinherited_libfile_blk_files ((type ARG1))
                         (allow ARG1 libfile appendinherited_blk_file))

                  (macro appendinherited_libfile_chr_files ((type ARG1))
                         (allow ARG1 libfile appendinherited_chr_file))

                  (macro appendinherited_libfile_fifo_files ((type ARG1))
                         (allow ARG1 libfile appendinherited_fifo_file))

                  (macro appendinherited_libfile_files ((type ARG1))
                         (allow ARG1 libfile appendinherited_file))

                  (macro create_libfile ((type ARG1))
                         (allow ARG1 libfile (allfiles (create))))

                  (macro create_libfile_blk_files ((type ARG1))
                         (allow ARG1 libfile create_blk_file))

                  (macro create_libfile_chr_files ((type ARG1))
                         (allow ARG1 libfile create_chr_file))

                  (macro create_libfile_dirs ((type ARG1))
                         (allow ARG1 libfile create_dir))

                  (macro create_libfile_fifo_files ((type ARG1))
                         (allow ARG1 libfile create_fifo_file))

                  (macro create_libfile_files ((type ARG1))
                         (allow ARG1 libfile create_file))

                  (macro create_libfile_lnk_files ((type ARG1))
                         (allow ARG1 libfile create_lnk_file))

                  (macro create_libfile_sock_files ((type ARG1))
                         (allow ARG1 libfile create_sock_file))

                  (macro deletename_libfile_dirs ((type ARG1))
                         (allow ARG1 libfile deletename_dir))

                  (macro delete_libfile ((type ARG1))
                         (allow ARG1 libfile (allfiles (delete))))

                  (macro delete_libfile_blk_files ((type ARG1))
                         (allow ARG1 libfile delete_blk_file))

                  (macro delete_libfile_chr_files ((type ARG1))
                         (allow ARG1 libfile delete_chr_file))

                  (macro delete_libfile_dirs ((type ARG1))
                         (allow ARG1 libfile delete_dir))

                  (macro delete_libfile_fifo_files ((type ARG1))
                         (allow ARG1 libfile delete_fifo_file))

                  (macro delete_libfile_files ((type ARG1))
                         (allow ARG1 libfile delete_file))

                  (macro delete_libfile_lnk_files ((type ARG1))
                         (allow ARG1 libfile delete_lnk_file))

                  (macro delete_libfile_sock_files ((type ARG1))
                         (allow ARG1 libfile delete_sock_file))

                  (macro execute_libfile_files ((type ARG1))
                         (allow ARG1 libfile execute_file))

                  (macro libfile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 libfile ARG3 ARG4 ARG2)
                         (call addname_libfile_dirs (ARG1)))

                  (macro list_libfile_dirs ((type ARG1))
                         (allow ARG1 libfile list_dir))

                  (macro listinherited_libfile_dirs ((type ARG1))
                         (allow ARG1 libfile listinherited_dir))

                  (macro manage_libfile ((type ARG1))
                         (allow ARG1 libfile (allfiles (manage))))

                  (macro manage_libfile_blk_files ((type ARG1))
                         (allow ARG1 libfile manage_blk_file))

                  (macro manage_libfile_chr_files ((type ARG1))
                         (allow ARG1 libfile manage_chr_file))

                  (macro manage_libfile_dirs ((type ARG1))
                         (allow ARG1 libfile manage_dir))

                  (macro manage_libfile_fifo_files ((type ARG1))
                         (allow ARG1 libfile manage_fifo_file))

                  (macro manage_libfile_files ((type ARG1))
                         (allow ARG1 libfile manage_file))

                  (macro manage_libfile_lnk_files ((type ARG1))
                         (allow ARG1 libfile manage_lnk_file))

                  (macro manage_libfile_sock_files ((type ARG1))
                         (allow ARG1 libfile manage_sock_file))

                  (macro mapexecute_libfile_chr_files ((type ARG1))
                         (allow ARG1 libfile mapexecute_chr_file))

                  (macro mapexecute_libfile_files ((type ARG1))
                         (allow ARG1 libfile mapexecute_file))

                  (macro mounton_libfile ((type ARG1))
                         (allow ARG1 libfile (allfiles (mounton))))

                  (macro mounton_libfile_blk_files ((type ARG1))
                         (allow ARG1 libfile mounton_blk_file))

                  (macro mounton_libfile_chr_files ((type ARG1))
                         (allow ARG1 libfile mounton_chr_file))

                  (macro mounton_libfile_dirs ((type ARG1))
                         (allow ARG1 libfile mounton_dir))

                  (macro mounton_libfile_fifo_files ((type ARG1))
                         (allow ARG1 libfile mounton_fifo_file))

                  (macro mounton_libfile_files ((type ARG1))
                         (allow ARG1 libfile mounton_file))

                  (macro mounton_libfile_lnk_files ((type ARG1))
                         (allow ARG1 libfile mounton_lnk_file))

                  (macro mounton_libfile_sock_files ((type ARG1))
                         (allow ARG1 libfile mounton_sock_file))

                  (macro read_libfile ((type ARG1))
                         (allow ARG1 libfile (allfiles (read))))

                  (macro read_libfile_blk_files ((type ARG1))
                         (allow ARG1 libfile read_blk_file))

                  (macro read_libfile_chr_files ((type ARG1))
                         (allow ARG1 libfile read_chr_file))

                  (macro read_libfile_fifo_files ((type ARG1))
                         (allow ARG1 libfile read_fifo_file))

                  (macro read_libfile_files ((type ARG1))
                         (allow ARG1 libfile read_file))

                  (macro readinherited_libfile_blk_files ((type ARG1))
                         (allow ARG1 libfile readinherited_blk_file))

                  (macro readinherited_libfile_chr_files ((type ARG1))
                         (allow ARG1 libfile readinherited_chr_file))

                  (macro readinherited_libfile_fifo_files ((type ARG1))
                         (allow ARG1 libfile readinherited_fifo_file))

                  (macro readinherited_libfile_files ((type ARG1))
                         (allow ARG1 libfile readinherited_file))

                  (macro readinherited_libfile_sock_files ((type ARG1))
                         (allow ARG1 libfile readinherited_sock_file))

                  (macro read_libfile_lnk_files ((type ARG1))
                         (allow ARG1 libfile read_lnk_file))

                  (macro read_libfile_sock_files ((type ARG1))
                         (allow ARG1 libfile read_sock_file))

                  (macro readwrite_libfile ((type ARG1))
                         (allow ARG1 libfile (allfiles (readwrite))))

                  (macro readwrite_libfile_blk_files ((type ARG1))
                         (allow ARG1 libfile readwrite_blk_file))

                  (macro readwrite_libfile_chr_files ((type ARG1))
                         (allow ARG1 libfile readwrite_chr_file))

                  (macro readwrite_libfile_dirs ((type ARG1))
                         (allow ARG1 libfile readwrite_dir))

                  (macro readwrite_libfile_fifo_files ((type ARG1))
                         (allow ARG1 libfile readwrite_fifo_file))

                  (macro readwrite_libfile_files ((type ARG1))
                         (allow ARG1 libfile readwrite_file))

                  (macro readwriteinherited_libfile_blk_files ((type ARG1))
                         (allow ARG1 libfile readwriteinherited_blk_file))

                  (macro readwriteinherited_libfile_chr_files ((type ARG1))
                         (allow ARG1 libfile readwriteinherited_chr_file))

                  (macro readwriteinherited_libfile_dirs ((type ARG1))
                         (allow ARG1 libfile readwriteinherited_dir))

                  (macro readwriteinherited_libfile_fifo_files ((type ARG1))
                         (allow ARG1 libfile readwriteinherited_fifo_file))

                  (macro readwriteinherited_libfile_files ((type ARG1))
                         (allow ARG1 libfile readwriteinherited_file))

                  (macro readwriteinherited_libfile_sock_files ((type ARG1))
                         (allow ARG1 libfile readwriteinherited_sock_file))

                  (macro readwrite_libfile_lnk_files ((type ARG1))
                         (allow ARG1 libfile readwrite_lnk_file))

                  (macro readwrite_libfile_sock_files ((type ARG1))
                         (allow ARG1 libfile readwrite_sock_file))

                  (macro relabel_libfile ((type ARG1))
                         (allow ARG1 libfile (allfiles (relabel))))

                  (macro relabel_libfile_blk_files ((type ARG1))
                         (allow ARG1 libfile relabel_blk_file))

                  (macro relabel_libfile_chr_files ((type ARG1))
                         (allow ARG1 libfile relabel_chr_file))

                  (macro relabel_libfile_dirs ((type ARG1))
                         (allow ARG1 libfile relabel_dir))

                  (macro relabel_libfile_fifo_files ((type ARG1))
                         (allow ARG1 libfile relabel_fifo_file))

                  (macro relabel_libfile_files ((type ARG1))
                         (allow ARG1 libfile relabel_file))

                  (macro relabel_libfile_lnk_files ((type ARG1))
                         (allow ARG1 libfile relabel_lnk_file))

                  (macro relabel_libfile_sock_files ((type ARG1))
                         (allow ARG1 libfile relabel_sock_file))

                  (macro relabelfrom_libfile ((type ARG1))
                         (allow ARG1 libfile (allfiles (relabelfrom))))

                  (macro relabelfrom_libfile_blk_files ((type ARG1))
                         (allow ARG1 libfile relabelfrom_blk_file))

                  (macro relabelfrom_libfile_chr_files ((type ARG1))
                         (allow ARG1 libfile relabelfrom_chr_file))

                  (macro relabelfrom_libfile_dirs ((type ARG1))
                         (allow ARG1 libfile relabelfrom_dir))

                  (macro relabelfrom_libfile_fifo_files ((type ARG1))
                         (allow ARG1 libfile relabelfrom_fifo_file))

                  (macro relabelfrom_libfile_files ((type ARG1))
                         (allow ARG1 libfile relabelfrom_file))

                  (macro relabelfrom_libfile_lnk_files ((type ARG1))
                         (allow ARG1 libfile relabelfrom_lnk_file))

                  (macro relabelfrom_libfile_sock_files ((type ARG1))
                         (allow ARG1 libfile relabelfrom_sock_file))

                  (macro relabelto_libfile ((type ARG1))
                         (allow ARG1 libfile (allfiles (relabelto))))

                  (macro relabelto_libfile_blk_files ((type ARG1))
                         (allow ARG1 libfile relabelto_blk_file))

                  (macro relabelto_libfile_chr_files ((type ARG1))
                         (allow ARG1 libfile relabelto_chr_file))

                  (macro relabelto_libfile_dirs ((type ARG1))
                         (allow ARG1 libfile relabelto_dir))

                  (macro relabelto_libfile_fifo_files ((type ARG1))
                         (allow ARG1 libfile relabelto_fifo_file))

                  (macro relabelto_libfile_files ((type ARG1))
                         (allow ARG1 libfile relabelto_file))

                  (macro relabelto_libfile_lnk_files ((type ARG1))
                         (allow ARG1 libfile relabelto_lnk_file))

                  (macro relabelto_libfile_sock_files ((type ARG1))
                         (allow ARG1 libfile relabelto_sock_file))

                  (macro rename_libfile ((type ARG1))
                         (allow ARG1 libfile (allfiles (rename))))

                  (macro rename_libfile_blk_files ((type ARG1))
                         (allow ARG1 libfile rename_blk_file))

                  (macro rename_libfile_chr_files ((type ARG1))
                         (allow ARG1 libfile rename_chr_file))

                  (macro rename_libfile_dirs ((type ARG1))
                         (allow ARG1 libfile rename_dir))

                  (macro rename_libfile_fifo_files ((type ARG1))
                         (allow ARG1 libfile rename_fifo_file))

                  (macro rename_libfile_files ((type ARG1))
                         (allow ARG1 libfile rename_file))

                  (macro rename_libfile_lnk_files ((type ARG1))
                         (allow ARG1 libfile rename_lnk_file))

                  (macro rename_libfile_sock_files ((type ARG1))
                         (allow ARG1 libfile rename_sock_file))

                  (macro search_libfile_dirs ((type ARG1))
                         (allow ARG1 libfile search_dir))

                  (macro write_libfile ((type ARG1))
                         (allow ARG1 libfile (allfiles (write))))

                  (macro write_libfile_blk_files ((type ARG1))
                         (allow ARG1 libfile write_blk_file))

                  (macro write_libfile_chr_files ((type ARG1))
                         (allow ARG1 libfile write_chr_file))

                  (macro write_libfile_dirs ((type ARG1))
                         (allow ARG1 libfile write_dir))

                  (macro write_libfile_fifo_files ((type ARG1))
                         (allow ARG1 libfile write_fifo_file))

                  (macro write_libfile_files ((type ARG1))
                         (allow ARG1 libfile write_file))

                  (macro writeinherited_libfile_blk_files ((type ARG1))
                         (allow ARG1 libfile writeinherited_blk_file))

                  (macro writeinherited_libfile_chr_files ((type ARG1))
                         (allow ARG1 libfile writeinherited_chr_file))

                  (macro writeinherited_libfile_dirs ((type ARG1))
                         (allow ARG1 libfile writeinherited_dir))

                  (macro writeinherited_libfile_fifo_files ((type ARG1))
                         (allow ARG1 libfile writeinherited_fifo_file))

                  (macro writeinherited_libfile_files ((type ARG1))
                         (allow ARG1 libfile writeinherited_file))

                  (macro writeinherited_libfile_sock_files ((type ARG1))
                         (allow ARG1 libfile writeinherited_sock_file))

                  (macro write_libfile_lnk_files ((type ARG1))
                         (allow ARG1 libfile write_lnk_file))

                  (macro write_libfile_sock_files ((type ARG1))
                         (allow ARG1 libfile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .file.lib.obj_base_template)
                  (blockinherit .file.lib.obj_macro_template))))

(block textrel

       ;;
       ;; Macros
       ;;

       (macro execmod_libfile_files ((type ARG1))
              (allow ARG1 libfile (file (execmod))))

       ;;
       ;; Policy
       ;;

       (blockinherit .file.lib.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .ssl.obj_type_transition_certfile (unconfined.subj_typeattr)))

(block ssl

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/ssl"
        dir
        certfile_file_context)
       (filecon
        "/etc/ssl/.*"
        any
        certfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro getattr_certfile_files ((type ARG1))
              (allow ARG1 certfile (file (getattr))))

       (macro obj_type_transition_certfile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 certfile dir "ssl")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.cert.obj_template)

       (call .file.cert.exception.obj_type (certfile))

       (block read

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (call read_certfile_files (subj_typeattr))
              (call read_certfile_lnk_files (subj_typeattr))
              (call list_certfile_dirs (subj_typeattr))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file

    (block sec

           ;;
           ;; Macros
           ;;

           (macro getattr_all_files ((type ARG1))
                  (allow ARG1 obj_typeattr (file (getattr))))

           ;;
           ;; Policy
           ;;

           (blockinherit file.obj_all_macro_template)

           (call exception.obj_type (obj_typeattr))

           (call .xattr.associate_filesystems (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   secfile_file_context
                   (.u
                    .r
                    secfile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   secfile)

                  (call .file.sec.obj_type (secfile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_secfile_dirs ((type ARG1))
                         (allow ARG1 secfile addname_dir))

                  (macro append_secfile_blk_files ((type ARG1))
                         (allow ARG1 secfile append_blk_file))

                  (macro append_secfile_chr_files ((type ARG1))
                         (allow ARG1 secfile append_chr_file))

                  (macro append_secfile_fifo_files ((type ARG1))
                         (allow ARG1 secfile append_fifo_file))

                  (macro append_secfile_files ((type ARG1))
                         (allow ARG1 secfile append_file))

                  (macro appendinherited_secfile_blk_files ((type ARG1))
                         (allow ARG1 secfile appendinherited_blk_file))

                  (macro appendinherited_secfile_chr_files ((type ARG1))
                         (allow ARG1 secfile appendinherited_chr_file))

                  (macro appendinherited_secfile_fifo_files ((type ARG1))
                         (allow ARG1 secfile appendinherited_fifo_file))

                  (macro appendinherited_secfile_files ((type ARG1))
                         (allow ARG1 secfile appendinherited_file))

                  (macro create_secfile ((type ARG1))
                         (allow ARG1 secfile (allfiles (create))))

                  (macro create_secfile_blk_files ((type ARG1))
                         (allow ARG1 secfile create_blk_file))

                  (macro create_secfile_chr_files ((type ARG1))
                         (allow ARG1 secfile create_chr_file))

                  (macro create_secfile_dirs ((type ARG1))
                         (allow ARG1 secfile create_dir))

                  (macro create_secfile_fifo_files ((type ARG1))
                         (allow ARG1 secfile create_fifo_file))

                  (macro create_secfile_files ((type ARG1))
                         (allow ARG1 secfile create_file))

                  (macro create_secfile_lnk_files ((type ARG1))
                         (allow ARG1 secfile create_lnk_file))

                  (macro create_secfile_sock_files ((type ARG1))
                         (allow ARG1 secfile create_sock_file))

                  (macro deletename_secfile_dirs ((type ARG1))
                         (allow ARG1 secfile deletename_dir))

                  (macro delete_secfile ((type ARG1))
                         (allow ARG1 secfile (allfiles (delete))))

                  (macro delete_secfile_blk_files ((type ARG1))
                         (allow ARG1 secfile delete_blk_file))

                  (macro delete_secfile_chr_files ((type ARG1))
                         (allow ARG1 secfile delete_chr_file))

                  (macro delete_secfile_dirs ((type ARG1))
                         (allow ARG1 secfile delete_dir))

                  (macro delete_secfile_fifo_files ((type ARG1))
                         (allow ARG1 secfile delete_fifo_file))

                  (macro delete_secfile_files ((type ARG1))
                         (allow ARG1 secfile delete_file))

                  (macro delete_secfile_lnk_files ((type ARG1))
                         (allow ARG1 secfile delete_lnk_file))

                  (macro delete_secfile_sock_files ((type ARG1))
                         (allow ARG1 secfile delete_sock_file))

                  (macro execute_secfile_files ((type ARG1))
                         (allow ARG1 secfile execute_file))

                  (macro list_secfile_dirs ((type ARG1))
                         (allow ARG1 secfile list_dir))

                  (macro listinherited_secfile_dirs ((type ARG1))
                         (allow ARG1 secfile listinherited_dir))

                  (macro manage_secfile ((type ARG1))
                         (allow ARG1 secfile (allfiles (manage))))

                  (macro manage_secfile_blk_files ((type ARG1))
                         (allow ARG1 secfile manage_blk_file))

                  (macro manage_secfile_chr_files ((type ARG1))
                         (allow ARG1 secfile manage_chr_file))

                  (macro manage_secfile_dirs ((type ARG1))
                         (allow ARG1 secfile manage_dir))

                  (macro manage_secfile_fifo_files ((type ARG1))
                         (allow ARG1 secfile manage_fifo_file))

                  (macro manage_secfile_files ((type ARG1))
                         (allow ARG1 secfile manage_file))

                  (macro manage_secfile_lnk_files ((type ARG1))
                         (allow ARG1 secfile manage_lnk_file))

                  (macro manage_secfile_sock_files ((type ARG1))
                         (allow ARG1 secfile manage_sock_file))

                  (macro mapexecute_secfile_chr_files ((type ARG1))
                         (allow ARG1 secfile mapexecute_chr_file))

                  (macro mapexecute_secfile_files ((type ARG1))
                         (allow ARG1 secfile mapexecute_file))

                  (macro mounton_secfile ((type ARG1))
                         (allow ARG1 secfile (allfiles (mounton))))

                  (macro mounton_secfile_blk_files ((type ARG1))
                         (allow ARG1 secfile mounton_blk_file))

                  (macro mounton_secfile_chr_files ((type ARG1))
                         (allow ARG1 secfile mounton_chr_file))

                  (macro mounton_secfile_dirs ((type ARG1))
                         (allow ARG1 secfile mounton_dir))

                  (macro mounton_secfile_fifo_files ((type ARG1))
                         (allow ARG1 secfile mounton_fifo_file))

                  (macro mounton_secfile_files ((type ARG1))
                         (allow ARG1 secfile mounton_file))

                  (macro mounton_secfile_lnk_files ((type ARG1))
                         (allow ARG1 secfile mounton_lnk_file))

                  (macro mounton_secfile_sock_files ((type ARG1))
                         (allow ARG1 secfile mounton_sock_file))

                  (macro read_secfile ((type ARG1))
                         (allow ARG1 secfile (allfiles (read))))

                  (macro read_secfile_blk_files ((type ARG1))
                         (allow ARG1 secfile read_blk_file))

                  (macro read_secfile_chr_files ((type ARG1))
                         (allow ARG1 secfile read_chr_file))

                  (macro read_secfile_fifo_files ((type ARG1))
                         (allow ARG1 secfile read_fifo_file))

                  (macro read_secfile_files ((type ARG1))
                         (allow ARG1 secfile read_file))

                  (macro readinherited_secfile_blk_files ((type ARG1))
                         (allow ARG1 secfile readinherited_blk_file))

                  (macro readinherited_secfile_chr_files ((type ARG1))
                         (allow ARG1 secfile readinherited_chr_file))

                  (macro readinherited_secfile_fifo_files ((type ARG1))
                         (allow ARG1 secfile readinherited_fifo_file))

                  (macro readinherited_secfile_files ((type ARG1))
                         (allow ARG1 secfile readinherited_file))

                  (macro readinherited_secfile_sock_files ((type ARG1))
                         (allow ARG1 secfile readinherited_sock_file))

                  (macro read_secfile_lnk_files ((type ARG1))
                         (allow ARG1 secfile read_lnk_file))

                  (macro read_secfile_sock_files ((type ARG1))
                         (allow ARG1 secfile read_sock_file))

                  (macro readwrite_secfile ((type ARG1))
                         (allow ARG1 secfile (allfiles (readwrite))))

                  (macro readwrite_secfile_blk_files ((type ARG1))
                         (allow ARG1 secfile readwrite_blk_file))

                  (macro readwrite_secfile_chr_files ((type ARG1))
                         (allow ARG1 secfile readwrite_chr_file))

                  (macro readwrite_secfile_dirs ((type ARG1))
                         (allow ARG1 secfile readwrite_dir))

                  (macro readwrite_secfile_fifo_files ((type ARG1))
                         (allow ARG1 secfile readwrite_fifo_file))

                  (macro readwrite_secfile_files ((type ARG1))
                         (allow ARG1 secfile readwrite_file))

                  (macro readwriteinherited_secfile_blk_files ((type ARG1))
                         (allow ARG1 secfile readwriteinherited_blk_file))

                  (macro readwriteinherited_secfile_chr_files ((type ARG1))
                         (allow ARG1 secfile readwriteinherited_chr_file))

                  (macro readwriteinherited_secfile_dirs ((type ARG1))
                         (allow ARG1 secfile readwriteinherited_dir))

                  (macro readwriteinherited_secfile_fifo_files ((type ARG1))
                         (allow ARG1 secfile readwriteinherited_fifo_file))

                  (macro readwriteinherited_secfile_files ((type ARG1))
                         (allow ARG1 secfile readwriteinherited_file))

                  (macro readwriteinherited_secfile_sock_files ((type ARG1))
                         (allow ARG1 secfile readwriteinherited_sock_file))

                  (macro readwrite_secfile_lnk_files ((type ARG1))
                         (allow ARG1 secfile readwrite_lnk_file))

                  (macro readwrite_secfile_sock_files ((type ARG1))
                         (allow ARG1 secfile readwrite_sock_file))

                  (macro relabel_secfile ((type ARG1))
                         (allow ARG1 secfile (allfiles (relabel))))

                  (macro relabel_secfile_blk_files ((type ARG1))
                         (allow ARG1 secfile relabel_blk_file))

                  (macro relabel_secfile_chr_files ((type ARG1))
                         (allow ARG1 secfile relabel_chr_file))

                  (macro relabel_secfile_dirs ((type ARG1))
                         (allow ARG1 secfile relabel_dir))

                  (macro relabel_secfile_fifo_files ((type ARG1))
                         (allow ARG1 secfile relabel_fifo_file))

                  (macro relabel_secfile_files ((type ARG1))
                         (allow ARG1 secfile relabel_file))

                  (macro relabel_secfile_lnk_files ((type ARG1))
                         (allow ARG1 secfile relabel_lnk_file))

                  (macro relabel_secfile_sock_files ((type ARG1))
                         (allow ARG1 secfile relabel_sock_file))

                  (macro relabelfrom_secfile ((type ARG1))
                         (allow ARG1 secfile (allfiles (relabelfrom))))

                  (macro relabelfrom_secfile_blk_files ((type ARG1))
                         (allow ARG1 secfile relabelfrom_blk_file))

                  (macro relabelfrom_secfile_chr_files ((type ARG1))
                         (allow ARG1 secfile relabelfrom_chr_file))

                  (macro relabelfrom_secfile_dirs ((type ARG1))
                         (allow ARG1 secfile relabelfrom_dir))

                  (macro relabelfrom_secfile_fifo_files ((type ARG1))
                         (allow ARG1 secfile relabelfrom_fifo_file))

                  (macro relabelfrom_secfile_files ((type ARG1))
                         (allow ARG1 secfile relabelfrom_file))

                  (macro relabelfrom_secfile_lnk_files ((type ARG1))
                         (allow ARG1 secfile relabelfrom_lnk_file))

                  (macro relabelfrom_secfile_sock_files ((type ARG1))
                         (allow ARG1 secfile relabelfrom_sock_file))

                  (macro relabelto_secfile ((type ARG1))
                         (allow ARG1 secfile (allfiles (relabelto))))

                  (macro relabelto_secfile_blk_files ((type ARG1))
                         (allow ARG1 secfile relabelto_blk_file))

                  (macro relabelto_secfile_chr_files ((type ARG1))
                         (allow ARG1 secfile relabelto_chr_file))

                  (macro relabelto_secfile_dirs ((type ARG1))
                         (allow ARG1 secfile relabelto_dir))

                  (macro relabelto_secfile_fifo_files ((type ARG1))
                         (allow ARG1 secfile relabelto_fifo_file))

                  (macro relabelto_secfile_files ((type ARG1))
                         (allow ARG1 secfile relabelto_file))

                  (macro relabelto_secfile_lnk_files ((type ARG1))
                         (allow ARG1 secfile relabelto_lnk_file))

                  (macro relabelto_secfile_sock_files ((type ARG1))
                         (allow ARG1 secfile relabelto_sock_file))

                  (macro rename_secfile ((type ARG1))
                         (allow ARG1 secfile (allfiles (rename))))

                  (macro rename_secfile_blk_files ((type ARG1))
                         (allow ARG1 secfile rename_blk_file))

                  (macro rename_secfile_chr_files ((type ARG1))
                         (allow ARG1 secfile rename_chr_file))

                  (macro rename_secfile_dirs ((type ARG1))
                         (allow ARG1 secfile rename_dir))

                  (macro rename_secfile_fifo_files ((type ARG1))
                         (allow ARG1 secfile rename_fifo_file))

                  (macro rename_secfile_files ((type ARG1))
                         (allow ARG1 secfile rename_file))

                  (macro rename_secfile_lnk_files ((type ARG1))
                         (allow ARG1 secfile rename_lnk_file))

                  (macro rename_secfile_sock_files ((type ARG1))
                         (allow ARG1 secfile rename_sock_file))

                  (macro search_secfile_dirs ((type ARG1))
                         (allow ARG1 secfile search_dir))

                  (macro secfile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 secfile ARG3 ARG4 ARG2)
                         (call addname_secfile_dirs (ARG1)))

                  (macro write_secfile ((type ARG1))
                         (allow ARG1 secfile (allfiles (write))))

                  (macro write_secfile_blk_files ((type ARG1))
                         (allow ARG1 secfile write_blk_file))

                  (macro write_secfile_chr_files ((type ARG1))
                         (allow ARG1 secfile write_chr_file))

                  (macro write_secfile_dirs ((type ARG1))
                         (allow ARG1 secfile write_dir))

                  (macro write_secfile_fifo_files ((type ARG1))
                         (allow ARG1 secfile write_fifo_file))

                  (macro write_secfile_files ((type ARG1))
                         (allow ARG1 secfile write_file))

                  (macro writeinherited_secfile_blk_files ((type ARG1))
                         (allow ARG1 secfile writeinherited_blk_file))

                  (macro writeinherited_secfile_chr_files ((type ARG1))
                         (allow ARG1 secfile writeinherited_chr_file))

                  (macro writeinherited_secfile_dirs ((type ARG1))
                         (allow ARG1 secfile writeinherited_dir))

                  (macro writeinherited_secfile_fifo_files ((type ARG1))
                         (allow ARG1 secfile writeinherited_fifo_file))

                  (macro writeinherited_secfile_files ((type ARG1))
                         (allow ARG1 secfile writeinherited_file))

                  (macro writeinherited_secfile_sock_files ((type ARG1))
                         (allow ARG1 secfile writeinherited_sock_file))

                  (macro write_secfile_lnk_files ((type ARG1))
                         (allow ARG1 secfile write_lnk_file))

                  (macro write_secfile_sock_files ((type ARG1))
                         (allow ARG1 secfile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .file.sec.obj_base_template)
                  (blockinherit .file.sec.obj_macro_template))

           (block relabelto

                  ;;
                  ;; Policy
                  ;;

                  (blockinherit .subj.subj_all_macro_template)

                  (typeattribute
                   not_subj_typeattr)

                  (typeattributeset
                   not_subj_typeattr
                   (not
                    subj_typeattr))

                  (neverallow not_subj_typeattr obj_typeattr
                              (file (relabelto)))

                  (call subj_type (unconfined.subj_typeattr)))

           (block write

                  ;;
                  ;; Policy
                  ;;

                  (blockinherit .subj.subj_all_macro_template)

                  (typeattribute
                   not_subj_typeattr)

                  (typeattributeset
                   not_subj_typeattr
                   (not
                    subj_typeattr))

                  (neverallow not_subj_typeattr obj_typeattr
                              (file (append write)))

                  (call subj_type (unconfined.subj_typeattr))))

    (block exceptsec

           ;;
           ;; Policy
           ;;

           (blockinherit obj_all_macro_template)

           (typeattributeset
            obj_typeattr
            (and
             file.obj_typeattr
             (not
              (sec.obj_typeattr))))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .capabilities.obj_type_transition_conffile
          (unconfined.subj_typeattr)))

(block capabilities

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/capabilities"
        dir
        conffile_file_context)
       (filecon
        "/etc/capabilities/.*"
        any
        conffile_file_context)

       ;;
       ;; Macros
       ;;

       (macro getattr_conffile_files ((type ARG1))
              (allow ARG1 conffile (file (getattr))))

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "capabilities")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.conf.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .selinux.defaultcontext.obj_type_transition_conffile
          (unconfined.subj_typeattr))
    (call .selinux.filecontext.obj_type_transition_conffile
          (unconfined.subj_typeattr))
    (call .selinux.obj_type_transition_conffile (unconfined.subj_typeattr)))

(in .selinux

    ;;
    ;; Contexts
    ;;

    (filecon
     "/etc/selinux"
     dir
     conffile_file_context)
    (filecon
     "/etc/selinux/.*"
     any
     conffile_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_conffile ((type ARG1))
           (call .file.conffile_obj_type_transition
                 (ARG1 conffile dir "selinux")))

    ;;
    ;; Policy
    ;;

    (blockinherit conf.obj_template)

    (block conf

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .file.conf.obj_template)

                  (call .selinux.conf.obj_type (conffile))))

    (block defaultcontext

           ;;
           ;; Contexts
           ;;

           (filecon
            "/etc/selinux/([^/]*/)?contexts"
            dir
            conffile_file_context)
           (filecon
            "/etc/selinux/([^/]*/)?contexts/.*"
            any
            conffile_file_context)

           ;;
           ;; Macros
           ;;

           (macro obj_type_transition_conffile ((type ARG1))
                  (call selinux.conffile_obj_type_transition
                        (ARG1 conffile dir "contexts")))

           ;;
           ;; Policy
           ;;

           (blockinherit conf.obj_template))

    (block filecontext

           ;;
           ;; Contexts
           ;;


           (filecon
            "/etc/selinux/([^/]*/)?contexts/files"
            dir
            conffile_file_context)
           (filecon
            "/etc/selinux/([^/]*/)?contexts/files/.*"
            any
            conffile_file_context)

           ;;
           ;; Macros
           ;;

           (macro map_conffile_files ((type ARG1))
                  (allow ARG1 conffile (file (map))))

           (macro obj_type_transition_conffile ((type ARG1))
                  (call filecontext.conffile_obj_type_transition
                        (ARG1 conffile dir "files")))

           ;;
           ;; Policy
           ;;

           (blockinherit conf.obj_template)

           (block read

                  ;;
                  ;; Policy
                  ;;

                  (blockinherit .subj.subj_all_macro_template)

                  (call defaultcontext.search_conffile_dirs (subj_typeattr))
                  (call filecontext.map_conffile_files (subj_typeattr))
                  (call filecontext.read_conffile_files (subj_typeattr))
                  (call filecontext.search_conffile_dirs (subj_typeattr))
                  (call selinux.search_conffile_dirs (subj_typeattr)))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .logindefs.obj_type_transition_conffile (unconfined.subj_typeattr)))

(block logindefs

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/login\.defs"
        file
        conffile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "login.defs")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.conf.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .shells.obj_type_transition_conffile (unconfined.subj_typeattr)))

(block shells

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/shells"
        file
        conffile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "shells")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.conf.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .inittab.obj_type_transition_conffile (unconfined.subj_typeattr)))

(block inittab

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/inittab"
        file
        conffile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "inittab")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.conf.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .profile.obj_type_transition_conffile (unconfined.subj_typeattr)))

(block profile

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/profile"
        file
        conffile_file_context)
       (filecon
        "/etc/shinit"
        file
        conffile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "profile"))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "shinit")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.conf.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .iproute2.obj_type_transition_conffile (unconfined.subj_typeattr)))

(block iproute2

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/iproute2"
        dir
        conffile_file_context)
       (filecon
        "/etc/iproute2/.*"
        any
        conffile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "iproute2")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.conf.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .banner.obj_type_transition_conffile (unconfined.subj_typeattr)))

(block banner

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/banner"
        file
        conffile_file_context)
       (filecon
        "/etc/banner\.failsafe"
        file
        conffile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "banner"))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "banner.failsafe")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.conf.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .hotplug.obj_type_transition_conffile (unconfined.subj_typeattr)))

(block hotplug

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/hotplug-preinit\.json"
        file
        conffile_file_context)
       (filecon
        "/etc/hotplug\.d"
        dir
        conffile_file_context)
       (filecon
        "/etc/hotplug\.d/.*"
        any
        conffile_file_context)
       (filecon
        "/etc/hotplug\.json"
        file
        conffile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "hotplug-preinit.json"))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "hotplug.d"))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "hotplug.json")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.conf.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .fstab.obj_type_transition_conffile (unconfined.subj_typeattr)))

(block fstab

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/fstab"
        file
        conffile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "fstab")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.conf.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .sysctl.obj_type_transition_conffile (unconfined.subj_typeattr)))

(block sysctl

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/sysctl\.conf"
        file
        conffile_file_context)
       (filecon
        "/etc/sysctl\.d"
        dir
        conffile_file_context)
       (filecon
        "/etc/sysctl\.d/.*"
        any
        conffile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "sysctl.conf"))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "sysctl.d")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.conf.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .firewall.obj_type_transition_conffile (unconfined.subj_typeattr)))

(block firewall

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/firewall\.user"
        file
        conffile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "firewall.user")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.conf.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .rccommon.obj_type_transition_conffile (unconfined.subj_typeattr)))

(block rccommon

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/rc\.common"
        file
        conffile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "rc.common")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.conf.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .rclocal.obj_type_transition_conffile (unconfined.subj_typeattr)))

(block rclocal

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/rc\.local"
        file
        conffile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "rc.local")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.conf.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file

    ;;
    ;; Contexts
    ;;

    (filecon
     "/usr/lib/modules"
     dir
     modulesfile_file_context)
    (filecon
     "/usr/lib/modules/.*"
     any
     modulesfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_modulesfile ((type ARG1))
           (call .file.libfile_obj_type_transition
                 (ARG1 modulesfile dir "modules")))

    ;;
    ;; Policy
    ;;

    (blockinherit modules.obj_template)

    (call obj_type_transition_modulesfile (unconfined.subj_typeattr))

    (call modules.load_all_files (unconfined.subj_typeattr))

    (block modules

           ;;
           ;; Macros
           ;;

           (macro load_all_files ((type ARG1))
                  (allow ARG1 obj_typeattr (system (module_load))))

           (macro map_all_files ((type ARG1))
                  (allow ARG1 obj_typeattr (file (map))))

           ;;
           ;; Policy
           ;;

           (blockinherit file.obj_all_macro_template)

           (call file.obj_type (obj_typeattr))

           (call .xattr.associate_filesystems (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   modulesfile_file_context
                   (.u
                    .r
                    modulesfile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   modulesfile)

                  (call .file.modules.obj_type (modulesfile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_modulesfile_dirs ((type ARG1))
                         (allow ARG1 modulesfile addname_dir))

                  (macro append_modulesfile_blk_files ((type ARG1))
                         (allow ARG1 modulesfile append_blk_file))

                  (macro append_modulesfile_chr_files ((type ARG1))
                         (allow ARG1 modulesfile append_chr_file))

                  (macro append_modulesfile_fifo_files ((type ARG1))
                         (allow ARG1 modulesfile append_fifo_file))

                  (macro append_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile append_file))

                  (macro appendinherited_modulesfile_blk_files ((type ARG1))
                         (allow ARG1 modulesfile appendinherited_blk_file))

                  (macro appendinherited_modulesfile_chr_files ((type ARG1))
                         (allow ARG1 modulesfile appendinherited_chr_file))

                  (macro appendinherited_modulesfile_fifo_files ((type ARG1))
                         (allow ARG1 modulesfile appendinherited_fifo_file))

                  (macro appendinherited_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile appendinherited_file))

                  (macro create_modulesfile ((type ARG1))
                         (allow ARG1 modulesfile (allfiles (create))))

                  (macro create_modulesfile_blk_files ((type ARG1))
                         (allow ARG1 modulesfile create_blk_file))

                  (macro create_modulesfile_chr_files ((type ARG1))
                         (allow ARG1 modulesfile create_chr_file))

                  (macro create_modulesfile_dirs ((type ARG1))
                         (allow ARG1 modulesfile create_dir))

                  (macro create_modulesfile_fifo_files ((type ARG1))
                         (allow ARG1 modulesfile create_fifo_file))

                  (macro create_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile create_file))

                  (macro create_modulesfile_lnk_files ((type ARG1))
                         (allow ARG1 modulesfile create_lnk_file))

                  (macro create_modulesfile_sock_files ((type ARG1))
                         (allow ARG1 modulesfile create_sock_file))

                  (macro deletename_modulesfile_dirs ((type ARG1))
                         (allow ARG1 modulesfile deletename_dir))

                  (macro delete_modulesfile ((type ARG1))
                         (allow ARG1 modulesfile (allfiles (delete))))

                  (macro delete_modulesfile_blk_files ((type ARG1))
                         (allow ARG1 modulesfile delete_blk_file))

                  (macro delete_modulesfile_chr_files ((type ARG1))
                         (allow ARG1 modulesfile delete_chr_file))

                  (macro delete_modulesfile_dirs ((type ARG1))
                         (allow ARG1 modulesfile delete_dir))

                  (macro delete_modulesfile_fifo_files ((type ARG1))
                         (allow ARG1 modulesfile delete_fifo_file))

                  (macro delete_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile delete_file))

                  (macro delete_modulesfile_lnk_files ((type ARG1))
                         (allow ARG1 modulesfile delete_lnk_file))

                  (macro delete_modulesfile_sock_files ((type ARG1))
                         (allow ARG1 modulesfile delete_sock_file))

                  (macro execute_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile execute_file))

                  (macro list_modulesfile_dirs ((type ARG1))
                         (allow ARG1 modulesfile list_dir))

                  (macro listinherited_modulesfile_dirs ((type ARG1))
                         (allow ARG1 modulesfile listinherited_dir))

                  (macro load_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile (system (module_load))))

                  (macro manage_modulesfile ((type ARG1))
                         (allow ARG1 modulesfile (allfiles (manage))))

                  (macro manage_modulesfile_blk_files ((type ARG1))
                         (allow ARG1 modulesfile manage_blk_file))

                  (macro manage_modulesfile_chr_files ((type ARG1))
                         (allow ARG1 modulesfile manage_chr_file))

                  (macro manage_modulesfile_dirs ((type ARG1))
                         (allow ARG1 modulesfile manage_dir))

                  (macro manage_modulesfile_fifo_files ((type ARG1))
                         (allow ARG1 modulesfile manage_fifo_file))

                  (macro manage_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile manage_file))

                  (macro manage_modulesfile_lnk_files ((type ARG1))
                         (allow ARG1 modulesfile manage_lnk_file))

                  (macro manage_modulesfile_sock_files ((type ARG1))
                         (allow ARG1 modulesfile manage_sock_file))

                  (macro mapexecute_modulesfile_chr_files ((type ARG1))
                         (allow ARG1 modulesfile mapexecute_chr_file))

                  (macro mapexecute_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile mapexecute_file))

                  (macro modulesfile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 modulesfile ARG3 ARG4 ARG2)
                         (call addname_modulesfile_dirs (ARG1)))

                  (macro mounton_modulesfile ((type ARG1))
                         (allow ARG1 modulesfile (allfiles (mounton))))

                  (macro mounton_modulesfile_blk_files ((type ARG1))
                         (allow ARG1 modulesfile mounton_blk_file))

                  (macro mounton_modulesfile_chr_files ((type ARG1))
                         (allow ARG1 modulesfile mounton_chr_file))

                  (macro mounton_modulesfile_dirs ((type ARG1))
                         (allow ARG1 modulesfile mounton_dir))

                  (macro mounton_modulesfile_fifo_files ((type ARG1))
                         (allow ARG1 modulesfile mounton_fifo_file))

                  (macro mounton_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile mounton_file))

                  (macro mounton_modulesfile_lnk_files ((type ARG1))
                         (allow ARG1 modulesfile mounton_lnk_file))

                  (macro mounton_modulesfile_sock_files ((type ARG1))
                         (allow ARG1 modulesfile mounton_sock_file))

                  (macro read_modulesfile ((type ARG1))
                         (allow ARG1 modulesfile (allfiles (read))))

                  (macro read_modulesfile_blk_files ((type ARG1))
                         (allow ARG1 modulesfile read_blk_file))

                  (macro read_modulesfile_chr_files ((type ARG1))
                         (allow ARG1 modulesfile read_chr_file))

                  (macro read_modulesfile_fifo_files ((type ARG1))
                         (allow ARG1 modulesfile read_fifo_file))

                  (macro read_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile read_file))

                  (macro readinherited_modulesfile_blk_files ((type ARG1))
                         (allow ARG1 modulesfile readinherited_blk_file))

                  (macro readinherited_modulesfile_chr_files ((type ARG1))
                         (allow ARG1 modulesfile readinherited_chr_file))

                  (macro readinherited_modulesfile_fifo_files ((type ARG1))
                         (allow ARG1 modulesfile readinherited_fifo_file))

                  (macro readinherited_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile readinherited_file))

                  (macro readinherited_modulesfile_sock_files ((type ARG1))
                         (allow ARG1 modulesfile readinherited_sock_file))

                  (macro read_modulesfile_lnk_files ((type ARG1))
                         (allow ARG1 modulesfile read_lnk_file))

                  (macro read_modulesfile_sock_files ((type ARG1))
                         (allow ARG1 modulesfile read_sock_file))

                  (macro readwrite_modulesfile ((type ARG1))
                         (allow ARG1 modulesfile (allfiles (readwrite))))

                  (macro readwrite_modulesfile_blk_files ((type ARG1))
                         (allow ARG1 modulesfile readwrite_blk_file))

                  (macro readwrite_modulesfile_chr_files ((type ARG1))
                         (allow ARG1 modulesfile readwrite_chr_file))

                  (macro readwrite_modulesfile_dirs ((type ARG1))
                         (allow ARG1 modulesfile readwrite_dir))

                  (macro readwrite_modulesfile_fifo_files ((type ARG1))
                         (allow ARG1 modulesfile readwrite_fifo_file))

                  (macro readwrite_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile readwrite_file))

                  (macro readwriteinherited_modulesfile_blk_files ((type ARG1))
                         (allow ARG1 modulesfile readwriteinherited_blk_file))

                  (macro readwriteinherited_modulesfile_chr_files ((type ARG1))
                         (allow ARG1 modulesfile readwriteinherited_chr_file))

                  (macro readwriteinherited_modulesfile_dirs ((type ARG1))
                         (allow ARG1 modulesfile readwriteinherited_dir))

                  (macro readwriteinherited_modulesfile_fifo_files ((type ARG1))
                         (allow ARG1 modulesfile readwriteinherited_fifo_file))

                  (macro readwriteinherited_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile readwriteinherited_file))

                  (macro readwriteinherited_modulesfile_sock_files ((type ARG1))
                         (allow ARG1 modulesfile readwriteinherited_sock_file))

                  (macro readwrite_modulesfile_lnk_files ((type ARG1))
                         (allow ARG1 modulesfile readwrite_lnk_file))

                  (macro readwrite_modulesfile_sock_files ((type ARG1))
                         (allow ARG1 modulesfile readwrite_sock_file))

                  (macro relabel_modulesfile ((type ARG1))
                         (allow ARG1 modulesfile (allfiles (relabel))))

                  (macro relabel_modulesfile_blk_files ((type ARG1))
                         (allow ARG1 modulesfile relabel_blk_file))

                  (macro relabel_modulesfile_chr_files ((type ARG1))
                         (allow ARG1 modulesfile relabel_chr_file))

                  (macro relabel_modulesfile_dirs ((type ARG1))
                         (allow ARG1 modulesfile relabel_dir))

                  (macro relabel_modulesfile_fifo_files ((type ARG1))
                         (allow ARG1 modulesfile relabel_fifo_file))

                  (macro relabel_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile relabel_file))

                  (macro relabel_modulesfile_lnk_files ((type ARG1))
                         (allow ARG1 modulesfile relabel_lnk_file))

                  (macro relabel_modulesfile_sock_files ((type ARG1))
                         (allow ARG1 modulesfile relabel_sock_file))

                  (macro relabelfrom_modulesfile ((type ARG1))
                         (allow ARG1 modulesfile (allfiles (relabelfrom))))

                  (macro relabelfrom_modulesfile_blk_files ((type ARG1))
                         (allow ARG1 modulesfile relabelfrom_blk_file))

                  (macro relabelfrom_modulesfile_chr_files ((type ARG1))
                         (allow ARG1 modulesfile relabelfrom_chr_file))

                  (macro relabelfrom_modulesfile_dirs ((type ARG1))
                         (allow ARG1 modulesfile relabelfrom_dir))

                  (macro relabelfrom_modulesfile_fifo_files ((type ARG1))
                         (allow ARG1 modulesfile relabelfrom_fifo_file))

                  (macro relabelfrom_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile relabelfrom_file))

                  (macro relabelfrom_modulesfile_lnk_files ((type ARG1))
                         (allow ARG1 modulesfile relabelfrom_lnk_file))

                  (macro relabelfrom_modulesfile_sock_files ((type ARG1))
                         (allow ARG1 modulesfile relabelfrom_sock_file))

                  (macro relabelto_modulesfile ((type ARG1))
                         (allow ARG1 modulesfile (allfiles (relabelto))))

                  (macro relabelto_modulesfile_blk_files ((type ARG1))
                         (allow ARG1 modulesfile relabelto_blk_file))

                  (macro relabelto_modulesfile_chr_files ((type ARG1))
                         (allow ARG1 modulesfile relabelto_chr_file))

                  (macro relabelto_modulesfile_dirs ((type ARG1))
                         (allow ARG1 modulesfile relabelto_dir))

                  (macro relabelto_modulesfile_fifo_files ((type ARG1))
                         (allow ARG1 modulesfile relabelto_fifo_file))

                  (macro relabelto_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile relabelto_file))

                  (macro relabelto_modulesfile_lnk_files ((type ARG1))
                         (allow ARG1 modulesfile relabelto_lnk_file))

                  (macro relabelto_modulesfile_sock_files ((type ARG1))
                         (allow ARG1 modulesfile relabelto_sock_file))

                  (macro rename_modulesfile ((type ARG1))
                         (allow ARG1 modulesfile (allfiles (rename))))

                  (macro rename_modulesfile_blk_files ((type ARG1))
                         (allow ARG1 modulesfile rename_blk_file))

                  (macro rename_modulesfile_chr_files ((type ARG1))
                         (allow ARG1 modulesfile rename_chr_file))

                  (macro rename_modulesfile_dirs ((type ARG1))
                         (allow ARG1 modulesfile rename_dir))

                  (macro rename_modulesfile_fifo_files ((type ARG1))
                         (allow ARG1 modulesfile rename_fifo_file))

                  (macro rename_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile rename_file))

                  (macro rename_modulesfile_lnk_files ((type ARG1))
                         (allow ARG1 modulesfile rename_lnk_file))

                  (macro rename_modulesfile_sock_files ((type ARG1))
                         (allow ARG1 modulesfile rename_sock_file))

                  (macro search_modulesfile_dirs ((type ARG1))
                         (allow ARG1 modulesfile search_dir))

                  (macro write_modulesfile ((type ARG1))
                         (allow ARG1 modulesfile (allfiles (write))))

                  (macro write_modulesfile_blk_files ((type ARG1))
                         (allow ARG1 modulesfile write_blk_file))

                  (macro write_modulesfile_chr_files ((type ARG1))
                         (allow ARG1 modulesfile write_chr_file))

                  (macro write_modulesfile_dirs ((type ARG1))
                         (allow ARG1 modulesfile write_dir))

                  (macro write_modulesfile_fifo_files ((type ARG1))
                         (allow ARG1 modulesfile write_fifo_file))

                  (macro write_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile write_file))

                  (macro writeinherited_modulesfile_blk_files ((type ARG1))
                         (allow ARG1 modulesfile writeinherited_blk_file))

                  (macro writeinherited_modulesfile_chr_files ((type ARG1))
                         (allow ARG1 modulesfile writeinherited_chr_file))

                  (macro writeinherited_modulesfile_dirs ((type ARG1))
                         (allow ARG1 modulesfile writeinherited_dir))

                  (macro writeinherited_modulesfile_fifo_files ((type ARG1))
                         (allow ARG1 modulesfile writeinherited_fifo_file))

                  (macro writeinherited_modulesfile_files ((type ARG1))
                         (allow ARG1 modulesfile writeinherited_file))

                  (macro writeinherited_modulesfile_sock_files ((type ARG1))
                         (allow ARG1 modulesfile writeinherited_sock_file))

                  (macro write_modulesfile_lnk_files ((type ARG1))
                         (allow ARG1 modulesfile write_lnk_file))

                  (macro write_modulesfile_sock_files ((type ARG1))
                         (allow ARG1 modulesfile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .file.modules.obj_base_template)
                  (blockinherit .file.modules.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file

    (block misc

           ;;
           ;; Policy
           ;;

           (blockinherit file.obj_all_macro_template)

           (call file.obj_type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   miscfile_file_context
                   (.u
                    .r
                    miscfile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   miscfile)

                  (call .file.misc.obj_type (miscfile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_miscfile_dirs ((type ARG1))
                         (allow ARG1 miscfile addname_dir))

                  (macro append_miscfile_blk_files ((type ARG1))
                         (allow ARG1 miscfile append_blk_file))

                  (macro append_miscfile_chr_files ((type ARG1))
                         (allow ARG1 miscfile append_chr_file))

                  (macro append_miscfile_fifo_files ((type ARG1))
                         (allow ARG1 miscfile append_fifo_file))

                  (macro append_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile append_file))

                  (macro appendinherited_miscfile_blk_files ((type ARG1))
                         (allow ARG1 miscfile appendinherited_blk_file))

                  (macro appendinherited_miscfile_chr_files ((type ARG1))
                         (allow ARG1 miscfile appendinherited_chr_file))

                  (macro appendinherited_miscfile_fifo_files ((type ARG1))
                         (allow ARG1 miscfile appendinherited_fifo_file))

                  (macro appendinherited_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile appendinherited_file))

                  (macro create_miscfile ((type ARG1))
                         (allow ARG1 miscfile (allfiles (create))))

                  (macro create_miscfile_blk_files ((type ARG1))
                         (allow ARG1 miscfile create_blk_file))

                  (macro create_miscfile_chr_files ((type ARG1))
                         (allow ARG1 miscfile create_chr_file))

                  (macro create_miscfile_dirs ((type ARG1))
                         (allow ARG1 miscfile create_dir))

                  (macro create_miscfile_fifo_files ((type ARG1))
                         (allow ARG1 miscfile create_fifo_file))

                  (macro create_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile create_file))

                  (macro create_miscfile_lnk_files ((type ARG1))
                         (allow ARG1 miscfile create_lnk_file))

                  (macro create_miscfile_sock_files ((type ARG1))
                         (allow ARG1 miscfile create_sock_file))

                  (macro deletename_miscfile_dirs ((type ARG1))
                         (allow ARG1 miscfile deletename_dir))

                  (macro delete_miscfile ((type ARG1))
                         (allow ARG1 miscfile (allfiles (delete))))

                  (macro delete_miscfile_blk_files ((type ARG1))
                         (allow ARG1 miscfile delete_blk_file))

                  (macro delete_miscfile_chr_files ((type ARG1))
                         (allow ARG1 miscfile delete_chr_file))

                  (macro delete_miscfile_dirs ((type ARG1))
                         (allow ARG1 miscfile delete_dir))

                  (macro delete_miscfile_fifo_files ((type ARG1))
                         (allow ARG1 miscfile delete_fifo_file))

                  (macro delete_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile delete_file))

                  (macro delete_miscfile_lnk_files ((type ARG1))
                         (allow ARG1 miscfile delete_lnk_file))

                  (macro delete_miscfile_sock_files ((type ARG1))
                         (allow ARG1 miscfile delete_sock_file))

                  (macro execute_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile execute_file))

                  (macro list_miscfile_dirs ((type ARG1))
                         (allow ARG1 miscfile list_dir))

                  (macro listinherited_miscfile_dirs ((type ARG1))
                         (allow ARG1 miscfile listinherited_dir))

                  (macro load_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile (system (module_load))))

                  (macro manage_miscfile ((type ARG1))
                         (allow ARG1 miscfile (allfiles (manage))))

                  (macro manage_miscfile_blk_files ((type ARG1))
                         (allow ARG1 miscfile manage_blk_file))

                  (macro manage_miscfile_chr_files ((type ARG1))
                         (allow ARG1 miscfile manage_chr_file))

                  (macro manage_miscfile_dirs ((type ARG1))
                         (allow ARG1 miscfile manage_dir))

                  (macro manage_miscfile_fifo_files ((type ARG1))
                         (allow ARG1 miscfile manage_fifo_file))

                  (macro manage_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile manage_file))

                  (macro manage_miscfile_lnk_files ((type ARG1))
                         (allow ARG1 miscfile manage_lnk_file))

                  (macro manage_miscfile_sock_files ((type ARG1))
                         (allow ARG1 miscfile manage_sock_file))

                  (macro mapexecute_miscfile_chr_files ((type ARG1))
                         (allow ARG1 miscfile mapexecute_chr_file))

                  (macro mapexecute_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile mapexecute_file))

                  (macro miscfile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 miscfile ARG3 ARG4 ARG2)
                         (call addname_miscfile_dirs (ARG1)))

                  (macro mounton_miscfile ((type ARG1))
                         (allow ARG1 miscfile (allfiles (mounton))))

                  (macro mounton_miscfile_blk_files ((type ARG1))
                         (allow ARG1 miscfile mounton_blk_file))

                  (macro mounton_miscfile_chr_files ((type ARG1))
                         (allow ARG1 miscfile mounton_chr_file))

                  (macro mounton_miscfile_dirs ((type ARG1))
                         (allow ARG1 miscfile mounton_dir))

                  (macro mounton_miscfile_fifo_files ((type ARG1))
                         (allow ARG1 miscfile mounton_fifo_file))

                  (macro mounton_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile mounton_file))

                  (macro mounton_miscfile_lnk_files ((type ARG1))
                         (allow ARG1 miscfile mounton_lnk_file))

                  (macro mounton_miscfile_sock_files ((type ARG1))
                         (allow ARG1 miscfile mounton_sock_file))

                  (macro read_miscfile ((type ARG1))
                         (allow ARG1 miscfile (allfiles (read))))

                  (macro read_miscfile_blk_files ((type ARG1))
                         (allow ARG1 miscfile read_blk_file))

                  (macro read_miscfile_chr_files ((type ARG1))
                         (allow ARG1 miscfile read_chr_file))

                  (macro read_miscfile_fifo_files ((type ARG1))
                         (allow ARG1 miscfile read_fifo_file))

                  (macro read_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile read_file))

                  (macro readinherited_miscfile_blk_files ((type ARG1))
                         (allow ARG1 miscfile readinherited_blk_file))

                  (macro readinherited_miscfile_chr_files ((type ARG1))
                         (allow ARG1 miscfile readinherited_chr_file))

                  (macro readinherited_miscfile_fifo_files ((type ARG1))
                         (allow ARG1 miscfile readinherited_fifo_file))

                  (macro readinherited_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile readinherited_file))

                  (macro readinherited_miscfile_sock_files ((type ARG1))
                         (allow ARG1 miscfile readinherited_sock_file))

                  (macro read_miscfile_lnk_files ((type ARG1))
                         (allow ARG1 miscfile read_lnk_file))

                  (macro read_miscfile_sock_files ((type ARG1))
                         (allow ARG1 miscfile read_sock_file))

                  (macro readwrite_miscfile ((type ARG1))
                         (allow ARG1 miscfile (allfiles (readwrite))))

                  (macro readwrite_miscfile_blk_files ((type ARG1))
                         (allow ARG1 miscfile readwrite_blk_file))

                  (macro readwrite_miscfile_chr_files ((type ARG1))
                         (allow ARG1 miscfile readwrite_chr_file))

                  (macro readwrite_miscfile_dirs ((type ARG1))
                         (allow ARG1 miscfile readwrite_dir))

                  (macro readwrite_miscfile_fifo_files ((type ARG1))
                         (allow ARG1 miscfile readwrite_fifo_file))

                  (macro readwrite_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile readwrite_file))

                  (macro readwriteinherited_miscfile_blk_files ((type ARG1))
                         (allow ARG1 miscfile readwriteinherited_blk_file))

                  (macro readwriteinherited_miscfile_chr_files ((type ARG1))
                         (allow ARG1 miscfile readwriteinherited_chr_file))

                  (macro readwriteinherited_miscfile_dirs ((type ARG1))
                         (allow ARG1 miscfile readwriteinherited_dir))

                  (macro readwriteinherited_miscfile_fifo_files ((type ARG1))
                         (allow ARG1 miscfile readwriteinherited_fifo_file))

                  (macro readwriteinherited_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile readwriteinherited_file))

                  (macro readwriteinherited_miscfile_sock_files ((type ARG1))
                         (allow ARG1 miscfile readwriteinherited_sock_file))

                  (macro readwrite_miscfile_lnk_files ((type ARG1))
                         (allow ARG1 miscfile readwrite_lnk_file))

                  (macro readwrite_miscfile_sock_files ((type ARG1))
                         (allow ARG1 miscfile readwrite_sock_file))

                  (macro relabel_miscfile ((type ARG1))
                         (allow ARG1 miscfile (allfiles (relabel))))

                  (macro relabel_miscfile_blk_files ((type ARG1))
                         (allow ARG1 miscfile relabel_blk_file))

                  (macro relabel_miscfile_chr_files ((type ARG1))
                         (allow ARG1 miscfile relabel_chr_file))

                  (macro relabel_miscfile_dirs ((type ARG1))
                         (allow ARG1 miscfile relabel_dir))

                  (macro relabel_miscfile_fifo_files ((type ARG1))
                         (allow ARG1 miscfile relabel_fifo_file))

                  (macro relabel_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile relabel_file))

                  (macro relabel_miscfile_lnk_files ((type ARG1))
                         (allow ARG1 miscfile relabel_lnk_file))

                  (macro relabel_miscfile_sock_files ((type ARG1))
                         (allow ARG1 miscfile relabel_sock_file))

                  (macro relabelfrom_miscfile ((type ARG1))
                         (allow ARG1 miscfile (allfiles (relabelfrom))))

                  (macro relabelfrom_miscfile_blk_files ((type ARG1))
                         (allow ARG1 miscfile relabelfrom_blk_file))

                  (macro relabelfrom_miscfile_chr_files ((type ARG1))
                         (allow ARG1 miscfile relabelfrom_chr_file))

                  (macro relabelfrom_miscfile_dirs ((type ARG1))
                         (allow ARG1 miscfile relabelfrom_dir))

                  (macro relabelfrom_miscfile_fifo_files ((type ARG1))
                         (allow ARG1 miscfile relabelfrom_fifo_file))

                  (macro relabelfrom_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile relabelfrom_file))

                  (macro relabelfrom_miscfile_lnk_files ((type ARG1))
                         (allow ARG1 miscfile relabelfrom_lnk_file))

                  (macro relabelfrom_miscfile_sock_files ((type ARG1))
                         (allow ARG1 miscfile relabelfrom_sock_file))

                  (macro relabelto_miscfile ((type ARG1))
                         (allow ARG1 miscfile (allfiles (relabelto))))

                  (macro relabelto_miscfile_blk_files ((type ARG1))
                         (allow ARG1 miscfile relabelto_blk_file))

                  (macro relabelto_miscfile_chr_files ((type ARG1))
                         (allow ARG1 miscfile relabelto_chr_file))

                  (macro relabelto_miscfile_dirs ((type ARG1))
                         (allow ARG1 miscfile relabelto_dir))

                  (macro relabelto_miscfile_fifo_files ((type ARG1))
                         (allow ARG1 miscfile relabelto_fifo_file))

                  (macro relabelto_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile relabelto_file))

                  (macro relabelto_miscfile_lnk_files ((type ARG1))
                         (allow ARG1 miscfile relabelto_lnk_file))

                  (macro relabelto_miscfile_sock_files ((type ARG1))
                         (allow ARG1 miscfile relabelto_sock_file))

                  (macro rename_miscfile ((type ARG1))
                         (allow ARG1 miscfile (allfiles (rename))))

                  (macro rename_miscfile_blk_files ((type ARG1))
                         (allow ARG1 miscfile rename_blk_file))

                  (macro rename_miscfile_chr_files ((type ARG1))
                         (allow ARG1 miscfile rename_chr_file))

                  (macro rename_miscfile_dirs ((type ARG1))
                         (allow ARG1 miscfile rename_dir))

                  (macro rename_miscfile_fifo_files ((type ARG1))
                         (allow ARG1 miscfile rename_fifo_file))

                  (macro rename_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile rename_file))

                  (macro rename_miscfile_lnk_files ((type ARG1))
                         (allow ARG1 miscfile rename_lnk_file))

                  (macro rename_miscfile_sock_files ((type ARG1))
                         (allow ARG1 miscfile rename_sock_file))

                  (macro search_miscfile_dirs ((type ARG1))
                         (allow ARG1 miscfile search_dir))

                  (macro write_miscfile ((type ARG1))
                         (allow ARG1 miscfile (allfiles (write))))

                  (macro write_miscfile_blk_files ((type ARG1))
                         (allow ARG1 miscfile write_blk_file))

                  (macro write_miscfile_chr_files ((type ARG1))
                         (allow ARG1 miscfile write_chr_file))

                  (macro write_miscfile_dirs ((type ARG1))
                         (allow ARG1 miscfile write_dir))

                  (macro write_miscfile_fifo_files ((type ARG1))
                         (allow ARG1 miscfile write_fifo_file))

                  (macro write_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile write_file))

                  (macro writeinherited_miscfile_blk_files ((type ARG1))
                         (allow ARG1 miscfile writeinherited_blk_file))

                  (macro writeinherited_miscfile_chr_files ((type ARG1))
                         (allow ARG1 miscfile writeinherited_chr_file))

                  (macro writeinherited_miscfile_dirs ((type ARG1))
                         (allow ARG1 miscfile writeinherited_dir))

                  (macro writeinherited_miscfile_fifo_files ((type ARG1))
                         (allow ARG1 miscfile writeinherited_fifo_file))

                  (macro writeinherited_miscfile_files ((type ARG1))
                         (allow ARG1 miscfile writeinherited_file))

                  (macro writeinherited_miscfile_sock_files ((type ARG1))
                         (allow ARG1 miscfile writeinherited_sock_file))

                  (macro write_miscfile_lnk_files ((type ARG1))
                         (allow ARG1 miscfile write_lnk_file))

                  (macro write_miscfile_sock_files ((type ARG1))
                         (allow ARG1 miscfile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .file.misc.obj_base_template)
                  (blockinherit .file.misc.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file

    ;;
    ;; Contexts
    ;;

    (filecon
     "/usr/bin"
     dir
     execfile_file_context)
    (filecon
     "/usr/bin/.*"
     any
     execfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro auditallow_execute_execfile_files ((type ARG1))
           (auditallow ARG1 execfile (file (execute_no_trans))))

    (macro getattr_execfile_files ((type ARG1))
           (allow ARG1 execfile (file (getattr))))

    (macro datafile_obj_type_transition_execfile ((type ARG1))
           (call .file.datafile_obj_type_transition
                 (ARG1 execfile dir "bin"))
           (call .file.datafile_obj_type_transition
                 (ARG1 execfile dir "libexec"))
           (call .file.datafile_obj_type_transition
                 (ARG1 execfile dir "sbin")))

    (macro obj_type_transition_execfile ((type ARG1))
           (call .sys.rootfile_obj_type_transition
                 (ARG1 execfile dir "bin")))

    ;;
    ;; Policy
    ;;

    (blockinherit exec.obj_template)

    (call obj_type_transition_execfile (unconfined.subj_typeattr))
    (call datafile_obj_type_transition_execfile (unconfined.subj_typeattr))

    (block exec

           ;;
           ;; Macros
           ;;

           (macro entrypoint_all_files ((type ARG1))
                  (allow ARG1 obj_typeattr (file (entrypoint))))

           ;;
           ;; Policy
           ;;

           (blockinherit file.obj_all_macro_template)

           (call file.obj_type (obj_typeattr))

           (call .xattr.associate_filesystems (obj_typeattr))

           (call .subj.entry.obj_type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   execfile_file_context
                   (.u
                    .r
                    execfile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   execfile)

                  (call .file.exec.obj_type (execfile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_execfile_dirs ((type ARG1))
                         (allow ARG1 execfile addname_dir))

                  (macro append_execfile_blk_files ((type ARG1))
                         (allow ARG1 execfile append_blk_file))

                  (macro append_execfile_chr_files ((type ARG1))
                         (allow ARG1 execfile append_chr_file))

                  (macro append_execfile_fifo_files ((type ARG1))
                         (allow ARG1 execfile append_fifo_file))

                  (macro append_execfile_files ((type ARG1))
                         (allow ARG1 execfile append_file))

                  (macro appendinherited_execfile_blk_files ((type ARG1))
                         (allow ARG1 execfile appendinherited_blk_file))

                  (macro appendinherited_execfile_chr_files ((type ARG1))
                         (allow ARG1 execfile appendinherited_chr_file))

                  (macro appendinherited_execfile_fifo_files ((type ARG1))
                         (allow ARG1 execfile appendinherited_fifo_file))

                  (macro appendinherited_execfile_files ((type ARG1))
                         (allow ARG1 execfile appendinherited_file))

                  (macro create_execfile ((type ARG1))
                         (allow ARG1 execfile (allfiles (create))))

                  (macro create_execfile_blk_files ((type ARG1))
                         (allow ARG1 execfile create_blk_file))

                  (macro create_execfile_chr_files ((type ARG1))
                         (allow ARG1 execfile create_chr_file))

                  (macro create_execfile_dirs ((type ARG1))
                         (allow ARG1 execfile create_dir))

                  (macro create_execfile_fifo_files ((type ARG1))
                         (allow ARG1 execfile create_fifo_file))

                  (macro create_execfile_files ((type ARG1))
                         (allow ARG1 execfile create_file))

                  (macro create_execfile_lnk_files ((type ARG1))
                         (allow ARG1 execfile create_lnk_file))

                  (macro create_execfile_sock_files ((type ARG1))
                         (allow ARG1 execfile create_sock_file))

                  (macro deletename_execfile_dirs ((type ARG1))
                         (allow ARG1 execfile deletename_dir))

                  (macro delete_execfile ((type ARG1))
                         (allow ARG1 execfile (allfiles (delete))))

                  (macro delete_execfile_blk_files ((type ARG1))
                         (allow ARG1 execfile delete_blk_file))

                  (macro delete_execfile_chr_files ((type ARG1))
                         (allow ARG1 execfile delete_chr_file))

                  (macro delete_execfile_dirs ((type ARG1))
                         (allow ARG1 execfile delete_dir))

                  (macro delete_execfile_fifo_files ((type ARG1))
                         (allow ARG1 execfile delete_fifo_file))

                  (macro delete_execfile_files ((type ARG1))
                         (allow ARG1 execfile delete_file))

                  (macro delete_execfile_lnk_files ((type ARG1))
                         (allow ARG1 execfile delete_lnk_file))

                  (macro delete_execfile_sock_files ((type ARG1))
                         (allow ARG1 execfile delete_sock_file))

                  (macro entrypoint_execfile_files ((type ARG1))
                         (allow ARG1 execfile (file (entrypoint))))

                  (macro execfile_subj_type_transition ((type ARG1)(type ARG2))
                         (typetransition ARG1 execfile process "*" ARG2))

                  (macro execfile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 execfile ARG3 ARG4 ARG2)
                         (call addname_execfile_dirs (ARG1)))

                  (macro execute_execfile_files ((type ARG1))
                         (allow ARG1 execfile execute_file))

                  (macro list_execfile_dirs ((type ARG1))
                         (allow ARG1 execfile list_dir))

                  (macro listinherited_execfile_dirs ((type ARG1))
                         (allow ARG1 execfile listinherited_dir))

                  (macro manage_execfile ((type ARG1))
                         (allow ARG1 execfile (allfiles (manage))))

                  (macro manage_execfile_blk_files ((type ARG1))
                         (allow ARG1 execfile manage_blk_file))

                  (macro manage_execfile_chr_files ((type ARG1))
                         (allow ARG1 execfile manage_chr_file))

                  (macro manage_execfile_dirs ((type ARG1))
                         (allow ARG1 execfile manage_dir))

                  (macro manage_execfile_fifo_files ((type ARG1))
                         (allow ARG1 execfile manage_fifo_file))

                  (macro manage_execfile_files ((type ARG1))
                         (allow ARG1 execfile manage_file))

                  (macro manage_execfile_lnk_files ((type ARG1))
                         (allow ARG1 execfile manage_lnk_file))

                  (macro manage_execfile_sock_files ((type ARG1))
                         (allow ARG1 execfile manage_sock_file))

                  (macro mapexecute_execfile_chr_files ((type ARG1))
                         (allow ARG1 execfile mapexecute_chr_file))

                  (macro mapexecute_execfile_files ((type ARG1))
                         (allow ARG1 execfile mapexecute_file))

                  (macro mounton_execfile ((type ARG1))
                         (allow ARG1 execfile (allfiles (mounton))))

                  (macro mounton_execfile_blk_files ((type ARG1))
                         (allow ARG1 execfile mounton_blk_file))

                  (macro mounton_execfile_chr_files ((type ARG1))
                         (allow ARG1 execfile mounton_chr_file))

                  (macro mounton_execfile_dirs ((type ARG1))
                         (allow ARG1 execfile mounton_dir))

                  (macro mounton_execfile_fifo_files ((type ARG1))
                         (allow ARG1 execfile mounton_fifo_file))

                  (macro mounton_execfile_files ((type ARG1))
                         (allow ARG1 execfile mounton_file))

                  (macro mounton_execfile_lnk_files ((type ARG1))
                         (allow ARG1 execfile mounton_lnk_file))

                  (macro mounton_execfile_sock_files ((type ARG1))
                         (allow ARG1 execfile mounton_sock_file))

                  (macro read_execfile ((type ARG1))
                         (allow ARG1 execfile (allfiles (read))))

                  (macro read_execfile_blk_files ((type ARG1))
                         (allow ARG1 execfile read_blk_file))

                  (macro read_execfile_chr_files ((type ARG1))
                         (allow ARG1 execfile read_chr_file))

                  (macro read_execfile_fifo_files ((type ARG1))
                         (allow ARG1 execfile read_fifo_file))

                  (macro read_execfile_files ((type ARG1))
                         (allow ARG1 execfile read_file))

                  (macro readinherited_execfile_blk_files ((type ARG1))
                         (allow ARG1 execfile readinherited_blk_file))

                  (macro readinherited_execfile_chr_files ((type ARG1))
                         (allow ARG1 execfile readinherited_chr_file))

                  (macro readinherited_execfile_fifo_files ((type ARG1))
                         (allow ARG1 execfile readinherited_fifo_file))

                  (macro readinherited_execfile_files ((type ARG1))
                         (allow ARG1 execfile readinherited_file))

                  (macro readinherited_execfile_sock_files ((type ARG1))
                         (allow ARG1 execfile readinherited_sock_file))

                  (macro read_execfile_lnk_files ((type ARG1))
                         (allow ARG1 execfile read_lnk_file))

                  (macro read_execfile_sock_files ((type ARG1))
                         (allow ARG1 execfile read_sock_file))

                  (macro readwrite_execfile ((type ARG1))
                         (allow ARG1 execfile (allfiles (readwrite))))

                  (macro readwrite_execfile_blk_files ((type ARG1))
                         (allow ARG1 execfile readwrite_blk_file))

                  (macro readwrite_execfile_chr_files ((type ARG1))
                         (allow ARG1 execfile readwrite_chr_file))

                  (macro readwrite_execfile_dirs ((type ARG1))
                         (allow ARG1 execfile readwrite_dir))

                  (macro readwrite_execfile_fifo_files ((type ARG1))
                         (allow ARG1 execfile readwrite_fifo_file))

                  (macro readwrite_execfile_files ((type ARG1))
                         (allow ARG1 execfile readwrite_file))

                  (macro readwriteinherited_execfile_blk_files ((type ARG1))
                         (allow ARG1 execfile readwriteinherited_blk_file))

                  (macro readwriteinherited_execfile_chr_files ((type ARG1))
                         (allow ARG1 execfile readwriteinherited_chr_file))

                  (macro readwriteinherited_execfile_dirs ((type ARG1))
                         (allow ARG1 execfile readwriteinherited_dir))

                  (macro readwriteinherited_execfile_fifo_files ((type ARG1))
                         (allow ARG1 execfile readwriteinherited_fifo_file))

                  (macro readwriteinherited_execfile_files ((type ARG1))
                         (allow ARG1 execfile readwriteinherited_file))

                  (macro readwriteinherited_execfile_sock_files ((type ARG1))
                         (allow ARG1 execfile readwriteinherited_sock_file))

                  (macro readwrite_execfile_lnk_files ((type ARG1))
                         (allow ARG1 execfile readwrite_lnk_file))

                  (macro readwrite_execfile_sock_files ((type ARG1))
                         (allow ARG1 execfile readwrite_sock_file))

                  (macro relabel_execfile ((type ARG1))
                         (allow ARG1 execfile (allfiles (relabel))))

                  (macro relabel_execfile_blk_files ((type ARG1))
                         (allow ARG1 execfile relabel_blk_file))

                  (macro relabel_execfile_chr_files ((type ARG1))
                         (allow ARG1 execfile relabel_chr_file))

                  (macro relabel_execfile_dirs ((type ARG1))
                         (allow ARG1 execfile relabel_dir))

                  (macro relabel_execfile_fifo_files ((type ARG1))
                         (allow ARG1 execfile relabel_fifo_file))

                  (macro relabel_execfile_files ((type ARG1))
                         (allow ARG1 execfile relabel_file))

                  (macro relabel_execfile_lnk_files ((type ARG1))
                         (allow ARG1 execfile relabel_lnk_file))

                  (macro relabel_execfile_sock_files ((type ARG1))
                         (allow ARG1 execfile relabel_sock_file))

                  (macro relabelfrom_execfile ((type ARG1))
                         (allow ARG1 execfile (allfiles (relabelfrom))))

                  (macro relabelfrom_execfile_blk_files ((type ARG1))
                         (allow ARG1 execfile relabelfrom_blk_file))

                  (macro relabelfrom_execfile_chr_files ((type ARG1))
                         (allow ARG1 execfile relabelfrom_chr_file))

                  (macro relabelfrom_execfile_dirs ((type ARG1))
                         (allow ARG1 execfile relabelfrom_dir))

                  (macro relabelfrom_execfile_fifo_files ((type ARG1))
                         (allow ARG1 execfile relabelfrom_fifo_file))

                  (macro relabelfrom_execfile_files ((type ARG1))
                         (allow ARG1 execfile relabelfrom_file))

                  (macro relabelfrom_execfile_lnk_files ((type ARG1))
                         (allow ARG1 execfile relabelfrom_lnk_file))

                  (macro relabelfrom_execfile_sock_files ((type ARG1))
                         (allow ARG1 execfile relabelfrom_sock_file))

                  (macro relabelto_execfile ((type ARG1))
                         (allow ARG1 execfile (allfiles (relabelto))))

                  (macro relabelto_execfile_blk_files ((type ARG1))
                         (allow ARG1 execfile relabelto_blk_file))

                  (macro relabelto_execfile_chr_files ((type ARG1))
                         (allow ARG1 execfile relabelto_chr_file))

                  (macro relabelto_execfile_dirs ((type ARG1))
                         (allow ARG1 execfile relabelto_dir))

                  (macro relabelto_execfile_fifo_files ((type ARG1))
                         (allow ARG1 execfile relabelto_fifo_file))

                  (macro relabelto_execfile_files ((type ARG1))
                         (allow ARG1 execfile relabelto_file))

                  (macro relabelto_execfile_lnk_files ((type ARG1))
                         (allow ARG1 execfile relabelto_lnk_file))

                  (macro relabelto_execfile_sock_files ((type ARG1))
                         (allow ARG1 execfile relabelto_sock_file))

                  (macro rename_execfile ((type ARG1))
                         (allow ARG1 execfile (allfiles (rename))))

                  (macro rename_execfile_blk_files ((type ARG1))
                         (allow ARG1 execfile rename_blk_file))

                  (macro rename_execfile_chr_files ((type ARG1))
                         (allow ARG1 execfile rename_chr_file))

                  (macro rename_execfile_dirs ((type ARG1))
                         (allow ARG1 execfile rename_dir))

                  (macro rename_execfile_fifo_files ((type ARG1))
                         (allow ARG1 execfile rename_fifo_file))

                  (macro rename_execfile_files ((type ARG1))
                         (allow ARG1 execfile rename_file))

                  (macro rename_execfile_lnk_files ((type ARG1))
                         (allow ARG1 execfile rename_lnk_file))

                  (macro rename_execfile_sock_files ((type ARG1))
                         (allow ARG1 execfile rename_sock_file))

                  (macro search_execfile_dirs ((type ARG1))
                         (allow ARG1 execfile search_dir))

                  (macro write_execfile ((type ARG1))
                         (allow ARG1 execfile (allfiles (write))))

                  (macro write_execfile_blk_files ((type ARG1))
                         (allow ARG1 execfile write_blk_file))

                  (macro write_execfile_chr_files ((type ARG1))
                         (allow ARG1 execfile write_chr_file))

                  (macro write_execfile_dirs ((type ARG1))
                         (allow ARG1 execfile write_dir))

                  (macro write_execfile_fifo_files ((type ARG1))
                         (allow ARG1 execfile write_fifo_file))

                  (macro write_execfile_files ((type ARG1))
                         (allow ARG1 execfile write_file))

                  (macro writeinherited_execfile_blk_files ((type ARG1))
                         (allow ARG1 execfile writeinherited_blk_file))

                  (macro writeinherited_execfile_chr_files ((type ARG1))
                         (allow ARG1 execfile writeinherited_chr_file))

                  (macro writeinherited_execfile_dirs ((type ARG1))
                         (allow ARG1 execfile writeinherited_dir))

                  (macro writeinherited_execfile_fifo_files ((type ARG1))
                         (allow ARG1 execfile writeinherited_fifo_file))

                  (macro writeinherited_execfile_files ((type ARG1))
                         (allow ARG1 execfile writeinherited_file))

                  (macro writeinherited_execfile_sock_files ((type ARG1))
                         (allow ARG1 execfile writeinherited_sock_file))

                  (macro write_execfile_lnk_files ((type ARG1))
                         (allow ARG1 execfile write_lnk_file))

                  (macro write_execfile_sock_files ((type ARG1))
                         (allow ARG1 execfile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .file.exec.obj_base_template)
                  (blockinherit .file.exec.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .selinux.obj_type_transition_secfile (unconfined.subj_typeattr))
    (call .selinux.read.subj_type (unconfined.subj_typeattr)))

(in .selinux

    ;;
    ;; Contexts
    ;;

    (filecon
     "/etc/selinux/([^/]*/)?policy"
     dir
     secfile_file_context)
    (filecon
     "/etc/selinux/([^/]*/)?policy/.*"
     any
     secfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_secfile ((type ARG1))
           (call selinux.conffile_obj_type_transition
                 (ARG1 secfile file "policy")))

    ;;
    ;; Policy
    ;;

    (blockinherit .file.sec.obj_template)

    (block read

           ;;
           ;; Policy
           ;;

           (blockinherit .subj.subj_all_macro_template)

           (typeattribute
            not_subj_typeattr)

           (typeattributeset
            not_subj_typeattr
            (not
             subj_typeattr))

           (neverallow not_subj_typeattr secfile (file (read)))
           ))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .shadow.obj_type_transition_authfile (unconfined.subj_typeattr))
    (call .shadow.read.subj_type (unconfined.subj_typeattr)))

(block shadow

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/shadow"
        file
        authfile_file_context)
       (filecon
        "/etc/shadow~"
        file
        authfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro getattr_authfile_files ((type ARG1))
              (allow ARG1 authfile (file (getattr))))

       (macro obj_type_transition_authfile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 authfile file "shadow")))

       (macro dontaudit_read_authfile_files ((type ARG1))
              (dontaudit ARG1 authfile read_file))

       ;;
       ;; Policy
       ;;

       (blockinherit .file.auth.obj_template)

       (block read

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (typeattribute
               not_subj_typeattr)

              (typeattributeset
               not_subj_typeattr
               (not
                subj_typeattr))

              (neverallow not_subj_typeattr authfile (file (read)))
              ))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file

    ;;
    ;; Contexts
    ;;

    (filecon
     "/etc"
     dir
     conffile_file_context)
    (filecon
     "/etc/.*"
     any
     conffile_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_conffile ((type ARG1))
           (call .sys.rootfile_obj_type_transition
                 (ARG1 conffile dir "etc")))

    (macro read_conffile_lnk_files ((type ARG1))
           (typeattributeset read_conffile_lnk_file.subj_typeattr ARG1))

    ;;
    ;; Policy
    ;;

    (blockinherit conf.obj_template)

    (call obj_type_transition_conffile (unconfined.subj_typeattr))

    (block conf

           ;;
           ;; Policy
           ;;

           (blockinherit file.obj_all_macro_template)

           (call file.obj_type (obj_typeattr))

           (call .xattr.associate_filesystems (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   conffile_file_context
                   (.u
                    .r
                    conffile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   conffile)

                  (call .file.conf.obj_type (conffile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile addname_dir))

                  (macro append_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile append_blk_file))

                  (macro append_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile append_chr_file))

                  (macro append_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile append_fifo_file))

                  (macro append_conffile_files ((type ARG1))
                         (allow ARG1 conffile append_file))

                  (macro appendinherited_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile appendinherited_blk_file))

                  (macro appendinherited_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile appendinherited_chr_file))

                  (macro appendinherited_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile appendinherited_fifo_file))

                  (macro appendinherited_conffile_files ((type ARG1))
                         (allow ARG1 conffile appendinherited_file))

                  (macro conffile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 conffile ARG3 ARG4 ARG2)
                         (call addname_conffile_dirs (ARG1)))

                  (macro create_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (create))))

                  (macro create_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile create_blk_file))

                  (macro create_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile create_chr_file))

                  (macro create_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile create_dir))

                  (macro create_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile create_fifo_file))

                  (macro create_conffile_files ((type ARG1))
                         (allow ARG1 conffile create_file))

                  (macro create_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile create_lnk_file))

                  (macro create_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile create_sock_file))

                  (macro deletename_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile deletename_dir))

                  (macro delete_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (delete))))

                  (macro delete_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile delete_blk_file))

                  (macro delete_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile delete_chr_file))

                  (macro delete_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile delete_dir))

                  (macro delete_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile delete_fifo_file))

                  (macro delete_conffile_files ((type ARG1))
                         (allow ARG1 conffile delete_file))

                  (macro delete_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile delete_lnk_file))

                  (macro delete_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile delete_sock_file))

                  (macro execute_conffile_files ((type ARG1))
                         (allow ARG1 conffile execute_file))

                  (macro list_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile list_dir))

                  (macro listinherited_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile listinherited_dir))

                  (macro manage_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (manage))))

                  (macro manage_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile manage_blk_file))

                  (macro manage_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile manage_chr_file))

                  (macro manage_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile manage_dir))

                  (macro manage_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile manage_fifo_file))

                  (macro manage_conffile_files ((type ARG1))
                         (allow ARG1 conffile manage_file))

                  (macro manage_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile manage_lnk_file))

                  (macro manage_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile manage_sock_file))

                  (macro mapexecute_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile mapexecute_chr_file))

                  (macro mapexecute_conffile_files ((type ARG1))
                         (allow ARG1 conffile mapexecute_file))

                  (macro mounton_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (mounton))))

                  (macro mounton_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile mounton_blk_file))

                  (macro mounton_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile mounton_chr_file))

                  (macro mounton_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile mounton_dir))

                  (macro mounton_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile mounton_fifo_file))

                  (macro mounton_conffile_files ((type ARG1))
                         (allow ARG1 conffile mounton_file))

                  (macro mounton_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile mounton_lnk_file))

                  (macro mounton_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile mounton_sock_file))

                  (macro read_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (read))))

                  (macro read_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile read_blk_file))

                  (macro read_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile read_chr_file))

                  (macro read_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile read_fifo_file))

                  (macro read_conffile_files ((type ARG1))
                         (allow ARG1 conffile read_file))

                  (macro readinherited_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile readinherited_blk_file))

                  (macro readinherited_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile readinherited_chr_file))

                  (macro readinherited_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile readinherited_fifo_file))

                  (macro readinherited_conffile_files ((type ARG1))
                         (allow ARG1 conffile readinherited_file))

                  (macro readinherited_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile readinherited_sock_file))

                  (macro read_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile read_lnk_file))

                  (macro read_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile read_sock_file))

                  (macro readwrite_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (readwrite))))

                  (macro readwrite_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile readwrite_blk_file))

                  (macro readwrite_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile readwrite_chr_file))

                  (macro readwrite_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile readwrite_dir))

                  (macro readwrite_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile readwrite_fifo_file))

                  (macro readwrite_conffile_files ((type ARG1))
                         (allow ARG1 conffile readwrite_file))

                  (macro readwriteinherited_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile readwriteinherited_blk_file))

                  (macro readwriteinherited_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile readwriteinherited_chr_file))

                  (macro readwriteinherited_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile readwriteinherited_dir))

                  (macro readwriteinherited_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile readwriteinherited_fifo_file))

                  (macro readwriteinherited_conffile_files ((type ARG1))
                         (allow ARG1 conffile readwriteinherited_file))

                  (macro readwriteinherited_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile readwriteinherited_sock_file))

                  (macro readwrite_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile readwrite_lnk_file))

                  (macro readwrite_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile readwrite_sock_file))

                  (macro relabel_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (relabel))))

                  (macro relabel_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile relabel_blk_file))

                  (macro relabel_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile relabel_chr_file))

                  (macro relabel_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile relabel_dir))

                  (macro relabel_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile relabel_fifo_file))

                  (macro relabel_conffile_files ((type ARG1))
                         (allow ARG1 conffile relabel_file))

                  (macro relabel_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile relabel_lnk_file))

                  (macro relabel_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile relabel_sock_file))

                  (macro relabelfrom_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (relabelfrom))))

                  (macro relabelfrom_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile relabelfrom_blk_file))

                  (macro relabelfrom_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile relabelfrom_chr_file))

                  (macro relabelfrom_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile relabelfrom_dir))

                  (macro relabelfrom_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile relabelfrom_fifo_file))

                  (macro relabelfrom_conffile_files ((type ARG1))
                         (allow ARG1 conffile relabelfrom_file))

                  (macro relabelfrom_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile relabelfrom_lnk_file))

                  (macro relabelfrom_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile relabelfrom_sock_file))

                  (macro relabelto_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (relabelto))))

                  (macro relabelto_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile relabelto_blk_file))

                  (macro relabelto_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile relabelto_chr_file))

                  (macro relabelto_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile relabelto_dir))

                  (macro relabelto_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile relabelto_fifo_file))

                  (macro relabelto_conffile_files ((type ARG1))
                         (allow ARG1 conffile relabelto_file))

                  (macro relabelto_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile relabelto_lnk_file))

                  (macro relabelto_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile relabelto_sock_file))

                  (macro rename_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (rename))))

                  (macro rename_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile rename_blk_file))

                  (macro rename_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile rename_chr_file))

                  (macro rename_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile rename_dir))

                  (macro rename_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile rename_fifo_file))

                  (macro rename_conffile_files ((type ARG1))
                         (allow ARG1 conffile rename_file))

                  (macro rename_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile rename_lnk_file))

                  (macro rename_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile rename_sock_file))

                  (macro search_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile search_dir))

                  (macro write_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (write))))

                  (macro write_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile write_blk_file))

                  (macro write_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile write_chr_file))

                  (macro write_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile write_dir))

                  (macro write_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile write_fifo_file))

                  (macro write_conffile_files ((type ARG1))
                         (allow ARG1 conffile write_file))

                  (macro writeinherited_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile writeinherited_blk_file))

                  (macro writeinherited_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile writeinherited_chr_file))

                  (macro writeinherited_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile writeinherited_dir))

                  (macro writeinherited_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile writeinherited_fifo_file))

                  (macro writeinherited_conffile_files ((type ARG1))
                         (allow ARG1 conffile writeinherited_file))

                  (macro writeinherited_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile writeinherited_sock_file))

                  (macro write_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile write_lnk_file))

                  (macro write_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .file.conf.obj_base_template)
                  (blockinherit .file.conf.obj_macro_template)))

    (block read_conffile_lnk_file

           ;;
           ;; Policy
           ;;

           (blockinherit .subj.subj_all_macro_template)

           (allow subj_typeattr conffile read_lnk_file)
           (allow subj_typeattr conffile search_dir)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file

    ;;
    ;; Contexts
    ;;

    (filecon
     "/usr"
     dir
     datafile_file_context)
    (filecon
     "/usr/.*"
     any
     datafile_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_datafile ((type ARG1))
           (call .sys.rootfile_obj_type_transition
                 (ARG1 datafile dir "usr")))

    ;;
    ;; Policy
    ;;

    (blockinherit data.obj_template)

    (call obj_type_transition_datafile (unconfined.subj_typeattr))

    (block data

           ;;
           ;; Policy
           ;;

           (blockinherit file.obj_all_macro_template)

           (call file.obj_type (obj_typeattr))

           (call .xattr.associate_filesystems (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   datafile_file_context
                   (.u
                    .r
                    datafile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   datafile)

                  (call .file.data.obj_type (datafile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_datafile_dirs ((type ARG1))
                         (allow ARG1 datafile addname_dir))

                  (macro append_datafile_blk_files ((type ARG1))
                         (allow ARG1 datafile append_blk_file))

                  (macro append_datafile_chr_files ((type ARG1))
                         (allow ARG1 datafile append_chr_file))

                  (macro append_datafile_fifo_files ((type ARG1))
                         (allow ARG1 datafile append_fifo_file))

                  (macro append_datafile_files ((type ARG1))
                         (allow ARG1 datafile append_file))

                  (macro appendinherited_datafile_blk_files ((type ARG1))
                         (allow ARG1 datafile appendinherited_blk_file))

                  (macro appendinherited_datafile_chr_files ((type ARG1))
                         (allow ARG1 datafile appendinherited_chr_file))

                  (macro appendinherited_datafile_fifo_files ((type ARG1))
                         (allow ARG1 datafile appendinherited_fifo_file))

                  (macro appendinherited_datafile_files ((type ARG1))
                         (allow ARG1 datafile appendinherited_file))

                  (macro create_datafile ((type ARG1))
                         (allow ARG1 datafile (allfiles (create))))

                  (macro create_datafile_blk_files ((type ARG1))
                         (allow ARG1 datafile create_blk_file))

                  (macro create_datafile_chr_files ((type ARG1))
                         (allow ARG1 datafile create_chr_file))

                  (macro create_datafile_dirs ((type ARG1))
                         (allow ARG1 datafile create_dir))

                  (macro create_datafile_fifo_files ((type ARG1))
                         (allow ARG1 datafile create_fifo_file))

                  (macro create_datafile_files ((type ARG1))
                         (allow ARG1 datafile create_file))

                  (macro create_datafile_lnk_files ((type ARG1))
                         (allow ARG1 datafile create_lnk_file))

                  (macro create_datafile_sock_files ((type ARG1))
                         (allow ARG1 datafile create_sock_file))

                  (macro datafile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 datafile ARG3 ARG4 ARG2)
                         (call addname_datafile_dirs (ARG1)))

                  (macro deletename_datafile_dirs ((type ARG1))
                         (allow ARG1 datafile deletename_dir))

                  (macro delete_datafile ((type ARG1))
                         (allow ARG1 datafile (allfiles (delete))))

                  (macro delete_datafile_blk_files ((type ARG1))
                         (allow ARG1 datafile delete_blk_file))

                  (macro delete_datafile_chr_files ((type ARG1))
                         (allow ARG1 datafile delete_chr_file))

                  (macro delete_datafile_dirs ((type ARG1))
                         (allow ARG1 datafile delete_dir))

                  (macro delete_datafile_fifo_files ((type ARG1))
                         (allow ARG1 datafile delete_fifo_file))

                  (macro delete_datafile_files ((type ARG1))
                         (allow ARG1 datafile delete_file))

                  (macro delete_datafile_lnk_files ((type ARG1))
                         (allow ARG1 datafile delete_lnk_file))

                  (macro delete_datafile_sock_files ((type ARG1))
                         (allow ARG1 datafile delete_sock_file))

                  (macro execute_datafile_files ((type ARG1))
                         (allow ARG1 datafile execute_file))

                  (macro list_datafile_dirs ((type ARG1))
                         (allow ARG1 datafile list_dir))

                  (macro listinherited_datafile_dirs ((type ARG1))
                         (allow ARG1 datafile listinherited_dir))

                  (macro manage_datafile ((type ARG1))
                         (allow ARG1 datafile (allfiles (manage))))

                  (macro manage_datafile_blk_files ((type ARG1))
                         (allow ARG1 datafile manage_blk_file))

                  (macro manage_datafile_chr_files ((type ARG1))
                         (allow ARG1 datafile manage_chr_file))

                  (macro manage_datafile_dirs ((type ARG1))
                         (allow ARG1 datafile manage_dir))

                  (macro manage_datafile_fifo_files ((type ARG1))
                         (allow ARG1 datafile manage_fifo_file))

                  (macro manage_datafile_files ((type ARG1))
                         (allow ARG1 datafile manage_file))

                  (macro manage_datafile_lnk_files ((type ARG1))
                         (allow ARG1 datafile manage_lnk_file))

                  (macro manage_datafile_sock_files ((type ARG1))
                         (allow ARG1 datafile manage_sock_file))

                  (macro mapexecute_datafile_chr_files ((type ARG1))
                         (allow ARG1 datafile mapexecute_chr_file))

                  (macro mapexecute_datafile_files ((type ARG1))
                         (allow ARG1 datafile mapexecute_file))

                  (macro mounton_datafile ((type ARG1))
                         (allow ARG1 datafile (allfiles (mounton))))

                  (macro mounton_datafile_blk_files ((type ARG1))
                         (allow ARG1 datafile mounton_blk_file))

                  (macro mounton_datafile_chr_files ((type ARG1))
                         (allow ARG1 datafile mounton_chr_file))

                  (macro mounton_datafile_dirs ((type ARG1))
                         (allow ARG1 datafile mounton_dir))

                  (macro mounton_datafile_fifo_files ((type ARG1))
                         (allow ARG1 datafile mounton_fifo_file))

                  (macro mounton_datafile_files ((type ARG1))
                         (allow ARG1 datafile mounton_file))

                  (macro mounton_datafile_lnk_files ((type ARG1))
                         (allow ARG1 datafile mounton_lnk_file))

                  (macro mounton_datafile_sock_files ((type ARG1))
                         (allow ARG1 datafile mounton_sock_file))

                  (macro read_datafile ((type ARG1))
                         (allow ARG1 datafile (allfiles (read))))

                  (macro read_datafile_blk_files ((type ARG1))
                         (allow ARG1 datafile read_blk_file))

                  (macro read_datafile_chr_files ((type ARG1))
                         (allow ARG1 datafile read_chr_file))

                  (macro read_datafile_fifo_files ((type ARG1))
                         (allow ARG1 datafile read_fifo_file))

                  (macro read_datafile_files ((type ARG1))
                         (allow ARG1 datafile read_file))

                  (macro readinherited_datafile_blk_files ((type ARG1))
                         (allow ARG1 datafile readinherited_blk_file))

                  (macro readinherited_datafile_chr_files ((type ARG1))
                         (allow ARG1 datafile readinherited_chr_file))

                  (macro readinherited_datafile_fifo_files ((type ARG1))
                         (allow ARG1 datafile readinherited_fifo_file))

                  (macro readinherited_datafile_files ((type ARG1))
                         (allow ARG1 datafile readinherited_file))

                  (macro readinherited_datafile_sock_files ((type ARG1))
                         (allow ARG1 datafile readinherited_sock_file))

                  (macro read_datafile_lnk_files ((type ARG1))
                         (allow ARG1 datafile read_lnk_file))

                  (macro read_datafile_sock_files ((type ARG1))
                         (allow ARG1 datafile read_sock_file))

                  (macro readwrite_datafile ((type ARG1))
                         (allow ARG1 datafile (allfiles (readwrite))))

                  (macro readwrite_datafile_blk_files ((type ARG1))
                         (allow ARG1 datafile readwrite_blk_file))

                  (macro readwrite_datafile_chr_files ((type ARG1))
                         (allow ARG1 datafile readwrite_chr_file))

                  (macro readwrite_datafile_dirs ((type ARG1))
                         (allow ARG1 datafile readwrite_dir))

                  (macro readwrite_datafile_fifo_files ((type ARG1))
                         (allow ARG1 datafile readwrite_fifo_file))

                  (macro readwrite_datafile_files ((type ARG1))
                         (allow ARG1 datafile readwrite_file))

                  (macro readwriteinherited_datafile_blk_files ((type ARG1))
                         (allow ARG1 datafile readwriteinherited_blk_file))

                  (macro readwriteinherited_datafile_chr_files ((type ARG1))
                         (allow ARG1 datafile readwriteinherited_chr_file))

                  (macro readwriteinherited_datafile_dirs ((type ARG1))
                         (allow ARG1 datafile readwriteinherited_dir))

                  (macro readwriteinherited_datafile_fifo_files ((type ARG1))
                         (allow ARG1 datafile readwriteinherited_fifo_file))

                  (macro readwriteinherited_datafile_files ((type ARG1))
                         (allow ARG1 datafile readwriteinherited_file))

                  (macro readwriteinherited_datafile_sock_files ((type ARG1))
                         (allow ARG1 datafile readwriteinherited_sock_file))

                  (macro readwrite_datafile_lnk_files ((type ARG1))
                         (allow ARG1 datafile readwrite_lnk_file))

                  (macro readwrite_datafile_sock_files ((type ARG1))
                         (allow ARG1 datafile readwrite_sock_file))

                  (macro relabel_datafile ((type ARG1))
                         (allow ARG1 datafile (allfiles (relabel))))

                  (macro relabel_datafile_blk_files ((type ARG1))
                         (allow ARG1 datafile relabel_blk_file))

                  (macro relabel_datafile_chr_files ((type ARG1))
                         (allow ARG1 datafile relabel_chr_file))

                  (macro relabel_datafile_dirs ((type ARG1))
                         (allow ARG1 datafile relabel_dir))

                  (macro relabel_datafile_fifo_files ((type ARG1))
                         (allow ARG1 datafile relabel_fifo_file))

                  (macro relabel_datafile_files ((type ARG1))
                         (allow ARG1 datafile relabel_file))

                  (macro relabel_datafile_lnk_files ((type ARG1))
                         (allow ARG1 datafile relabel_lnk_file))

                  (macro relabel_datafile_sock_files ((type ARG1))
                         (allow ARG1 datafile relabel_sock_file))

                  (macro relabelfrom_datafile ((type ARG1))
                         (allow ARG1 datafile (allfiles (relabelfrom))))

                  (macro relabelfrom_datafile_blk_files ((type ARG1))
                         (allow ARG1 datafile relabelfrom_blk_file))

                  (macro relabelfrom_datafile_chr_files ((type ARG1))
                         (allow ARG1 datafile relabelfrom_chr_file))

                  (macro relabelfrom_datafile_dirs ((type ARG1))
                         (allow ARG1 datafile relabelfrom_dir))

                  (macro relabelfrom_datafile_fifo_files ((type ARG1))
                         (allow ARG1 datafile relabelfrom_fifo_file))

                  (macro relabelfrom_datafile_files ((type ARG1))
                         (allow ARG1 datafile relabelfrom_file))

                  (macro relabelfrom_datafile_lnk_files ((type ARG1))
                         (allow ARG1 datafile relabelfrom_lnk_file))

                  (macro relabelfrom_datafile_sock_files ((type ARG1))
                         (allow ARG1 datafile relabelfrom_sock_file))

                  (macro relabelto_datafile ((type ARG1))
                         (allow ARG1 datafile (allfiles (relabelto))))

                  (macro relabelto_datafile_blk_files ((type ARG1))
                         (allow ARG1 datafile relabelto_blk_file))

                  (macro relabelto_datafile_chr_files ((type ARG1))
                         (allow ARG1 datafile relabelto_chr_file))

                  (macro relabelto_datafile_dirs ((type ARG1))
                         (allow ARG1 datafile relabelto_dir))

                  (macro relabelto_datafile_fifo_files ((type ARG1))
                         (allow ARG1 datafile relabelto_fifo_file))

                  (macro relabelto_datafile_files ((type ARG1))
                         (allow ARG1 datafile relabelto_file))

                  (macro relabelto_datafile_lnk_files ((type ARG1))
                         (allow ARG1 datafile relabelto_lnk_file))

                  (macro relabelto_datafile_sock_files ((type ARG1))
                         (allow ARG1 datafile relabelto_sock_file))

                  (macro rename_datafile ((type ARG1))
                         (allow ARG1 datafile (allfiles (rename))))

                  (macro rename_datafile_blk_files ((type ARG1))
                         (allow ARG1 datafile rename_blk_file))

                  (macro rename_datafile_chr_files ((type ARG1))
                         (allow ARG1 datafile rename_chr_file))

                  (macro rename_datafile_dirs ((type ARG1))
                         (allow ARG1 datafile rename_dir))

                  (macro rename_datafile_fifo_files ((type ARG1))
                         (allow ARG1 datafile rename_fifo_file))

                  (macro rename_datafile_files ((type ARG1))
                         (allow ARG1 datafile rename_file))

                  (macro rename_datafile_lnk_files ((type ARG1))
                         (allow ARG1 datafile rename_lnk_file))

                  (macro rename_datafile_sock_files ((type ARG1))
                         (allow ARG1 datafile rename_sock_file))

                  (macro search_datafile_dirs ((type ARG1))
                         (allow ARG1 datafile search_dir))

                  (macro write_datafile ((type ARG1))
                         (allow ARG1 datafile (allfiles (write))))

                  (macro write_datafile_blk_files ((type ARG1))
                         (allow ARG1 datafile write_blk_file))

                  (macro write_datafile_chr_files ((type ARG1))
                         (allow ARG1 datafile write_chr_file))

                  (macro write_datafile_dirs ((type ARG1))
                         (allow ARG1 datafile write_dir))

                  (macro write_datafile_fifo_files ((type ARG1))
                         (allow ARG1 datafile write_fifo_file))

                  (macro write_datafile_files ((type ARG1))
                         (allow ARG1 datafile write_file))

                  (macro writeinherited_datafile_blk_files ((type ARG1))
                         (allow ARG1 datafile writeinherited_blk_file))

                  (macro writeinherited_datafile_chr_files ((type ARG1))
                         (allow ARG1 datafile writeinherited_chr_file))

                  (macro writeinherited_datafile_dirs ((type ARG1))
                         (allow ARG1 datafile writeinherited_dir))

                  (macro writeinherited_datafile_fifo_files ((type ARG1))
                         (allow ARG1 datafile writeinherited_fifo_file))

                  (macro writeinherited_datafile_files ((type ARG1))
                         (allow ARG1 datafile writeinherited_file))

                  (macro writeinherited_datafile_sock_files ((type ARG1))
                         (allow ARG1 datafile writeinherited_sock_file))

                  (macro write_datafile_lnk_files ((type ARG1))
                         (allow ARG1 datafile write_lnk_file))

                  (macro write_datafile_sock_files ((type ARG1))
                         (allow ARG1 datafile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .file.data.obj_base_template)
                  (blockinherit .file.data.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .cron.conffile_obj_type_transition_miscfile
          (unconfined.subj_typeattr))
    (call .cron.spooltmpfile_obj_type_transition_miscfile
          (unconfined.subj_typeattr)))

(block cron

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/crontabs"
        dir
        miscfile_file_context)
       (filecon
        "/etc/crontabs/.*"
        any
        miscfile_file_context)

       (filecon
        "/tmp/spool/cron"
        dir
        miscfile_file_context)
       (filecon
        "/tmp/spool/cron/.*"
        any
        miscfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro conffile_obj_type_transition_miscfile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 miscfile dir "crontabs")))

       (macro getattr_miscfile_files ((type ARG1))
              (allow ARG1 miscfile (file (getattr))))

       (macro spooltmpfile_obj_type_transition_miscfile ((type ARG1))
              (call .tmpfile.spooltmpfile_obj_type_transition
                    (ARG1 miscfile dir "cron")))

       ;;
       ;; Policy
       ;;

       (blockinherit .file.misc.obj_template)

       (call .tmp.associate_filesystems (miscfile))
       (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .wget.rootfile_obj_type_transition_miscfile
          (unconfined.subj_typeattr)))

(in wget

    ;;
    ;; Contexts
    ;;

    (filecon
     "/\.wget-hsts"
     file
     miscfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro rootfile_obj_type_transition_miscfile ((type ARG1))
           (call .sys.rootfile_obj_type_transition
                 (ARG1 miscfile file ".wget-hsts")))

    ;;
    ;; Policy
    ;;

    (blockinherit .file.misc.obj_template)

    (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .network.libfile_obj_type_transition_miscfile
          (unconfined.subj_typeattr)))

(block network

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/lib/network"
        dir
        miscfile_file_context)
       (filecon
        "/usr/lib/network/.*"
        any
        miscfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro libfile_obj_type_transition_miscfile ((type ARG1))
              (call .file.libfile_obj_type_transition
                    (ARG1 miscfile dir "network")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.misc.obj_template)

       (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .firmware.libfile_obj_type_transition_miscfile
          (unconfined.subj_typeattr)))

(in .firmware

    ;;
    ;; Contexts
    ;;

    (filecon
     "/usr/lib/firmware"
     dir
     miscfile_file_context)
    (filecon
     "/usr/lib/firmware/.*"
     any
     miscfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro libfile_obj_type_transition_miscfile ((type ARG1))
           (call .file.libfile_obj_type_transition
                 (ARG1 miscfile dir "firmware")))

    ;;
    ;; Policy
    ;;

    (blockinherit file.misc.obj_template)

    (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .www.rootfile_obj_type_transition_miscfile
          (unconfined.subj_typeattr)))

(block www

       ;;
       ;; Contexts
       ;;

       (filecon
        "/www"
        dir
        miscfile_file_context)
       (filecon
        "/www/.*"
        any
        miscfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro rootfile_obj_type_transition_miscfile ((type ARG1))
              (call .sys.rootfile_obj_type_transition
                    (ARG1 miscfile dir "www")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.misc.obj_template)

       (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .functions.libfile_obj_type_transition_miscfile
          (unconfined.subj_typeattr)))

(block functions

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/lib/config"
        dir
        miscfile_file_context)
       (filecon
        "/usr/lib/config/.*"
        any
        miscfile_file_context)
       (filecon
        "/usr/lib/functions"
        dir
        miscfile_file_context)
       (filecon
        "/usr/lib/functions/.*"
        any
        miscfile_file_context)
       (filecon
        "/usr/lib/functions\.sh"
        file
        miscfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro libfile_obj_type_transition_miscfile ((type ARG1))
              (call .file.libfile_obj_type_transition
                    (ARG1 miscfile dir "config"))
              (call .file.libfile_obj_type_transition
                    (ARG1 miscfile dir "functions"))
              (call .file.libfile_obj_type_transition
                    (ARG1 miscfile file "functions.sh")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.misc.obj_template)

       (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .osrelease.conffile_obj_type_transition_miscfile
          (unconfined.subj_typeattr))
    (call .osrelease.libfile_obj_type_transition_miscfile
          (unconfined.subj_typeattr)))

(block osrelease

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/openwrt_release"
        file
        miscfile_file_context)
       (filecon
        "/etc/openwrt_version"
        file
        miscfile_file_context)

       (filecon
        "/usr/lib/os-release"
        file
        miscfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro conffile_obj_type_transition_miscfile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 miscfile file "openwrt_release"))
              (call .file.conffile_obj_type_transition
                    (ARG1 miscfile file "openwrt_version")))

       (macro libfile_obj_type_transition_miscfile ((type ARG1))
              (call .file.libfile_obj_type_transition
                    (ARG1 miscfile file "os-release")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.misc.obj_template)

       (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .syscfg.obj_type_transition_miscfile (unconfined.subj_typeattr)))

(block syscfg

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/syscfg"
        dir
        miscfile_file_context)
       (filecon
        "/tmp/syscfg/.*"
        any
        miscfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_miscfile ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 miscfile dir "syscfg")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.misc.obj_template)

       (call .tmp.associate_filesystems (miscfile))
       (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .nameservice.conffile_obj_type_transition_miscfile
          (unconfined.subj_typeattr)))

(block nameservice

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/ethers"
        file
        miscfile_file_context)
       (filecon
        "/etc/group"
        file
        miscfile_file_context)
       (filecon
        "/etc/group~"
        file
        miscfile_file_context)
       (filecon
        "/etc/hosts"
        file
        miscfile_file_context)
       (filecon
        "/etc/passwd"
        file
        miscfile_file_context)
       (filecon
        "/etc/passwd~"
        file
        miscfile_file_context)
       (filecon
        "/etc/protocols"
        file
        miscfile_file_context)
       (filecon
        "/etc/services"
        file
        miscfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro conffile_obj_type_transition_miscfile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 miscfile file "ethers"))
              (call .file.conffile_obj_type_transition
                    (ARG1 miscfile file "group"))
              (call .file.conffile_obj_type_transition
                    (ARG1 miscfile file "hosts"))
              (call .file.conffile_obj_type_transition
                    (ARG1 miscfile file "passwd"))
              (call .file.conffile_obj_type_transition
                    (ARG1 miscfile file "protocols"))
              (call .file.conffile_obj_type_transition
                    (ARG1 miscfile file "services")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.misc.obj_template)

       (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call mnt.obj_type_transition_miscfile (unconfined.subj_typeattr)))

(block mnt

       ;;
       ;; Contexts
       ;;

       (filecon
        "/mnt"
        dir
        miscfile_file_context)
       (filecon
        "/mnt/.*"
        any
        ())

       ;;
       ;; Macros
       ;;

       (macro getattr_miscfile_dirs ((type ARG1))
              (allow ARG1 miscfile (dir (getattr))))

       (macro mounton_miscfile_dirs ((type ARG1))
              (allow ARG1 miscfile (dir (getattr mounton))))

       (macro obj_type_transition_miscfile ((type ARG1))
              (call .sys.rootfile_obj_type_transition
                    (ARG1 miscfile dir "mnt")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.misc.obj_template)

       (call .sys.mountpoint.obj_type (miscfile))

       (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .locale.datafile_obj_type_transition_miscfile
          (unconfined.subj_typeattr))
    (call .locale.tmp_obj_type_transition_miscfile
          (unconfined.subj_typeattr)))

(block locale

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/localtime"
        symlink
        miscfile_file_context)

       (filecon
        "/tmp/TZ"
        file
        miscfile_file_context)

       (filecon
        "/usr/share/zoneinfo"
        dir
        miscfile_file_context)
       (filecon
        "/usr/share/zoneinfo/.*"
        any
        miscfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro map_miscfile_files ((type ARG1))
              (allow ARG1 miscfile (file (map))))

       (macro datafile_obj_type_transition_miscfile ((type ARG1))
              (call .file.datafile_obj_type_transition
                    (ARG1 miscfile dir "zoneinfo")))

       (macro tmp_obj_type_transition_miscfile ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 miscfile file "TZ"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 miscfile lnk_file "localtime")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.misc.obj_template)

       (call .tmp.associate_filesystems (miscfile))
       (call .xattr.associate_filesystems (miscfile))

       (block read

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (call list_miscfile_dirs (subj_typeattr))
              (call map_miscfile_files (subj_typeattr))
              (call read_miscfile_files (subj_typeattr))
              (call read_miscfile_lnk_files (subj_typeattr))

              (call .file.read_conffile_lnk_files (subj_typeattr))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .lostfound.mntmiscfile_obj_type_transition_miscfile
          (unconfined.subj_typeattr))
    (call .lostfound.obj_type_transition_miscfile (unconfined.subj_typeattr))
    (call .lostfound.overlaymiscfile_obj_type_transition_miscfile
          (unconfined.subj_typeattr)))

(block lostfound

       ;;
       ;; Contexts
       ;;

       (filecon
        "/lost\+found"
        dir
        miscfile_file_context)
       (filecon
        "/lost\+found/.*"
        any
        ())

       (filecon
        "/mnt(/.*)?/lost\+found"
        dir
        miscfile_file_context)
       (filecon
        "/mnt(/.*)?/lost\+found/.*"
        any
        ())

       (filecon
        "/overlay/lost\+found"
        dir
        miscfile_file_context)
       (filecon
        "/overlay/lost\+found/.*"
        any
        ())

       ;;
       ;; Macros
       ;;

       (macro mntmiscfile_obj_type_transition_miscfile ((type ARG1))
              (call .mnt.miscfile_obj_type_transition
                    (ARG1 miscfile dir "lost+found")))

       (macro obj_type_transition_miscfile ((type ARG1))
              (call .sys.rootfile_obj_type_transition
                    (ARG1 miscfile dir "lost+found")))

       (macro overlaymiscfile_obj_type_transition_miscfile ((type ARG1))
              (call .overlay.miscfile_obj_type_transition
                    (ARG1 miscfile dir "lost+found")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.misc.obj_template)

       (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call overlay.obj_type_transition_miscfile (unconfined.subj_typeattr))
    (call overlay.tmp_obj_type_transition_miscfile (unconfined.subj_typeattr)))

(block overlay

       ;;
       ;; Contexts
       ;;

       (filecon
        "/overlay"
        dir
        miscfile_file_context)
       (filecon
        "/overlay/.*"
        any
        miscfile_file_context)

       (filecon
        "/rwm"
        dir
        miscfile_file_context)
       (filecon
        "/rwm/.*"
        any
        miscfile_file_context)

       (filecon
        "/tmp/overlay"
        dir
        miscfile_file_context)
       (filecon
        "/tmp/overlay/.*"
        any
        miscfile_file_context)

       (filecon
        "/tmp/root/work"
        dir
        miscfile_file_context)
       (filecon
        "/tmp/root/work/.*"
        any
        miscfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro mounton_miscfile_dirs ((type ARG1))
              (allow ARG1 miscfile (dir (getattr mounton))))

       (macro obj_type_transition_miscfile ((type ARG1))
              (call .sys.rootfile_obj_type_transition
                    (ARG1 miscfile dir "overlay"))
              (call .sys.rootfile_obj_type_transition
                    (ARG1 miscfile dir "rwm")))

       (macro tmp_obj_type_transition_miscfile ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 miscfile dir "overlay"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 miscfile dir "work")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.misc.obj_template)

       (call .sys.mountpoint.obj_type (miscfile))

       (call .tmp.associate_filesystems (miscfile))
       (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .upgrade.libfile_obj_type_transition_miscfile
          (unconfined.subj_typeattr)))

(block upgrade

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/lib/upgrade"
        dir
        miscfile_file_context)
       (filecon
        "/usr/lib/upgrade/.*"
        any
        miscfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro libfile_obj_type_transition_miscfile ((type ARG1))
              (call .file.libfile_obj_type_transition
                    (ARG1 miscfile dir "upgrade")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.misc.obj_template)

       (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .board.conffile_obj_type_transition_miscfile
          (unconfined.subj_typeattr))
    (call .board.tmp_obj_type_transition_miscfile (unconfined.subj_typeattr)))

(block board

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/board\.json"
        file
        miscfile_file_context)

       (filecon
        "/tmp/board\.json"
        file
        miscfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro conffile_obj_type_transition_miscfile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 miscfile file "board.json")))

       (macro tmp_obj_type_transition_miscfile ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 miscfile file "board.json")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.misc.obj_template)

       (call .tmp.associate_filesystems (miscfile))
       (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .unknown.obj_type_transition_miscfile
          (unconfined.subj_typeattr blk_file "*"))
    (call .unknown.obj_type_transition_miscfile
          (unconfined.subj_typeattr chr_file "*"))
    (call .unknown.obj_type_transition_miscfile
          (unconfined.subj_typeattr dir "*"))
    (call .unknown.obj_type_transition_miscfile
          (unconfined.subj_typeattr fifo_file "*"))
    (call .unknown.obj_type_transition_miscfile
          (unconfined.subj_typeattr file "*"))
    (call .unknown.obj_type_transition_miscfile
          (unconfined.subj_typeattr sock_file "*")))

(block unknown

       ;;
       ;; Contexts
       ;;

       (filecon
        "/.*"
        block
        miscfile_file_context)
       (filecon
        "/.*"
        char
        miscfile_file_context)
       (filecon
        "/.*"
        dir
        miscfile_file_context)
       (filecon
        "/.*"
        file
        miscfile_file_context)
       (filecon
        "/.*"
        pipe
        miscfile_file_context)
       (filecon
        "/.*"
        socket
        miscfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_miscfile ((type ARG1)(class ARG2)(name ARG3))
              (call .sys.rootfile_obj_type_transition
                    (ARG1 miscfile ARG2 ARG3)))

       ;;
       ;; Policy
       ;;

       (blockinherit file.misc.obj_template)

       (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .openssl.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block openssl

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/openssl"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "openssl")))

       ;;
       ;; Policy
       ;;

       (blockinherit .file.exec.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .px5g.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block px5g

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/px5g"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "px5g")))

       ;;
       ;; Policy
       ;;

       (blockinherit .file.exec.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .wget.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block wget

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/wget-ssl"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "wget-ssl")))

       ;;
       ;; Policy
       ;;

       (blockinherit .file.exec.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .shell.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block shell

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/bash"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/busybox"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/tcsh"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro execute_execfile_files ((type ARG1))
              (allow ARG1 execfile execute_file)
              ;; coreutils, audit these events
              (call .file.auditallow_execute_execfile_files (ARG1))
              (call .file.execute_execfile_files (ARG1)))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "bash"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "busybox"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "tcsh")))

       ;;
       ;; Policy
       ;;

       (blockinherit file.exec.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .lua.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block lua

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/lua5\.1"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "lua5.1")))

       ;;
       ;; Policy
       ;;

       (blockinherit .file.exec.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .login.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block login

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/login\.sh"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "login.sh")))

       ;;
       ;; Policy
       ;;

       (blockinherit .file.exec.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .socat.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block socat

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/socat"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "socat")))

       ;;
       ;; Policy
       ;;

       (blockinherit .file.exec.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file

    ;;
    ;; Contexts
    ;;

    (filecon
     "/etc/init\.d"
     dir
     initscriptfile_file_context)
    (filecon
     "/etc/init\.d/.*"
     any
     initscriptfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_initscriptfile ((type ARG1))
           (call .file.conffile_obj_type_transition
                 (ARG1 initscriptfile dir "init.d")))

    (macro dontaudit_auditexecuteaccess_initscriptfile_files ((type ARG1))
           (dontaudit ARG1 initscriptfile (file (getattr execute))))

    ;;
    ;; Policy
    ;;

    (blockinherit initscript.obj_template)

    (call obj_type_transition_initscriptfile (unconfined.subj_typeattr))

    (block initscript

           ;;
           ;; Macros
           ;;

           (macro entrypoint_all_files ((type ARG1))
                  (allow ARG1 obj_typeattr (file (entrypoint))))

           ;;
           ;; Policy
           ;;

           (blockinherit file.obj_all_macro_template)

           (call exec.obj_type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   initscriptfile_file_context
                   (.u
                    .r
                    initscriptfile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   initscriptfile)

                  (call .file.initscript.obj_type (initscriptfile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_initscriptfile_dirs ((type ARG1))
                         (allow ARG1 initscriptfile addname_dir))

                  (macro append_initscriptfile_blk_files ((type ARG1))
                         (allow ARG1 initscriptfile append_blk_file))

                  (macro append_initscriptfile_chr_files ((type ARG1))
                         (allow ARG1 initscriptfile append_chr_file))

                  (macro append_initscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 initscriptfile append_fifo_file))

                  (macro append_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile append_file))

                  (macro appendinherited_initscriptfile_blk_files ((type ARG1))
                         (allow ARG1 initscriptfile appendinherited_blk_file))

                  (macro appendinherited_initscriptfile_chr_files ((type ARG1))
                         (allow ARG1 initscriptfile appendinherited_chr_file))

                  (macro appendinherited_initscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 initscriptfile appendinherited_fifo_file))

                  (macro appendinherited_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile appendinherited_file))

                  (macro create_initscriptfile ((type ARG1))
                         (allow ARG1 initscriptfile (allfiles (create))))

                  (macro create_initscriptfile_blk_files ((type ARG1))
                         (allow ARG1 initscriptfile create_blk_file))

                  (macro create_initscriptfile_chr_files ((type ARG1))
                         (allow ARG1 initscriptfile create_chr_file))

                  (macro create_initscriptfile_dirs ((type ARG1))
                         (allow ARG1 initscriptfile create_dir))

                  (macro create_initscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 initscriptfile create_fifo_file))

                  (macro create_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile create_file))

                  (macro create_initscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 initscriptfile create_lnk_file))

                  (macro create_initscriptfile_sock_files ((type ARG1))
                         (allow ARG1 initscriptfile create_sock_file))

                  (macro deletename_initscriptfile_dirs ((type ARG1))
                         (allow ARG1 initscriptfile deletename_dir))

                  (macro delete_initscriptfile ((type ARG1))
                         (allow ARG1 initscriptfile (allfiles (delete))))

                  (macro delete_initscriptfile_blk_files ((type ARG1))
                         (allow ARG1 initscriptfile delete_blk_file))

                  (macro delete_initscriptfile_chr_files ((type ARG1))
                         (allow ARG1 initscriptfile delete_chr_file))

                  (macro delete_initscriptfile_dirs ((type ARG1))
                         (allow ARG1 initscriptfile delete_dir))

                  (macro delete_initscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 initscriptfile delete_fifo_file))

                  (macro delete_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile delete_file))

                  (macro delete_initscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 initscriptfile delete_lnk_file))

                  (macro delete_initscriptfile_sock_files ((type ARG1))
                         (allow ARG1 initscriptfile delete_sock_file))

                  (macro entrypoint_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile (file (entrypoint))))

                  (macro initscriptfile_subj_type_transition ((type ARG1)(type ARG2))
                         (typetransition ARG1 initscriptfile process "*" ARG2))

                  (macro initscriptfile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 initscriptfile ARG3 ARG4 ARG2)
                         (call addname_initscriptfile_dirs (ARG1)))

                  (macro execute_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile execute_file))

                  (macro list_initscriptfile_dirs ((type ARG1))
                         (allow ARG1 initscriptfile list_dir))

                  (macro listinherited_initscriptfile_dirs ((type ARG1))
                         (allow ARG1 initscriptfile listinherited_dir))

                  (macro manage_initscriptfile ((type ARG1))
                         (allow ARG1 initscriptfile (allfiles (manage))))

                  (macro manage_initscriptfile_blk_files ((type ARG1))
                         (allow ARG1 initscriptfile manage_blk_file))

                  (macro manage_initscriptfile_chr_files ((type ARG1))
                         (allow ARG1 initscriptfile manage_chr_file))

                  (macro manage_initscriptfile_dirs ((type ARG1))
                         (allow ARG1 initscriptfile manage_dir))

                  (macro manage_initscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 initscriptfile manage_fifo_file))

                  (macro manage_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile manage_file))

                  (macro manage_initscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 initscriptfile manage_lnk_file))

                  (macro manage_initscriptfile_sock_files ((type ARG1))
                         (allow ARG1 initscriptfile manage_sock_file))

                  (macro mapexecute_initscriptfile_chr_files ((type ARG1))
                         (allow ARG1 initscriptfile mapexecute_chr_file))

                  (macro mapexecute_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile mapexecute_file))

                  (macro mounton_initscriptfile ((type ARG1))
                         (allow ARG1 initscriptfile (allfiles (mounton))))

                  (macro mounton_initscriptfile_blk_files ((type ARG1))
                         (allow ARG1 initscriptfile mounton_blk_file))

                  (macro mounton_initscriptfile_chr_files ((type ARG1))
                         (allow ARG1 initscriptfile mounton_chr_file))

                  (macro mounton_initscriptfile_dirs ((type ARG1))
                         (allow ARG1 initscriptfile mounton_dir))

                  (macro mounton_initscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 initscriptfile mounton_fifo_file))

                  (macro mounton_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile mounton_file))

                  (macro mounton_initscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 initscriptfile mounton_lnk_file))

                  (macro mounton_initscriptfile_sock_files ((type ARG1))
                         (allow ARG1 initscriptfile mounton_sock_file))

                  (macro read_initscriptfile ((type ARG1))
                         (allow ARG1 initscriptfile (allfiles (read))))

                  (macro read_initscriptfile_blk_files ((type ARG1))
                         (allow ARG1 initscriptfile read_blk_file))

                  (macro read_initscriptfile_chr_files ((type ARG1))
                         (allow ARG1 initscriptfile read_chr_file))

                  (macro read_initscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 initscriptfile read_fifo_file))

                  (macro read_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile read_file))

                  (macro readinherited_initscriptfile_blk_files ((type ARG1))
                         (allow ARG1 initscriptfile readinherited_blk_file))

                  (macro readinherited_initscriptfile_chr_files ((type ARG1))
                         (allow ARG1 initscriptfile readinherited_chr_file))

                  (macro readinherited_initscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 initscriptfile readinherited_fifo_file))

                  (macro readinherited_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile readinherited_file))

                  (macro readinherited_initscriptfile_sock_files ((type ARG1))
                         (allow ARG1 initscriptfile readinherited_sock_file))

                  (macro read_initscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 initscriptfile read_lnk_file))

                  (macro read_initscriptfile_sock_files ((type ARG1))
                         (allow ARG1 initscriptfile read_sock_file))

                  (macro readwrite_initscriptfile ((type ARG1))
                         (allow ARG1 initscriptfile (allfiles (readwrite))))

                  (macro readwrite_initscriptfile_blk_files ((type ARG1))
                         (allow ARG1 initscriptfile readwrite_blk_file))

                  (macro readwrite_initscriptfile_chr_files ((type ARG1))
                         (allow ARG1 initscriptfile readwrite_chr_file))

                  (macro readwrite_initscriptfile_dirs ((type ARG1))
                         (allow ARG1 initscriptfile readwrite_dir))

                  (macro readwrite_initscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 initscriptfile readwrite_fifo_file))

                  (macro readwrite_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile readwrite_file))

                  (macro readwriteinherited_initscriptfile_blk_files ((type ARG1))
                         (allow ARG1 initscriptfile readwriteinherited_blk_file))

                  (macro readwriteinherited_initscriptfile_chr_files ((type ARG1))
                         (allow ARG1 initscriptfile readwriteinherited_chr_file))

                  (macro readwriteinherited_initscriptfile_dirs ((type ARG1))
                         (allow ARG1 initscriptfile readwriteinherited_dir))

                  (macro readwriteinherited_initscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 initscriptfile readwriteinherited_fifo_file))

                  (macro readwriteinherited_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile readwriteinherited_file))

                  (macro readwriteinherited_initscriptfile_sock_files ((type ARG1))
                         (allow ARG1 initscriptfile readwriteinherited_sock_file))

                  (macro readwrite_initscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 initscriptfile readwrite_lnk_file))

                  (macro readwrite_initscriptfile_sock_files ((type ARG1))
                         (allow ARG1 initscriptfile readwrite_sock_file))

                  (macro relabel_initscriptfile ((type ARG1))
                         (allow ARG1 initscriptfile (allfiles (relabel))))

                  (macro relabel_initscriptfile_blk_files ((type ARG1))
                         (allow ARG1 initscriptfile relabel_blk_file))

                  (macro relabel_initscriptfile_chr_files ((type ARG1))
                         (allow ARG1 initscriptfile relabel_chr_file))

                  (macro relabel_initscriptfile_dirs ((type ARG1))
                         (allow ARG1 initscriptfile relabel_dir))

                  (macro relabel_initscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 initscriptfile relabel_fifo_file))

                  (macro relabel_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile relabel_file))

                  (macro relabel_initscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 initscriptfile relabel_lnk_file))

                  (macro relabel_initscriptfile_sock_files ((type ARG1))
                         (allow ARG1 initscriptfile relabel_sock_file))

                  (macro relabelfrom_initscriptfile ((type ARG1))
                         (allow ARG1 initscriptfile (allfiles (relabelfrom))))

                  (macro relabelfrom_initscriptfile_blk_files ((type ARG1))
                         (allow ARG1 initscriptfile relabelfrom_blk_file))

                  (macro relabelfrom_initscriptfile_chr_files ((type ARG1))
                         (allow ARG1 initscriptfile relabelfrom_chr_file))

                  (macro relabelfrom_initscriptfile_dirs ((type ARG1))
                         (allow ARG1 initscriptfile relabelfrom_dir))

                  (macro relabelfrom_initscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 initscriptfile relabelfrom_fifo_file))

                  (macro relabelfrom_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile relabelfrom_file))

                  (macro relabelfrom_initscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 initscriptfile relabelfrom_lnk_file))

                  (macro relabelfrom_initscriptfile_sock_files ((type ARG1))
                         (allow ARG1 initscriptfile relabelfrom_sock_file))

                  (macro relabelto_initscriptfile ((type ARG1))
                         (allow ARG1 initscriptfile (allfiles (relabelto))))

                  (macro relabelto_initscriptfile_blk_files ((type ARG1))
                         (allow ARG1 initscriptfile relabelto_blk_file))

                  (macro relabelto_initscriptfile_chr_files ((type ARG1))
                         (allow ARG1 initscriptfile relabelto_chr_file))

                  (macro relabelto_initscriptfile_dirs ((type ARG1))
                         (allow ARG1 initscriptfile relabelto_dir))

                  (macro relabelto_initscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 initscriptfile relabelto_fifo_file))

                  (macro relabelto_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile relabelto_file))

                  (macro relabelto_initscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 initscriptfile relabelto_lnk_file))

                  (macro relabelto_initscriptfile_sock_files ((type ARG1))
                         (allow ARG1 initscriptfile relabelto_sock_file))

                  (macro rename_initscriptfile ((type ARG1))
                         (allow ARG1 initscriptfile (allfiles (rename))))

                  (macro rename_initscriptfile_blk_files ((type ARG1))
                         (allow ARG1 initscriptfile rename_blk_file))

                  (macro rename_initscriptfile_chr_files ((type ARG1))
                         (allow ARG1 initscriptfile rename_chr_file))

                  (macro rename_initscriptfile_dirs ((type ARG1))
                         (allow ARG1 initscriptfile rename_dir))

                  (macro rename_initscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 initscriptfile rename_fifo_file))

                  (macro rename_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile rename_file))

                  (macro rename_initscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 initscriptfile rename_lnk_file))

                  (macro rename_initscriptfile_sock_files ((type ARG1))
                         (allow ARG1 initscriptfile rename_sock_file))

                  (macro search_initscriptfile_dirs ((type ARG1))
                         (allow ARG1 initscriptfile search_dir))

                  (macro write_initscriptfile ((type ARG1))
                         (allow ARG1 initscriptfile (allfiles (write))))

                  (macro write_initscriptfile_blk_files ((type ARG1))
                         (allow ARG1 initscriptfile write_blk_file))

                  (macro write_initscriptfile_chr_files ((type ARG1))
                         (allow ARG1 initscriptfile write_chr_file))

                  (macro write_initscriptfile_dirs ((type ARG1))
                         (allow ARG1 initscriptfile write_dir))

                  (macro write_initscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 initscriptfile write_fifo_file))

                  (macro write_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile write_file))

                  (macro writeinherited_initscriptfile_blk_files ((type ARG1))
                         (allow ARG1 initscriptfile writeinherited_blk_file))

                  (macro writeinherited_initscriptfile_chr_files ((type ARG1))
                         (allow ARG1 initscriptfile writeinherited_chr_file))

                  (macro writeinherited_initscriptfile_dirs ((type ARG1))
                         (allow ARG1 initscriptfile writeinherited_dir))

                  (macro writeinherited_initscriptfile_fifo_files ((type ARG1))
                         (allow ARG1 initscriptfile writeinherited_fifo_file))

                  (macro writeinherited_initscriptfile_files ((type ARG1))
                         (allow ARG1 initscriptfile writeinherited_file))

                  (macro writeinherited_initscriptfile_sock_files ((type ARG1))
                         (allow ARG1 initscriptfile writeinherited_sock_file))

                  (macro write_initscriptfile_lnk_files ((type ARG1))
                         (allow ARG1 initscriptfile write_lnk_file))

                  (macro write_initscriptfile_sock_files ((type ARG1))
                         (allow ARG1 initscriptfile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .file.initscript.obj_base_template)
                  (blockinherit .file.initscript.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(sid any_socket)
(sid file_labels)
(sid fs)
(sid icmp_socket)
(sid igmp_packet)
(sid init)
(sid kmod)
(sid policy)
(sid scmp_packet)
(sid sysctl)
(sid sysctl_dev)
(sid sysctl_fs)
(sid sysctl_kernel)
(sid sysctl_modprobe)
(sid sysctl_net)
(sid sysctl_net_unix)
(sid sysctl_vm)
(sid tcp_socket)

(sidorder
 (kernel security unlabeled fs file file_labels init any_socket port
         netif netmsg node igmp_packet icmp_socket tcp_socket sysctl_modprobe
         sysctl sysctl_fs sysctl_kernel sysctl_net sysctl_net_unix
         sysctl_vm sysctl_dev kmod policy scmp_packet devnull))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

;;
;; Classmaps
;;

(classmap
 allsockets
 (common getattr))

(classmapping
 allsockets
 common
 (appletalk_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (appletalk_socket
  (getattr)))
(classmapping
 allsockets
 common
 (dccp_socket
  (not (accept listen map name_connect name_bind node_bind relabelfrom
               relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (dccp_socket
  (getattr)))
(classmapping
 allsockets
 common
 (key_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (key_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netlink_audit_socket
  (not (accept listen map name_bind nlmsg_read nlmsg_readpriv nlmsg_relay
               nlmsg_tty_audit nlmsg_write relabelfrom relabelto recvfrom
               sendto))))
(classmapping
 allsockets
 getattr
 (netlink_audit_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netlink_connector_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (netlink_connector_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netlink_crypto_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (netlink_crypto_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netlink_dnrt_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (netlink_dnrt_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netlink_fib_lookup_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (netlink_fib_lookup_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netlink_generic_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (netlink_generic_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netlink_iscsi_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (netlink_iscsi_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netlink_kobject_uevent_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (netlink_kobject_uevent_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netlink_netfilter_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (netlink_netfilter_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netlink_nflog_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (netlink_nflog_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netlink_rdma_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (netlink_rdma_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netlink_route_socket
  (not (accept listen map name_bind nlmsg_read nlmsg_write relabelfrom
               relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (netlink_route_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netlink_scsitransport_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (netlink_scsitransport_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netlink_selinux_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (netlink_selinux_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netlink_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (netlink_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netlink_tcpdiag_socket
  (not (accept listen map name_bind nlmsg_read nlmsg_write relabelfrom
               relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (netlink_tcpdiag_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netlink_xfrm_socket
  (not (accept listen map name_bind nlmsg_read nlmsg_write relabelfrom
               relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (netlink_xfrm_socket
  (getattr)))
(classmapping
 allsockets
 common
 (packet_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (packet_socket
  (getattr)))
(classmapping
 allsockets
 common
 (rawip_socket
  (not (accept listen map name_bind node_bind relabelfrom relabelto recvfrom
               sendto))))
(classmapping
 allsockets
 getattr
 (rawip_socket
  (getattr)))
(classmapping
 allsockets
 common
 (socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (socket
  (getattr)))
(classmapping
 allsockets
 common
 (tcp_socket
  (not (accept listen map name_connect name_bind node_bind relabelfrom
               relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (tcp_socket
  (getattr)))
(classmapping
 allsockets
 common
 (tun_socket
  (not (accept attach_queue listen map name_bind relabelfrom relabelto
               recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (tun_socket
  (getattr)))
(classmapping
 allsockets
 common
 (udp_socket
  (not (accept listen map name_bind node_bind relabelfrom relabelto recvfrom
               sendto))))
(classmapping
 allsockets
 getattr
 (udp_socket
  (getattr)))
(classmapping
 allsockets
 common
 (unix_dgram_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (unix_dgram_socket
  (getattr)))
(classmapping
 allsockets
 common
 (unix_stream_socket
  (not (accept connectto listen map name_bind relabelfrom relabelto recvfrom
               sendto))))
(classmapping
 allsockets
 getattr
 (unix_stream_socket
  (getattr)))

;; extended
(classmapping
 allsockets
 common
 (alg_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (alg_socket
  (getattr)))
(classmapping
 allsockets
 common
 (atmpvc_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (atmpvc_socket
  (getattr)))
(classmapping
 allsockets
 common
 (atmsvc_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (atmsvc_socket
  (getattr)))
(classmapping
 allsockets
 common
 (ax25_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (ax25_socket
  (getattr)))
(classmapping
 allsockets
 common
 (bluetooth_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (bluetooth_socket
  (getattr)))
(classmapping
 allsockets
 common
 (caif_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (caif_socket
  (getattr)))
(classmapping
 allsockets
 common
 (can_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (can_socket
  (getattr)))
(classmapping
 allsockets
 common
 (decnet_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (decnet_socket
  (getattr)))
(classmapping
 allsockets
 common
 (icmp_socket
  (not (accept listen map name_bind node_bind relabelfrom relabelto recvfrom
               sendto))))
(classmapping
 allsockets
 getattr
 (icmp_socket
  (getattr)))
(classmapping
 allsockets
 common
 (ieee802154_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (ieee802154_socket
  (getattr)))
(classmapping
 allsockets
 common
 (ipx_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (ipx_socket
  (getattr)))
(classmapping
 allsockets
 common
 (irda_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (irda_socket
  (getattr)))
(classmapping
 allsockets
 common
 (isdn_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (isdn_socket
  (getattr)))
(classmapping
 allsockets
 common
 (iucv_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (iucv_socket
  (getattr)))
(classmapping
 allsockets
 common
 (kcm_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (kcm_socket
  (getattr)))
(classmapping
 allsockets
 common
 (llc_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (llc_socket
  (getattr)))
(classmapping
 allsockets
 common
 (netrom_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (netrom_socket
  (getattr)))
(classmapping
 allsockets
 common
 (nfc_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (nfc_socket
  (getattr)))
(classmapping
 allsockets
 common
 (phonet_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (phonet_socket
  (getattr)))
(classmapping
 allsockets
 common
 (pppox_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (pppox_socket
  (getattr)))
(classmapping
 allsockets
 common
 (qipcrtr_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (qipcrtr_socket
  (getattr)))
(classmapping
 allsockets
 common
 (rds_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (rds_socket
  (getattr)))
(classmapping
 allsockets
 common
 (rose_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (rose_socket
  (getattr)))
(classmapping
 allsockets
 common
 (rxrpc_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (rxrpc_socket
  (getattr)))
(classmapping
 allsockets
 common
 (sctp_socket
  (not (accept association listen map name_connect name_bind node_bind
               relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (sctp_socket
  (getattr)))
(classmapping
 allsockets
 common
 (smc_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (smc_socket
  (getattr)))
(classmapping
 allsockets
 common
 (tipc_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (tipc_socket
  (getattr)))
(classmapping
 allsockets
 common
 (vsock_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (vsock_socket
  (getattr)))
(classmapping
 allsockets
 common
 (x25_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (x25_socket
  (getattr)))
(classmapping
 allsockets
 common
 (xdp_socket
  (not (accept listen map name_bind relabelfrom relabelto recvfrom sendto))))
(classmapping
 allsockets
 getattr
 (xdp_socket
  (getattr)))

;;
;; Classperms
;;

(classpermission create_appletalk_socket)
(classpermission create_dccp_socket)
(classpermission create_dccp_stream_socket)
(classpermission create_key_socket)
(classpermission create_netlink_audit_socket)
(classpermission create_netlink_connector_socket)
(classpermission create_netlink_crypto_socket)
(classpermission create_netlink_dnrt_socket)
(classpermission create_netlink_fib_lookup_socket)
(classpermission create_netlink_generic_socket)
(classpermission create_netlink_iscsi_socket)
(classpermission create_netlink_kobject_uevent_socket)
(classpermission create_netlink_netfilter_socket)
(classpermission create_netlink_nflog_socket)
(classpermission create_netlink_rdma_socket)
(classpermission create_netlink_route_socket)
(classpermission create_netlink_scsitransport_socket)
(classpermission create_netlink_selinux_socket)
(classpermission create_netlink_socket)
(classpermission create_netlink_tcpdiag_socket)
(classpermission create_netlink_xfrm_socket)
(classpermission create_packet_socket)
(classpermission create_rawip_socket)
(classpermission create_socket)
(classpermission create_tcp_socket)
(classpermission create_tcp_stream_socket)
(classpermission create_tun_socket)
(classpermission create_udp_socket)
(classpermission create_unix_dgram_socket)
(classpermission create_unix_stream_socket)
(classpermission create_unix_stream_stream_socket)
(classpermission read_appletalk_socket)
(classpermission read_dccp_socket)
(classpermission read_key_socket)
(classpermission read_netlink_audit_socket)
(classpermission read_netlink_connector_socket)
(classpermission read_netlink_crypto_socket)
(classpermission read_netlink_dnrt_socket)
(classpermission read_netlink_fib_lookup_socket)
(classpermission read_netlink_generic_socket)
(classpermission read_netlink_iscsi_socket)
(classpermission read_netlink_kobject_uevent_socket)
(classpermission read_netlink_netfilter_socket)
(classpermission read_netlink_nflog_socket)
(classpermission read_netlink_rdma_socket)
(classpermission read_netlink_route_socket)
(classpermission read_netlink_scsitransport_socket)
(classpermission read_netlink_selinux_socket)
(classpermission read_netlink_socket)
(classpermission read_netlink_tcpdiag_socket)
(classpermission read_netlink_xfrm_socket)
(classpermission read_packet_socket)
(classpermission read_rawip_socket)
(classpermission read_socket)
(classpermission read_tcp_socket)
(classpermission read_tun_socket)
(classpermission read_udp_socket)
(classpermission read_unix_dgram_socket)
(classpermission read_unix_stream_socket)
(classpermission readwrite_appletalk_socket)
(classpermission readwrite_dccp_socket)
(classpermission readwrite_key_socket)
(classpermission readwrite_netlink_audit_socket)
(classpermission readwrite_netlink_connector_socket)
(classpermission readwrite_netlink_crypto_socket)
(classpermission readwrite_netlink_dnrt_socket)
(classpermission readwrite_netlink_fib_lookup_socket)
(classpermission readwrite_netlink_generic_socket)
(classpermission readwrite_netlink_iscsi_socket)
(classpermission readwrite_netlink_kobject_uevent_socket)
(classpermission readwrite_netlink_netfilter_socket)
(classpermission readwrite_netlink_nflog_socket)
(classpermission readwrite_netlink_rdma_socket)
(classpermission readwrite_netlink_route_socket)
(classpermission readwrite_netlink_scsitransport_socket)
(classpermission readwrite_netlink_selinux_socket)
(classpermission readwrite_netlink_socket)
(classpermission readwrite_netlink_tcpdiag_socket)
(classpermission readwrite_netlink_xfrm_socket)
(classpermission readwrite_packet_socket)
(classpermission readwrite_rawip_socket)
(classpermission readwrite_socket)
(classpermission readwrite_tcp_socket)
(classpermission readwrite_tun_socket)
(classpermission readwrite_udp_socket)
(classpermission readwrite_unix_dgram_socket)
(classpermission readwrite_unix_stream_socket)
(classpermission write_appletalk_socket)
(classpermission write_dccp_socket)
(classpermission write_key_socket)
(classpermission write_netlink_audit_socket)
(classpermission write_netlink_connector_socket)
(classpermission write_netlink_crypto_socket)
(classpermission write_netlink_dnrt_socket)
(classpermission write_netlink_fib_lookup_socket)
(classpermission write_netlink_generic_socket)
(classpermission write_netlink_iscsi_socket)
(classpermission write_netlink_kobject_uevent_socket)
(classpermission write_netlink_netfilter_socket)
(classpermission write_netlink_nflog_socket)
(classpermission write_netlink_rdma_socket)
(classpermission write_netlink_route_socket)
(classpermission write_netlink_scsitransport_socket)
(classpermission write_netlink_selinux_socket)
(classpermission write_netlink_socket)
(classpermission write_netlink_tcpdiag_socket)
(classpermission write_netlink_xfrm_socket)
(classpermission write_packet_socket)
(classpermission write_rawip_socket)
(classpermission write_socket)
(classpermission write_tcp_socket)
(classpermission write_tun_socket)
(classpermission write_udp_socket)
(classpermission write_unix_dgram_socket)
(classpermission write_unix_stream_socket)

(classpermissionset
 create_appletalk_socket
 (appletalk_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_dccp_socket
 (dccp_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_dccp_stream_socket
 (dccp_socket
  (accept append bind connect create getattr getopt ioctl listen read setattr
          setopt shutdown write)))
(classpermissionset
 create_key_socket
 (key_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netlink_audit_socket
 (netlink_audit_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netlink_connector_socket
 (netlink_connector_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netlink_crypto_socket
 (netlink_crypto_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netlink_dnrt_socket
 (netlink_dnrt_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netlink_fib_lookup_socket
 (netlink_fib_lookup_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netlink_generic_socket
 (netlink_generic_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netlink_iscsi_socket
 (netlink_iscsi_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netlink_kobject_uevent_socket
 (netlink_kobject_uevent_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netlink_netfilter_socket
 (netlink_netfilter_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netlink_nflog_socket
 (netlink_nflog_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netlink_rdma_socket
 (netlink_rdma_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netlink_route_socket
 (netlink_route_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netlink_scsitransport_socket
 (netlink_scsitransport_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netlink_selinux_socket
 (netlink_selinux_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netlink_socket
 (netlink_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netlink_tcpdiag_socket
 (netlink_tcpdiag_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netlink_xfrm_socket
 (netlink_xfrm_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_packet_socket
 (packet_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_rawip_socket
 (rawip_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_socket
 (socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_tcp_socket
 (tcp_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_tcp_stream_socket
 (tcp_socket
  (accept append bind connect create getattr getopt ioctl listen read setattr
          setopt shutdown write)))
(classpermissionset
 create_tun_socket
 (tun_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_udp_socket
 (udp_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_unix_dgram_socket
 (unix_dgram_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_unix_stream_socket
 (unix_stream_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_unix_stream_stream_socket
 (unix_stream_socket
  (accept append bind connect create getattr getopt ioctl listen read setattr
          setopt shutdown write)))
(classpermissionset
 read_appletalk_socket
 (appletalk_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_dccp_socket
 (dccp_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_key_socket
 (key_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netlink_audit_socket
 (netlink_audit_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netlink_connector_socket
 (netlink_connector_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netlink_crypto_socket
 (netlink_crypto_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netlink_dnrt_socket
 (netlink_dnrt_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netlink_fib_lookup_socket
 (netlink_fib_lookup_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netlink_generic_socket
 (netlink_generic_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netlink_iscsi_socket
 (netlink_iscsi_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netlink_kobject_uevent_socket
 (netlink_kobject_uevent_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netlink_netfilter_socket
 (netlink_netfilter_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netlink_nflog_socket
 (netlink_nflog_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netlink_rdma_socket
 (netlink_rdma_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netlink_route_socket
 (netlink_route_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netlink_scsitransport_socket
 (netlink_scsitransport_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netlink_selinux_socket
 (netlink_selinux_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netlink_socket
 (netlink_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netlink_tcpdiag_socket
 (netlink_tcpdiag_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netlink_xfrm_socket
 (netlink_xfrm_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_packet_socket
 (packet_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_rawip_socket
 (rawip_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_socket
 (socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_tcp_socket
 (tcp_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_tun_socket
 (tun_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_udp_socket
 (udp_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_unix_dgram_socket
 (unix_dgram_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_unix_stream_socket
 (unix_stream_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 readwrite_appletalk_socket
 (appletalk_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_dccp_socket
 (dccp_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_key_socket
 (key_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netlink_audit_socket
 (netlink_audit_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netlink_connector_socket
 (netlink_connector_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netlink_crypto_socket
 (netlink_crypto_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netlink_dnrt_socket
 (netlink_dnrt_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netlink_fib_lookup_socket
 (netlink_fib_lookup_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netlink_generic_socket
 (netlink_generic_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netlink_iscsi_socket
 (netlink_iscsi_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netlink_kobject_uevent_socket
 (netlink_kobject_uevent_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netlink_netfilter_socket
 (netlink_netfilter_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netlink_nflog_socket
 (netlink_nflog_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netlink_rdma_socket
 (netlink_rdma_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netlink_route_socket
 (netlink_route_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netlink_scsitransport_socket
 (netlink_scsitransport_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netlink_selinux_socket
 (netlink_selinux_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netlink_socket
 (netlink_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netlink_tcpdiag_socket
 (netlink_tcpdiag_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netlink_xfrm_socket
 (netlink_xfrm_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_packet_socket
 (packet_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_rawip_socket
 (rawip_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_socket
 (socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_tcp_socket
 (tcp_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_tun_socket
 (tun_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_udp_socket
 (udp_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_unix_dgram_socket
 (unix_dgram_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_unix_stream_socket
 (unix_stream_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 write_appletalk_socket
 (appletalk_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_dccp_socket
 (dccp_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_key_socket
 (key_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netlink_audit_socket
 (netlink_audit_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netlink_connector_socket
 (netlink_connector_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netlink_crypto_socket
 (netlink_crypto_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netlink_dnrt_socket
 (netlink_dnrt_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netlink_fib_lookup_socket
 (netlink_fib_lookup_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netlink_generic_socket
 (netlink_generic_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netlink_iscsi_socket
 (netlink_iscsi_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netlink_kobject_uevent_socket
 (netlink_kobject_uevent_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netlink_netfilter_socket
 (netlink_netfilter_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netlink_nflog_socket
 (netlink_nflog_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netlink_rdma_socket
 (netlink_rdma_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netlink_route_socket
 (netlink_route_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netlink_scsitransport_socket
 (netlink_scsitransport_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netlink_selinux_socket
 (netlink_selinux_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netlink_socket
 (netlink_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netlink_tcpdiag_socket
 (netlink_tcpdiag_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netlink_xfrm_socket
 (netlink_xfrm_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_packet_socket
 (packet_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_rawip_socket
 (rawip_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_socket
 (socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_tcp_socket
 (tcp_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_tun_socket
 (tun_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_udp_socket
 (udp_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_unix_dgram_socket
 (unix_dgram_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_unix_stream_socket
 (unix_stream_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))

;; extended
(classpermission create_alg_socket)
(classpermission create_alg_stream_socket)
(classpermission create_atmpvc_socket)
(classpermission create_atmsvc_socket)
(classpermission create_ax25_socket)
(classpermission create_bluetooth_socket)
(classpermission create_bluetooth_stream_socket)
(classpermission create_caif_socket)
(classpermission create_can_socket)
(classpermission create_decnet_socket)
(classpermission create_icmp_socket)
(classpermission create_ieee802154_socket)
(classpermission create_ipx_socket)
(classpermission create_irda_socket)
(classpermission create_isdn_socket)
(classpermission create_iucv_socket)
(classpermission create_kcm_socket)
(classpermission create_llc_socket)
(classpermission create_netrom_socket)
(classpermission create_nfc_socket)
(classpermission create_phonet_socket)
(classpermission create_pppox_socket)
(classpermission create_qipcrtr_socket)
(classpermission create_rds_socket)
(classpermission create_rose_socket)
(classpermission create_rxrpc_socket)
(classpermission create_sctp_socket)
(classpermission create_sctp_stream_socket)
(classpermission create_smc_socket)
(classpermission create_tipc_socket)
(classpermission create_vsock_socket)
(classpermission create_xdp_socket)
(classpermission create_x25_socket)
(classpermission read_alg_socket)
(classpermission read_atmpvc_socket)
(classpermission read_atmsvc_socket)
(classpermission read_ax25_socket)
(classpermission read_bluetooth_socket)
(classpermission read_caif_socket)
(classpermission read_can_socket)
(classpermission read_decnet_socket)
(classpermission read_icmp_socket)
(classpermission read_ieee802154_socket)
(classpermission read_ipx_socket)
(classpermission read_irda_socket)
(classpermission read_isdn_socket)
(classpermission read_iucv_socket)
(classpermission read_kcm_socket)
(classpermission read_llc_socket)
(classpermission read_netrom_socket)
(classpermission read_nfc_socket)
(classpermission read_phonet_socket)
(classpermission read_pppox_socket)
(classpermission read_qipcrtr_socket)
(classpermission read_rds_socket)
(classpermission read_rose_socket)
(classpermission read_rxrpc_socket)
(classpermission read_sctp_socket)
(classpermission read_smc_socket)
(classpermission read_tipc_socket)
(classpermission read_vsock_socket)
(classpermission read_xdp_socket)
(classpermission read_x25_socket)
(classpermission readwrite_alg_socket)
(classpermission readwrite_atmpvc_socket)
(classpermission readwrite_atmsvc_socket)
(classpermission readwrite_ax25_socket)
(classpermission readwrite_bluetooth_socket)
(classpermission readwrite_caif_socket)
(classpermission readwrite_can_socket)
(classpermission readwrite_decnet_socket)
(classpermission readwrite_icmp_socket)
(classpermission readwrite_ieee802154_socket)
(classpermission readwrite_ipx_socket)
(classpermission readwrite_irda_socket)
(classpermission readwrite_isdn_socket)
(classpermission readwrite_iucv_socket)
(classpermission readwrite_kcm_socket)
(classpermission readwrite_llc_socket)
(classpermission readwrite_netrom_socket)
(classpermission readwrite_nfc_socket)
(classpermission readwrite_phonet_socket)
(classpermission readwrite_pppox_socket)
(classpermission readwrite_qipcrtr_socket)
(classpermission readwrite_rds_socket)
(classpermission readwrite_rose_socket)
(classpermission readwrite_rxrpc_socket)
(classpermission readwrite_sctp_socket)
(classpermission readwrite_smc_socket)
(classpermission readwrite_tipc_socket)
(classpermission readwrite_vsock_socket)
(classpermission readwrite_xdp_socket)
(classpermission readwrite_x25_socket)
(classpermission write_alg_socket)
(classpermission write_atmpvc_socket)
(classpermission write_atmsvc_socket)
(classpermission write_ax25_socket)
(classpermission write_bluetooth_socket)
(classpermission write_caif_socket)
(classpermission write_can_socket)
(classpermission write_decnet_socket)
(classpermission write_icmp_socket)
(classpermission write_ieee802154_socket)
(classpermission write_ipx_socket)
(classpermission write_irda_socket)
(classpermission write_isdn_socket)
(classpermission write_iucv_socket)
(classpermission write_kcm_socket)
(classpermission write_llc_socket)
(classpermission write_netrom_socket)
(classpermission write_nfc_socket)
(classpermission write_phonet_socket)
(classpermission write_pppox_socket)
(classpermission write_qipcrtr_socket)
(classpermission write_rds_socket)
(classpermission write_rose_socket)
(classpermission write_rxrpc_socket)
(classpermission write_sctp_socket)
(classpermission write_smc_socket)
(classpermission write_tipc_socket)
(classpermission write_vsock_socket)
(classpermission write_xdp_socket)
(classpermission write_x25_socket)

(classpermissionset
 create_alg_socket
 (alg_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_alg_stream_socket
 (alg_socket
  (accept append bind connect create getattr getopt ioctl listen read setattr
          setopt shutdown write)))
(classpermissionset
 create_atmpvc_socket
 (atmpvc_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_atmsvc_socket
 (atmsvc_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_ax25_socket
 (ax25_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_bluetooth_socket
 (bluetooth_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_bluetooth_stream_socket
 (bluetooth_socket
  (accept append bind connect create getattr getopt ioctl listen read setattr
          setopt shutdown write)))
(classpermissionset
 create_caif_socket
 (caif_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_can_socket
 (can_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_decnet_socket
 (decnet_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_icmp_socket
 (icmp_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_ieee802154_socket
 (ieee802154_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_ipx_socket
 (ipx_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_irda_socket
 (irda_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_isdn_socket
 (isdn_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_iucv_socket
 (iucv_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_kcm_socket
 (kcm_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_llc_socket
 (llc_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_netrom_socket
 (netrom_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_nfc_socket
 (nfc_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_phonet_socket
 (phonet_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_pppox_socket
 (pppox_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_qipcrtr_socket
 (qipcrtr_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_rds_socket
 (rds_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_rose_socket
 (rose_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_rxrpc_socket
 (rxrpc_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_sctp_socket
 (sctp_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_sctp_stream_socket
 (sctp_socket
  (accept append bind connect create getattr getopt ioctl listen read setattr
          setopt shutdown write)))
(classpermissionset
 create_smc_socket
 (smc_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_tipc_socket
 (tipc_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_vsock_socket
 (vsock_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_xdp_socket
 (xdp_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 create_x25_socket
 (x25_socket
  (append bind connect create getattr getopt ioctl read setattr setopt shutdown
          write)))
(classpermissionset
 read_alg_socket
 (alg_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_atmpvc_socket
 (atmpvc_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_atmsvc_socket
 (atmsvc_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_ax25_socket
 (ax25_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_bluetooth_socket
 (bluetooth_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_caif_socket
 (caif_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_can_socket
 (can_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_decnet_socket
 (decnet_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_icmp_socket
 (icmp_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_ieee802154_socket
 (ieee802154_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_ipx_socket
 (ipx_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_irda_socket
 (irda_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_isdn_socket
 (isdn_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_iucv_socket
 (iucv_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_kcm_socket
 (kcm_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_llc_socket
 (llc_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_netrom_socket
 (netrom_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_nfc_socket
 (nfc_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_phonet_socket
 (phonet_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_pppox_socket
 (pppox_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_qipcrtr_socket
 (qipcrtr_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_rds_socket
 (rds_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_rose_socket
 (rose_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_rxrpc_socket
 (rxrpc_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_sctp_socket
 (sctp_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_smc_socket
 (smc_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_tipc_socket
 (tipc_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_vsock_socket
 (vsock_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_xdp_socket
 (xdp_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 read_x25_socket
 (x25_socket
  (bind connect getattr getopt ioctl read shutdown)))
(classpermissionset
 readwrite_alg_socket
 (alg_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_atmpvc_socket
 (atmpvc_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_atmsvc_socket
 (atmsvc_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_ax25_socket
 (ax25_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_bluetooth_socket
 (bluetooth_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_caif_socket
 (caif_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_can_socket
 (can_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_decnet_socket
 (decnet_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_icmp_socket
 (icmp_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_ieee802154_socket
 (ieee802154_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_ipx_socket
 (ipx_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_irda_socket
 (irda_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_isdn_socket
 (isdn_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_iucv_socket
 (iucv_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_kcm_socket
 (kcm_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_llc_socket
 (llc_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_netrom_socket
 (netrom_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_nfc_socket
 (nfc_socket
  (append bind connect getattr getopt ioctl read setattr shutdown write)))
(classpermissionset
 readwrite_phonet_socket
 (phonet_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_pppox_socket
 (pppox_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_qipcrtr_socket
 (qipcrtr_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_rds_socket
 (rds_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_rose_socket
 (rose_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_rxrpc_socket
 (rxrpc_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_sctp_socket
 (sctp_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_smc_socket
 (smc_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_tipc_socket
 (tipc_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_vsock_socket
 (vsock_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_xdp_socket
 (xdp_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 readwrite_x25_socket
 (x25_socket
  (append bind connect getattr getopt ioctl read setopt shutdown write)))
(classpermissionset
 write_alg_socket
 (alg_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_atmpvc_socket
 (atmpvc_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_atmsvc_socket
 (atmsvc_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_ax25_socket
 (ax25_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_bluetooth_socket
 (bluetooth_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_caif_socket
 (caif_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_can_socket
 (can_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_decnet_socket
 (decnet_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_icmp_socket
 (icmp_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_ieee802154_socket
 (ieee802154_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_ipx_socket
 (ipx_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_irda_socket
 (irda_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_isdn_socket
 (isdn_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_iucv_socket
 (iucv_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_kcm_socket
 (kcm_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_llc_socket
 (llc_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_netrom_socket
 (netrom_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_nfc_socket
 (nfc_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_phonet_socket
 (phonet_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_pppox_socket
 (pppox_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_qipcrtr_socket
 (qipcrtr_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_rds_socket
 (rds_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_rose_socket
 (rose_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_rxrpc_socket
 (rxrpc_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_sctp_socket
 (sctp_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_smc_socket
 (smc_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_tipc_socket
 (tipc_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_vsock_socket
 (vsock_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_xdp_socket
 (xdp_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))
(classpermissionset
 write_x25_socket
 (x25_socket
  (append bind connect getattr getopt ioctl setopt shutdown write)))

(block subj

       ;;
       ;; Policy
       ;;

       (blockinherit subj_all_macro_template)

       (typeattribute
        not_subj_typeattr)

       (typeattributeset
        not_subj_typeattr
        (not
         subj_typeattr))

       (neverallow subj_typeattr not_subj_typeattr
                   (process (dyntransition transition)))
       (neverallow subj_typeattr not_subj_typeattr
                   (process2 (nnp_transition nosuid_transition)))

       (call .sys.type (subj_typeattr))

       ;;
       ;; Templates
       ;;

       (block subj_all_macro_template

              ;;
              ;; Macros
              ;;

              (macro passwd_all ((type ARG1))
                     (allow ARG1 subj_typeattr (passwd (passwd))))

              (macro connectto_all_unix_stream_sockets ((type ARG1))
                     (allow ARG1 subj_typeattr
                            (unix_stream_socket (connectto))))

              (macro getpgid_all ((type ARG1))
                     (allow ARG1 subj_typeattr (process (getpgid))))

              (macro getrlimit_all ((type ARG1))
                     (allow ARG1 subj_typeattr (process (getrlimit))))

              (macro getsched_all ((type ARG1))
                     (allow ARG1 subj_typeattr (process (getsched))))

              (macro nnptransition_all ((type ARG1))
                     (allow ARG1 subj_typeattr (process2 (nnp_transition))))

              (macro noatsecure_all ((type ARG1))
                     (allow ARG1 subj_typeattr (process (noatsecure))))

              (macro nosuidtransition_all ((type ARG1))
                     (allow ARG1 subj_typeattr (process2 (nosuid_transition))))

              (macro ps_all ((type ARG1))
                     (allow ARG1 subj_typeattr (process (getattr)))
                     (call read_state_all (ARG1)))

              (macro ptrace_all ((type ARG1))
                     (allow ARG1 subj_typeattr (process (ptrace))))

              (macro read_state_all ((type ARG1))
                     (allow ARG1 subj_typeattr list_dir)
                     (allow ARG1 subj_typeattr read_file)
                     (allow ARG1 subj_typeattr read_lnk_file))

              (macro readinherited_all_fifo_files ((type ARG1))
                     (allow ARG1 subj_typeattr readinherited_fifo_file)
                     (call use_all_fds (ARG1)))

              (macro readwrite_all_unix_dgram_sockets ((type ARG1))
                     (allow ARG1 subj_typeattr readwrite_unix_dgram_socket))

              (macro readwrite_all_unix_stream_sockets ((type ARG1))
                     (allow ARG1 subj_typeattr readwrite_unix_stream_socket))

              (macro readwriteinherited_all_fifo_files ((type ARG1))
                     (allow ARG1 subj_typeattr readwriteinherited_fifo_file)
                     (call use_all_fds (ARG1)))

              (macro recvfrom_all_associations ((type ARG1))
                     (allow ARG1 subj_typeattr (association (recvfrom))))

              (macro recvfromsendto_all_associations ((type ARG1))
                     (allow ARG1 subj_typeattr
                            (association (recvfrom sendto))))

              (macro sendto_all_associations ((type ARG1))
                     (allow ARG1 subj_typeattr (association (sendto))))

              (macro sendto_all_unix_dgram_sockets ((type ARG1))
                     (allow ARG1 subj_typeattr (unix_dgram_socket (sendto))))

              (macro setrlimit_all ((type ARG1))
                     (allow ARG1 subj_typeattr (process (setrlimit))))

              (macro setsched_all ((type ARG1))
                     (allow ARG1 subj_typeattr (process (setsched))))

              (macro sigchld_all ((type ARG1))
                     (allow ARG1 subj_typeattr (process (sigchld))))

              (macro sigkill_all ((type ARG1))
                     (allow ARG1 subj_typeattr (process (sigkill))))

              (macro signal_all ((type ARG1))
                     (allow ARG1 subj_typeattr (process (signal))))

              (macro signull_all ((type ARG1))
                     (allow ARG1 subj_typeattr (process (signull))))

              (macro sigstop_all ((type ARG1))
                     (allow ARG1 subj_typeattr (process (sigstop))))

              (macro subj_type ((type ARG1))
                     (typeattributeset subj_typeattr ARG1))

              (macro transition_all ((type ARG1))
                     (allow ARG1 subj_typeattr (process (transition))))

              (macro use_all_fds ((type ARG1))
                     (allow ARG1 subj_typeattr (fd (use))))

              (macro write_all_unix_dgram_sockets ((type ARG1))
                     (allow ARG1 subj_typeattr write_unix_dgram_socket))

              (macro write_all_unix_stream_sockets ((type ARG1))
                     (allow ARG1 subj_typeattr write_unix_stream_socket))

              (macro writeinherited_all_fifo_files ((type ARG1))
                     (allow ARG1 subj_typeattr writeinherited_fifo_file)
                     (call use_all_fds (ARG1)))

              (macro dontaudit_getattr_all_sockets ((type ARG1))
                     (dontaudit ARG1 subj_typeattr (allsockets (getattr))))

              (macro dontaudit_noatsecure_all ((type ARG1))
                     (dontaudit ARG1 subj_typeattr (process (noatsecure))))

              (macro dontaudit_ps_all ((type ARG1))
                     (dontaudit ARG1 subj_typeattr (process (getattr)))
                     (dontaudit ARG1 subj_typeattr list_dir)
                     (dontaudit ARG1 subj_typeattr read_file)
                     (dontaudit ARG1 subj_typeattr read_lnk_file))

              (macro dontaudit_rlimitinh_all ((type ARG1))
                     (dontaudit ARG1 subj_typeattr (process (rlimitinh))))

              (macro dontaudit_siginh_all ((type ARG1))
                     (dontaudit ARG1 subj_typeattr (process (siginh))))

              ;;
              ;; Policy
              ;;

              (blockabstract subj_all_macro_template)

              (typeattribute
               subj_typeattr))

       (block subj_base_template

              ;;
              ;; Policy
              ;;

              (blockabstract subj_base_template)

              (type
               subj)

              (call .subj.subj_type (subj)))

       (block subj_macro_template

              ;;
              ;; Macros
              ;;

              (macro passwd ((type ARG1))
                     (allow ARG1 subj (passwd (passwd))))

              (macro connectto_unix_stream_sockets ((type ARG1))
                     (allow ARG1 subj (unix_stream_socket (connectto))))

              (macro getpgid ((type ARG1))
                     (allow ARG1 subj (process (getpgid))))

              (macro getrlimit ((type ARG1))
                     (allow ARG1 subj (process (getrlimit))))

              (macro getsched ((type ARG1))
                     (allow ARG1 subj (process (getsched))))

              (macro nnptransition ((type ARG1))
                     (allow ARG1 subj (process2 (nnp_transition))))

              (macro noatsecure ((type ARG1))
                     (allow ARG1 subj (process (noatsecure))))

              (macro nosuidtransition ((type ARG1))
                     (allow ARG1 subj (process2 (nosuid_transition))))

              (macro ps ((type ARG1))
                     (allow ARG1 subj (process (getattr)))
                     (call read_state (ARG1)))

              (macro ptrace ((type ARG1))
                     (allow ARG1 subj (process (ptrace))))

              (macro read_state ((type ARG1))
                     (allow ARG1 subj list_dir)
                     (allow ARG1 subj read_file)
                     (allow ARG1 subj read_lnk_file))

              (macro readinherited_fifo_files ((type ARG1))
                     (allow ARG1 subj readinherited_fifo_file)
                     (call use_fds (ARG1)))

              (macro readwrite_unix_dgram_sockets ((type ARG1))
                     (allow ARG1 subj readwrite_unix_dgram_socket))

              (macro readwrite_unix_stream_sockets ((type ARG1))
                     (allow ARG1 subj readwrite_unix_stream_socket))

              (macro readwriteinherited_fifo_files ((type ARG1))
                     (allow ARG1 subj readwriteinherited_fifo_file)
                     (call use_fds (ARG1)))

              (macro recvfrom_associations ((type ARG1))
                     (allow ARG1 subj (association (recvfrom))))

              (macro recvfromsendto_associations ((type ARG1))
                     (allow ARG1 subj (association (recvfrom sendto))))

              (macro sendto_associations ((type ARG1))
                     (allow ARG1 subj (association (sendto))))

              (macro sendto_unix_dgram_sockets ((type ARG1))
                     (allow ARG1 subj (unix_dgram_socket (sendto))))

              (macro setrlimit ((type ARG1))
                     (allow ARG1 subj (process (setrlimit))))

              (macro setsched ((type ARG1))
                     (allow ARG1 subj (process (setsched))))

              (macro sigchld ((type ARG1))
                     (allow ARG1 subj (process (sigchld))))

              (macro sigkill ((type ARG1))
                     (allow ARG1 subj (process (sigkill))))

              (macro signal ((type ARG1))
                     (allow ARG1 subj (process (signal))))

              (macro signull ((type ARG1))
                     (allow ARG1 subj (process (signull))))

              (macro sigstop ((type ARG1))
                     (allow ARG1 subj (process (sigstop))))

              (macro transition ((type ARG1))
                     (allow ARG1 subj (process (transition))))

              (macro use_fds ((type ARG1))
                     (allow ARG1 subj (fd (use))))

              (macro write_unix_dgram_sockets ((type ARG1))
                     (allow ARG1 subj write_unix_dgram_socket))

              (macro write_unix_stream_sockets ((type ARG1))
                     (allow ARG1 subj write_unix_stream_socket))

              (macro writeinherited_fifo_files ((type ARG1))
                     (allow ARG1 subj writeinherited_fifo_file)
                     (call use_fds (ARG1)))

              (macro dontaudit_getattr_sockets ((type ARG1))
                     (dontaudit ARG1 subj (allsockets (getattr))))

              (macro dontaudit_noatsecure ((type ARG1))
                     (dontaudit ARG1 subj (process (noatsecure))))

              (macro dontaudit_ps ((type ARG1))
                     (dontaudit ARG1 subj (process (getattr)))
                     (dontaudit ARG1 subj list_dir)
                     (dontaudit ARG1 subj read_file)
                     (dontaudit ARG1 subj read_lnk_file))

              (macro dontaudit_rlimitinh ((type ARG1))
                     (dontaudit ARG1 subj (process (rlimitinh))))

              (macro dontaudit_siginh ((type ARG1))
                     (dontaudit ARG1 subj (process (siginh))))

              ;;
              ;; Policy
              ;;

              (blockabstract subj_macro_template))

       (block subj_template

              ;;
              ;; Policy
              ;;

              (blockabstract subj_template)

              (blockinherit .subj.subj_base_template)
              (blockinherit .subj.subj_macro_template))

       (block common

              ;;
              ;; Policy
              ;;

              (blockinherit subj_all_macro_template)

              (allow subj_typeattr self
                     (process (fork sigchld sigkill signal signull sigstop)))

              (allow subj_typeattr self list_dir)
              (allow subj_typeattr self read_lnk_file)
              (allow subj_typeattr self readwrite_fifo_file)
              (allow subj_typeattr self readwrite_file)

              (call subj.subj_type (subj_typeattr))

              (call .recvfromsendtoassoc.subj_type (subj_typeattr))
              (call .recvpeer.subj_type (subj_typeattr))
              (call .recvsendpacket.subj_type (subj_typeattr))

              (call .sys.read_rootfile_lnk_files (subj_typeattr))
              (call .sys.search_rootfile_dirs (subj_typeattr))
              (call .sys.sigchld (subj_typeattr))

              (call .null.readwrite_nodedev_chr_files (subj_typeattr))
              (call .tty.readwrite_nodedev_chr_files (subj_typeattr))
              (call .zero.map_nodedev_chr_files (subj_typeattr))
              (call .zero.readwrite_nodedev_chr_files (subj_typeattr))

              (call .file.list_libfile_dirs (subj_typeattr))
              (call .file.mapexecute_libfile_files (subj_typeattr))
              (call .file.read_execfile_lnk_files (subj_typeattr))
              (call .file.read_libfile_files (subj_typeattr))
              (call .file.read_libfile_lnk_files (subj_typeattr))
              (call .file.search_datafile_dirs (subj_typeattr))
              (call .file.search_execfile_dirs (subj_typeattr))

              (call .proc.read_fs_lnk_files (subj_typeattr))
              (call .proc.search_fs_dirs (subj_typeattr))
              (call .tmp.read_fs_lnk_files (subj_typeattr))
              (call .tmp.search_fs_dirs (subj_typeattr))

              ;;
              ;; Templates
              ;;

              (block subj_base_template

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract subj_base_template)

                     (type
                      subj)

                     (call .subj.common.subj_type (subj)))

              (block subj_template

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract subj_template)

                     (blockinherit .subj.common.subj_base_template)
                     (blockinherit .subj.subj_macro_template)))

       (block dyntransition

              ;;
              ;; Policy
              ;;

              (blockinherit subj_all_macro_template)

              (typeattribute
               not_subj_typeattr)

              (typeattributeset
               not_subj_typeattr
               (not
                subj_typeattr))

              (neverallow not_subj_typeattr self (process (setcurrent)))
              )

       (block entry

              ;;
              ;; Policy
              ;;

              (blockinherit .file.obj_all_macro_template)

              (typeattribute
               not_obj_typeattr)

              (typeattributeset
               not_obj_typeattr
               (not
                obj_typeattr))

              (neverallow subj_typeattr not_obj_typeattr (file (entrypoint))))

       (block execheap

              ;;
              ;; Policy
              ;;

              (blockinherit subj_all_macro_template)

              (typeattribute
               not_subj_typeattr)

              (typeattributeset
               not_subj_typeattr
               (not
                subj_typeattr))

              (neverallow not_subj_typeattr self (process (execheap)))
              )

       (block execstack

              ;;
              ;; Policy
              ;;

              (blockinherit subj_all_macro_template)

              (typeattribute
               not_subj_typeattr)

              (typeattributeset
               not_subj_typeattr
               (not
                subj_typeattr))

              (neverallow not_subj_typeattr self (process (execstack)))
              )

       (block interactivefd

              ;;
              ;; Policy
              ;;

              (blockinherit subj_all_macro_template))

       (block mmapzero

              ;;
              ;; Policy
              ;;

              (blockinherit subj_all_macro_template)

              (typeattribute
               not_subj_typeattr)

              (typeattributeset
               not_subj_typeattr
               (not
                subj_typeattr))

              (neverallow not_subj_typeattr self (memprotect (mmap_zero))))

       (block unconfined

              ;;
              ;; Policy
              ;;

              (blockinherit subj_all_macro_template)

              (call dyntransition.subj_type (subj_typeattr))

              (allow subj_typeattr self (capability (not sys_module)))
              (allow subj_typeattr self
                     (capability2 (not (mac_admin mac_override))))

              (allow subj_typeattr self (cap_userns (not sys_module)))
              (allow subj_typeattr self
                     (cap2_userns (not (mac_admin mac_override))))

              (allow subj_typeattr self (allsockets (common)))

              (allow subj_typeattr self
                     (netlink_audit_socket (nlmsg_read nlmsg_readpriv
                                                       nlmsg_relay
                                                       nlmsg_tty_audit
                                                       nlmsg_write)))
              (allow subj_typeattr self
                     (netlink_route_socket (nlmsg_read nlmsg_write)))
              (allow subj_typeattr self
                     (netlink_tcpdiag_socket (nlmsg_read nlmsg_write)))
              (allow subj_typeattr self
                     (netlink_xfrm_socket (nlmsg_read nlmsg_write)))

              (allow subj_typeattr self (packet_socket (map)))
              (allow subj_typeattr self (tun_socket (attach_queue)))

              (allow subj_typeattr .subj.subj_typeattr
                     (unix_dgram_socket (sendto)))
              (allow subj_typeattr .subj.subj_typeattr
                     (unix_stream_socket (accept connectto listen)))

              (allow subj_typeattr .subj.subj_typeattr
                     (alg_socket (accept listen)))
              (allow subj_typeattr .subj.subj_typeattr
                     (bluetooth_socket (accept listen)))
              (allow subj_typeattr .subj.subj_typeattr
                     (dccp_socket (accept listen)))
              (allow subj_typeattr .subj.subj_typeattr
                     (tcp_socket (accept listen)))
              (allow subj_typeattr .subj.subj_typeattr
                     (sctp_socket (accept listen)))

              (allow subj_typeattr self (perf_event (all)))

              (allow subj_typeattr .subj.subj_typeattr (binder (all)))
              (allow subj_typeattr .subj.subj_typeattr (bpf (all)))
              (allow subj_typeattr .subj.subj_typeattr (fd (all)))

              (allow subj_typeattr .subj.subj_typeattr
                     (fifo_file (not (execmod map mounton))))
              (allow subj_typeattr .subj.subj_typeattr list_dir)
              (allow subj_typeattr .subj.subj_typeattr read_lnk_file)
              (allow subj_typeattr .subj.subj_typeattr readwrite_file)

              (allow subj_typeattr .subj.entry.obj_typeattr
                     (file (entrypoint)))

              (allow subj_typeattr .subj.subj_typeattr (kernel_service (all)))
              (allow subj_typeattr .subj.subj_typeattr (key (all)))
              (allow subj_typeattr .subj.subj_typeattr (lockdown (all)))

              (allow subj_typeattr .subj.subj_typeattr (msg (all)))
              (allow subj_typeattr .subj.subj_typeattr (msgq (all)))
              (allow subj_typeattr .subj.subj_typeattr (sem (all)))
              (allow subj_typeattr .subj.subj_typeattr (shm (all)))

              (allow subj_typeattr .subj.subj_typeattr
                     (process (not (execheap execstack))))
              (allow subj_typeattr .subj.subj_typeattr (process2 (all)))

              ;; old busybox
              (allow subj_typeattr .subj.subj_typeattr (passwd (all))))

       (block useinteractivefd

              ;;
              ;; Policy
              ;;

              (blockinherit subj_all_macro_template)

              (allow subj_typeattr interactivefd.subj_typeattr (fd (use)))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(sid
 netmsg)

(sidcontext
 netmsg
 (.u
  .r
  .net.netpeer
  (systemlow
   systemlow)))

(in .net

    ;;
    ;; Policy
    ;;

    (blockinherit .net.peer.subj_template)

    (call peer.associate_all_sctp_sockets (unconfined.subj_typeattr))
    (call peer.recv_all_netpeers (unconfined.subj_typeattr))

    (call .associate_invalid_sctp_sockets (unconfined.subj_typeattr))
    (call .recv_invalid_netpeers (unconfined.subj_typeattr))

    (block peer

           ;;
           ;; Policy
           ;;

           (blockinherit subj_all_macro_template)

           (call .sys.type (subj_typeattr))

           ;;
           ;; Templates
           ;;

           (block subj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   netpeer_context
                   (.u
                    .r
                    netpeer
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract subj_base_template)

                  (type
                   netpeer)

                  (call .net.peer.subj_type (netpeer)))

           (block subj_all_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro subj_type ((type ARG1))
                         (typeattributeset subj_typeattr ARG1))

                  (macro recv_all_netpeers ((type ARG1))
                         (allow ARG1 subj_typeattr (peer (recv))))

                  (macro associate_all_sctp_sockets ((type ARG1))
                         (allow ARG1 subj_typeattr
                                (sctp_socket (association))))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract subj_all_macro_template)

                  (typeattribute
                   subj_typeattr))

           (block subj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro recv_netpeers ((type ARG1))
                         (allow ARG1 netpeer (peer (recv))))

                  (macro associate_sctp_sockets ((type ARG1))
                         (allow ARG1 netpeer (sctp_socket (association))))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract subj_macro_template))

           (block subj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract subj_template)

                  (blockinherit .net.peer.subj_base_template)
                  (blockinherit .net.peer.subj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .net

    ;;
    ;; Policy
    ;;

    (call pkey.access_all_netpkeys (unconfined.subj_typeattr))

    (call .access_invalid_netpkeys (unconfined.subj_typeattr))

    (block pkey

           ;;
           ;; Policy
           ;;

           (blockinherit obj_all_macro_template)

           (call .sys.type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   netpkey_context
                   (.u
                    .r
                    netpkey
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   netpkey)

                  (call .net.pkey.obj_type (netpkey)))

           (block obj_all_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro access_all_netpkeys ((type ARG1))
                         (allow ARG1 obj_typeattr (infiniband_pkey (access))))

                  (macro obj_type ((type ARG1))
                         (typeattributeset obj_typeattr ARG1))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_all_macro_template)

                  (typeattribute
                   obj_typeattr))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro access_netpkeys ((type ARG1))
                         (allow ARG1 netpkey (infiniband_pkey (access))))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .net.pkey.obj_base_template)
                  (blockinherit .net.pkey.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block unreserved

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        (1024 32767)
        netport_context)
       (portcon
        "dccp"
        (61000 65535)
        netport_context)
       (portcon
        "sctp"
        (1024 32767)
        netport_context)
       (portcon
        "sctp"
        (61000 65535)
        netport_context)
       (portcon
        "tcp"
        (1024 32767)
        netport_context)
       (portcon
        "tcp"
        (61000 65535)
        netport_context)
       (portcon
        "udp"
        (1024 32767)
        netport_context)
       (portcon
        "udp"
        (61000 65535)
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.unreserved.obj_template))

(in .net.port

    (block unreserved

           ;;
           ;; Policy
           ;;

           (blockinherit obj_all_macro_template)

           (call port.obj_type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_all_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro dccp_bind_all_netports ((type ARG1))
                         (allow ARG1 self create_dccp_stream_socket)
                         (allow ARG1 obj_typeattr (dccp_socket (name_bind))))

                  (macro dccp_connect_all_netports ((type ARG1))
                         (allow ARG1 self create_dccp_socket)
                         (allow ARG1 obj_typeattr
                                (dccp_socket (name_connect))))

                  (macro icmp_bind_all_netports ((type ARG1))
                         (allow ARG1 self create_icmp_socket)
                         (allow ARG1 obj_typeattr (icmp_socket (name_bind))))

                  (macro obj_type ((type ARG1))
                         (typeattributeset obj_typeattr ARG1))

                  (macro rawip_bind_all_netports ((type ARG1))
                         (allow ARG1 self create_rawip_socket)
                         (allow ARG1 obj_typeattr (rawip_socket (name_bind))))

                  (macro sctp_bind_all_netports ((type ARG1))
                         (allow ARG1 self create_sctp_stream_socket)
                         (allow ARG1 obj_typeattr (sctp_socket (name_bind))))

                  (macro sctp_connect_all_netports ((type ARG1))
                         (allow ARG1 self create_sctp_socket)
                         (allow ARG1 obj_typeattr
                                (sctp_socket (name_connect))))

                  (macro tcp_bind_all_netports ((type ARG1))
                         (allow ARG1 self create_tcp_stream_socket)
                         (allow ARG1 obj_typeattr (tcp_socket (name_bind))))

                  (macro tcp_connect_all_netports ((type ARG1))
                         (allow ARG1 self create_tcp_socket)
                         (allow ARG1 obj_typeattr (tcp_socket (name_connect))))

                  (macro udp_bind_all_netports ((type ARG1))
                         (allow ARG1 self create_udp_socket)
                         (allow ARG1 obj_typeattr (udp_socket (name_bind))))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_all_macro_template)

                  (typeattribute obj_typeattr))

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .net.port.obj_base_template)

                  (call .net.port.unreserved.obj_type (netport)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro dccp_bind_netports ((type ARG1))
                         (allow ARG1 self create_dccp_stream_socket)
                         (allow ARG1 netport (dccp_socket (name_bind))))

                  (macro dccp_connect_netports ((type ARG1))
                         (allow ARG1 self create_dccp_socket)
                         (allow ARG1 netport (dccp_socket (name_connect))))

                  (macro icmp_bind_netports ((type ARG1))
                         (allow ARG1 self create_icmp_socket)
                         (allow ARG1 netport (icmp_socket (name_bind))))

                  (macro rawip_bind_netports ((type ARG1))
                         (allow ARG1 self create_rawip_socket)
                         (allow ARG1 netport (rawip_socket (name_bind))))

                  (macro sctp_bind_netports ((type ARG1))
                         (allow ARG1 self create_sctp_stream_socket)
                         (allow ARG1 netport (sctp_socket (name_bind))))

                  (macro sctp_connect_netports ((type ARG1))
                         (allow ARG1 self create_sctp_socket)
                         (allow ARG1 netport (sctp_socket (name_connect))))

                  (macro tcp_bind_netports ((type ARG1))
                         (allow ARG1 self create_tcp_stream_socket)
                         (allow ARG1 netport (tcp_socket (name_bind))))

                  (macro tcp_connect_netports ((type ARG1))
                         (allow ARG1 self create_tcp_socket)
                         (allow ARG1 netport (tcp_socket (name_connect))))

                  (macro udp_bind_netports ((type ARG1))
                         (allow ARG1 self create_udp_socket)
                         (allow ARG1 netport (udp_socket (name_bind))))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .net.port.unreserved.obj_base_template)
                  (blockinherit .net.port.unreserved.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block chronycmd

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        323
        netport_context)
       (portcon
        "sctp"
        323
        netport_context)
       (portcon
        "tcp"
        323
        netport_context)
       (portcon
        "udp"
        323
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.reserved.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block ntp

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        123
        netport_context)
       (portcon
        "sctp"
        123
        netport_context)
       (portcon
        "tcp"
        123
        netport_context)
       (portcon
        "udp"
        123
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.reserved.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block ssh

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        22
        netport_context)
       (portcon
        "sctp"
        22
        netport_context)
       (portcon
        "tcp"
        22
        netport_context)
       (portcon
        "udp"
        22
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.reserved.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block http

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        80
        netport_context)
       (portcon
        "dccp"
        443
        netport_context)
       (portcon
        "sctp"
        80
        netport_context)
       (portcon
        "sctp"
        443
        netport_context)
       (portcon
        "tcp"
        80
        netport_context)
       (portcon
        "tcp"
        443
        netport_context)
       (portcon
        "udp"
        80
        netport_context)
       (portcon
        "udp"
        443
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.reserved.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block dhcp

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        (67 68)
        netport_context)
       (portcon
        "dccp"
        (546 547)
        netport_context)
       (portcon
        "sctp"
        (67 68)
        netport_context)
       (portcon
        "sctp"
        (546 547)
        netport_context)
       (portcon
        "tcp"
        (67 68)
        netport_context)
       (portcon
        "tcp"
        (546 547)
        netport_context)
       (portcon
        "udp"
        (67 68)
        netport_context)
       (portcon
        "udp"
        (546 547)
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.reserved.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block dns

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        53
        netport_context)
       (portcon
        "dccp"
        853
        netport_context)
       (portcon
        "sctp"
        53
        netport_context)
       (portcon
        "sctp"
        853
        netport_context)
       (portcon
        "tcp"
        53
        netport_context)
       (portcon
        "tcp"
        853
        netport_context)
       (portcon
        "udp"
        53
        netport_context)
       (portcon
        "udp"
        853
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.reserved.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block syslog

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        514
        netport_context)
       (portcon
        "sctp"
        514
        netport_context)
       (portcon
        "tcp"
        514
        netport_context)
       (portcon
        "udp"
        514
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.reserved.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block ttyd

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        7681
        netport_context)
       (portcon
        "sctp"
        7681
        netport_context)
       (portcon
        "tcp"
        7681
        netport_context)
       (portcon
        "udp"
        7681
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.unreserved.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block ntpnts

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        4460
        netport_context)
       (portcon
        "sctp"
        4460
        netport_context)
       (portcon
        "tcp"
        4460
        netport_context)
       (portcon
        "udp"
        4460
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.unreserved.obj_template))

;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block radius

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        1812
        netport_context)
       (portcon
        "sctp"
        1812
        netport_context)
       (portcon
        "tcp"
        1812
        netport_context)
       (portcon
        "udp"
        1812
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.unreserved.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block ubdnscontrol

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        8953
        netport_context)
       (portcon
        "sctp"
        8953
        netport_context)
       (portcon
        "tcp"
        8953
        netport_context)
       (portcon
        "udp"
        8953
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.unreserved.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block httpproxy

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        3128
        netport_context)
       (portcon
        "dccp"
        8080
        netport_context)
       (portcon
        "dccp"
        8888
        netport_context)
       (portcon
        "sctp"
        3128
        netport_context)
       (portcon
        "sctp"
        8080
        netport_context)
       (portcon
        "sctp"
        8888
        netport_context)
       (portcon
        "tcp"
        3128
        netport_context)
       (portcon
        "tcp"
        8080
        netport_context)
       (portcon
        "tcp"
        8888
        netport_context)
       (portcon
        "udp"
        3128
        netport_context)
       (portcon
        "udp"
        8080
        netport_context)
       (portcon
        "udp"
        8888
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.unreserved.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block murmur

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        64738
        netport_context)
       (portcon
        "sctp"
        64738
        netport_context)
       (portcon
        "tcp"
        64738
        netport_context)
       (portcon
        "udp"
        64738
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.unreserved.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block irc

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        6697
        netport_context)
       (portcon
        "dccp"
        (6667 6669)
        netport_context)
       (portcon
        "sctp"
        6697
        netport_context)
       (portcon
        "sctp"
        (6667 6669)
        netport_context)
       (portcon
        "tcp"
        6697
        netport_context)
       (portcon
        "tcp"
        (6667 6669)
        netport_context)
       (portcon
        "udp"
        6697
        netport_context)
       (portcon
        "udp"
        (6667 6669)
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.unreserved.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block wireguard

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        51820
        netport_context)
       (portcon
        "sctp"
        51820
        netport_context)
       (portcon
        "tcp"
        51820
        netport_context)
       (portcon
        "udp"
        51820
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.ephemeral.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block reserved

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        (1 1023)
        netport_context)
       (portcon
        "sctp"
        (1 1023)
        netport_context)
       (portcon
        "tcp"
        (1 1023)
        netport_context)
       (portcon
        "udp"
        (1 1023)
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.reserved.obj_template))

(in .net.port

    (block reserved

           ;;
           ;; Policy
           ;;

           (blockinherit port.obj_all_macro_template)

           (call port.obj_type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .net.port.obj_base_template)

                  (call .net.port.reserved.obj_type (netport)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro dccp_bind_netports ((type ARG1))
                         (allow ARG1 self (capability (net_bind_service)))
                         (allow ARG1 self create_dccp_stream_socket)
                         (allow ARG1 netport (dccp_socket (name_bind))))

                  (macro dccp_connect_netports ((type ARG1))
                         (allow ARG1 self create_dccp_socket)
                         (allow ARG1 netport (dccp_socket (name_connect))))

                  (macro icmp_bind_netports ((type ARG1))
                         (allow ARG1 self (capability (net_bind_service)))
                         (allow ARG1 self create_icmp_socket)
                         (allow ARG1 netport (icmp_socket (name_bind))))

                  (macro rawip_bind_netports ((type ARG1))
                         (allow ARG1 self (capability (net_bind_service)))
                         (allow ARG1 self create_rawip_socket)
                         (allow ARG1 netport (rawip_socket (name_bind))))

                  (macro sctp_bind_netports ((type ARG1))
                         (allow ARG1 self (capability (net_bind_service)))
                         (allow ARG1 self create_sctp_stream_socket)
                         (allow ARG1 netport (sctp_socket (name_bind))))

                  (macro sctp_connect_netports ((type ARG1))
                         (allow ARG1 self create_sctp_socket)
                         (allow ARG1 netport (sctp_socket (name_connect))))

                  (macro tcp_bind_netports ((type ARG1))
                         (allow ARG1 self (capability (net_bind_service)))
                         (allow ARG1 self create_tcp_stream_socket)
                         (allow ARG1 netport (tcp_socket (name_bind))))

                  (macro tcp_connect_netports ((type ARG1))
                         (allow ARG1 self create_tcp_socket)
                         (allow ARG1 netport (tcp_socket (name_connect))))

                  (macro udp_bind_netports ((type ARG1))
                         (allow ARG1 self (capability (net_bind_service)))
                         (allow ARG1 self create_udp_socket)
                         (allow ARG1 netport (udp_socket (name_bind))))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .net.port.reserved.obj_base_template)
                  (blockinherit .net.port.reserved.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block ephemeral

       ;;
       ;; Contexts
       ;;

       (portcon
        "dccp"
        (32768 60999)
        netport_context)
       (portcon
        "sctp"
        (32768 60999)
        netport_context)
       (portcon
        "tcp"
        (32768 60999)
        netport_context)
       (portcon
        "udp"
        (32768 60999)
        netport_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .net.port.ephemeral.obj_template))

(in .net.port

    (block ephemeral

           ;;
           ;; Policy
           ;;

           (blockinherit obj_all_macro_template)

           (call port.obj_type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_all_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro dccp_bind_all_netports ((type ARG1))
                         (allow ARG1 self create_dccp_stream_socket)
                         (allow ARG1 obj_typeattr (dccp_socket (name_bind))))

                  (macro dccp_connect_all_netports ((type ARG1))
                         (allow ARG1 self create_dccp_socket)
                         (allow ARG1 obj_typeattr
                                (dccp_socket (name_connect))))

                  (macro icmp_bind_all_netports ((type ARG1))
                         (allow ARG1 self create_icmp_socket)
                         (allow ARG1 obj_typeattr (icmp_socket (name_bind))))

                  (macro obj_type ((type ARG1))
                         (typeattributeset obj_typeattr ARG1))

                  (macro rawip_bind_all_netports ((type ARG1))
                         (allow ARG1 self create_rawip_socket)
                         (allow ARG1 obj_typeattr (rawip_socket (name_bind))))

                  (macro sctp_bind_all_netports ((type ARG1))
                         (allow ARG1 self create_sctp_stream_socket)
                         (allow ARG1 obj_typeattr (sctp_socket (name_bind))))

                  (macro sctp_connect_all_netports ((type ARG1))
                         (allow ARG1 self create_sctp_socket)
                         (allow ARG1 obj_typeattr
                                (sctp_socket (name_connect))))

                  (macro tcp_bind_all_netports ((type ARG1))
                         (allow ARG1 self create_tcp_stream_socket)
                         (allow ARG1 obj_typeattr (tcp_socket (name_bind))))

                  (macro tcp_connect_all_netports ((type ARG1))
                         (allow ARG1 self create_tcp_socket)
                         (allow ARG1 obj_typeattr (tcp_socket (name_connect))))

                  (macro udp_bind_all_netports ((type ARG1))
                         (allow ARG1 self create_udp_socket)
                         (allow ARG1 obj_typeattr (udp_socket (name_bind))))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_all_macro_template)

                  (typeattribute obj_typeattr))

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .net.port.obj_base_template)

                  (call .net.port.ephemeral.obj_type (netport)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro dccp_bind_netports ((type ARG1))
                         (allow ARG1 self create_dccp_stream_socket)
                         (allow ARG1 netport (dccp_socket (name_bind))))

                  (macro dccp_connect_netports ((type ARG1))
                         (allow ARG1 self create_dccp_socket)
                         (allow ARG1 netport (dccp_socket (name_connect))))

                  (macro icmp_bind_netports ((type ARG1))
                         (allow ARG1 self create_icmp_socket)
                         (allow ARG1 netport (icmp_socket (name_bind))))

                  (macro rawip_bind_netports ((type ARG1))
                         (allow ARG1 self create_rawip_socket)
                         (allow ARG1 netport (rawip_socket (name_bind))))

                  (macro sctp_bind_netports ((type ARG1))
                         (allow ARG1 self create_sctp_stream_socket)
                         (allow ARG1 netport (sctp_socket (name_bind))))

                  (macro sctp_connect_netports ((type ARG1))
                         (allow ARG1 self create_sctp_socket)
                         (allow ARG1 netport (sctp_socket (name_connect))))

                  (macro tcp_bind_netports ((type ARG1))
                         (allow ARG1 self create_tcp_stream_socket)
                         (allow ARG1 netport (tcp_socket (name_bind))))

                  (macro tcp_connect_netports ((type ARG1))
                         (allow ARG1 self create_tcp_socket)
                         (allow ARG1 netport (tcp_socket (name_connect))))

                  (macro udp_bind_netports ((type ARG1))
                         (allow ARG1 self create_udp_socket)
                         (allow ARG1 netport (udp_socket (name_bind))))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .net.port.ephemeral.obj_base_template)
                  (blockinherit .net.port.ephemeral.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .net

    ;;
    ;; Policy
    ;;

    (call endport.managesubnet_all_netendports (unconfined.subj_typeattr))

    (call .managesubnet_invalid_netendports (unconfined.subj_typeattr))

    (block endport

           ;;
           ;; Policy
           ;;

           (blockinherit obj_all_macro_template)

           (call .sys.type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   netendport_context
                   (.u
                    .r
                    netendport
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   netendport)

                  (call .net.endport.obj_type (netendport)))

           (block obj_all_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro managesubnet_all_netendports ((type ARG1))
                         (allow ARG1 obj_typeattr
                                (infiniband_endport (manage_subnet))))

                  (macro obj_type ((type ARG1))
                         (typeattributeset obj_typeattr ARG1))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_all_macro_template)

                  (typeattribute
                   obj_typeattr))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro managesubnet_netendports ((type ARG1))
                         (allow ARG1 netendport
                                (infiniband_endport (manage_subnet))))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .net.endport.obj_base_template)
                  (blockinherit .net.endport.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .net

    ;;
    ;; Policy
    ;;

    (call packet.forward_all_netpackets (unconfined.subj_typeattr))
    (call packet.recvsend_all_netpackets (unconfined.subj_typeattr))
    (call packet.relabelto_all_netpackets (unconfined.subj_typeattr))

    (call .forward_invalid_netpackets (unconfined.subj_typeattr))
    (call .recvsend_invalid_netpackets (unconfined.subj_typeattr))

    (block packet

           ;;
           ;; Policy
           ;;

           (blockinherit obj_all_macro_template)

           (call .sys.type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   netpacket)

                  (call .net.packet.obj_type (netpacket)))

           (block obj_all_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro forward_all_netpackets ((type ARG1))
                         (allow ARG1 obj_typeattr
                                (packet (forward_in forward_out))))

                  (macro forwardin_all_netpackets ((type ARG1))
                         (allow ARG1 obj_typeattr (packet (forward_in))))

                  (macro forwardout_all_netpackets ((type ARG1))
                         (allow ARG1 obj_typeattr (packet (forward_out))))

                  (macro obj_type ((type ARG1))
                         (typeattributeset obj_typeattr ARG1))

                  (macro recv_all_netpackets ((type ARG1))
                         (allow ARG1 obj_typeattr (packet (recv))))

                  (macro recvsend_all_netpackets ((type ARG1))
                         (allow ARG1 obj_typeattr (packet (recv send))))

                  (macro relabelto_all_netpackets ((type ARG1))
                         (allow ARG1 obj_typeattr (packet (relabelto))))

                  (macro send_all_netpackets ((type ARG1))
                         (allow ARG1 obj_typeattr (packet (send))))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_all_macro_template)

                  (typeattribute
                   obj_typeattr))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro forward_netpackets ((type ARG1))
                         (allow ARG1 netpacket
                                (packet (forward_in forward_out))))

                  (macro forwardin_netpackets ((type ARG1))
                         (allow ARG1 netpacket (packet (forward_in))))

                  (macro forwardout_netpackets ((type ARG1))
                         (allow ARG1 netpacket (packet (forward_out))))

                  (macro recv_netpackets ((type ARG1))
                         (allow ARG1 netpacket (packet (recv))))

                  (macro recvsend_netpackets ((type ARG1))
                         (allow ARG1 netpacket (packet (recv send))))

                  (macro relabelto_netpackets ((type ARG1))
                         (allow ARG1 netpacket (packet (relabelto))))

                  (macro send_netpackets ((type ARG1))
                         (allow ARG1 netpacket (packet (send))))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .net.packet.obj_base_template)
                  (blockinherit .net.packet.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .net

    ;;
    ;; Policy
    ;;

    (blockinherit .net.spd.subj_template)

    (call spd.polmatchsetcontext_all_netspds (unconfined.subj_typeattr))

    (call .polmatchsetcontext_invalid_netspds (unconfined.subj_typeattr))
    (call .recvfromsendto_invalid_associations (unconfined.subj_typeattr))

    (call .subj.recvfromsendto_all_associations (unconfined.subj_typeattr))

    (block spd

           ;;
           ;; Policy
           ;;

           (blockinherit subj_all_macro_template)

           (call .sys.type (subj_typeattr))

           ;;
           ;; Templates
           ;;

           (block subj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   netspd_context
                   (.u
                    .r
                    netspd
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract subj_base_template)

                  (type
                   netspd)

                  (call .net.spd.subj_type (netspd)))

           (block subj_all_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro subj_type ((type ARG1))
                         (typeattributeset subj_typeattr ARG1))

                  (macro polmatch_all_netspds ((type ARG1))
                         (allow ARG1 subj_typeattr (association (polmatch))))

                  (macro polmatchsetcontext_all_netspds ((type ARG1))
                         (allow ARG1 subj_typeattr
                                (association (polmatch setcontext))))

                  (macro setcontext_all_netspds ((type ARG1))
                         (allow ARG1 subj_typeattr (association (setcontext))))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract subj_all_macro_template)

                  (typeattribute
                   subj_typeattr))

           (block subj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro polmatch_netspds ((type ARG1))
                         (allow ARG1 netspd (association (polmatch))))

                  (macro polmatchsetcontext_netspds ((type ARG1))
                         (allow ARG1 netspd
                                (association (polmatch setcontext))))

                  (macro setcontext_netspds ((type ARG1))
                         (allow ARG1 netspd (association (setcontext))))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract subj_macro_template))

           (block subj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract subj_template)

                  (blockinherit .net.spd.subj_base_template)
                  (blockinherit .net.spd.subj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(sid
 node)

(sidcontext
 node
 (.u
  .r
  .net.netnode
  (systemlow
   systemlow)))

(in .net

    ;;
    ;; Policy
    ;;

    (blockinherit .net.node.obj_template)

    (call node.dccp_bind_all_netnodes (unconfined.subj_typeattr))
    (call node.icmp_bind_all_netnodes (unconfined.subj_typeattr))
    (call node.rawip_bind_all_netnodes (unconfined.subj_typeattr))
    (call node.recvfromsendto_all_netnodes (unconfined.subj_typeattr))
    (call node.sctp_bind_all_netnodes (unconfined.subj_typeattr))
    (call node.tcp_bind_all_netnodes (unconfined.subj_typeattr))
    (call node.udp_bind_all_netnodes (unconfined.subj_typeattr))

    (call .dccp_bind_invalid_netnodes (unconfined.subj_typeattr))
    (call .icmp_bind_invalid_netnodes (unconfined.subj_typeattr))
    (call .rawip_bind_invalid_netnodes (unconfined.subj_typeattr))
    (call .recvfromsendto_invalid_netnodes (unconfined.subj_typeattr))
    (call .sctp_bind_invalid_netnodes (unconfined.subj_typeattr))
    (call .tcp_bind_invalid_netnodes (unconfined.subj_typeattr))
    (call .udp_bind_invalid_netnodes (unconfined.subj_typeattr))

    (block node

           ;;
           ;; Policy
           ;;

           (blockinherit obj_all_macro_template)

           (call .sys.type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   netnode_context
                   (.u
                    .r
                    netnode
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   netnode)

                  (call .net.node.obj_type (netnode)))

           (block obj_all_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro dccp_bind_all_netnodes ((type ARG1))
                         (allow ARG1 obj_typeattr (dccp_socket (node_bind))))

                  (macro icmp_bind_all_netnodes ((type ARG1))
                         (allow ARG1 obj_typeattr (icmp_socket (node_bind))))

                  (macro obj_type ((type ARG1))
                         (typeattributeset obj_typeattr ARG1))

                  (macro rawip_bind_all_netnodes ((type ARG1))
                         (allow ARG1 obj_typeattr (rawip_socket (node_bind))))

                  (macro recvfrom_all_netnodes ((type ARG1))
                         (allow ARG1 obj_typeattr (node (recvfrom))))

                  (macro recvfromsendto_all_netnodes ((type ARG1))
                         (allow ARG1 obj_typeattr (node (recvfrom sendto))))

                  (macro sctp_bind_all_netnodes ((type ARG1))
                         (allow ARG1 obj_typeattr (sctp_socket (node_bind))))

                  (macro sendto_all_netnodes ((type ARG1))
                         (allow ARG1 obj_typeattr (node (sendto))))

                  (macro tcp_bind_all_netnodes ((type ARG1))
                         (allow ARG1 obj_typeattr (tcp_socket (node_bind))))

                  (macro udp_bind_all_netnodes ((type ARG1))
                         (allow ARG1 obj_typeattr (udp_socket (node_bind))))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_all_macro_template)

                  (typeattribute
                   obj_typeattr))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro dccp_bind_netnodes ((type ARG1))
                         (allow ARG1 netnode (dccp_socket (node_bind))))

                  (macro icmp_bind_netnodes ((type ARG1))
                         (allow ARG1 netnode (icmp_socket (node_bind))))

                  (macro rawip_bind_netnodes ((type ARG1))
                         (allow ARG1 netnode (rawip_socket (node_bind))))

                  (macro recvfrom_netnodes ((type ARG1))
                         (allow ARG1 netnode (node (recvfrom))))

                  (macro recvfromsendto_netnodes ((type ARG1))
                         (allow ARG1 netnode (node (recvfrom sendto))))

                  (macro sctp_bind_netnodes ((type ARG1))
                         (allow ARG1 netnode (sctp_socket (node_bind))))

                  (macro sendto_netnodes ((type ARG1))
                         (allow ARG1 netnode (node (sendto))))

                  (macro tcp_bind_netnodes ((type ARG1))
                         (allow ARG1 netnode (tcp_socket (node_bind))))

                  (macro udp_bind_netnodes ((type ARG1))
                         (allow ARG1 netnode (udp_socket (node_bind))))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .net.node.obj_base_template)
                  (blockinherit .net.node.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(sid
 port)

(sidcontext
 port
 (.u
  .r
  .net.netport
  (systemlow
   systemlow)))

(in .net

    ;;
    ;; Policy
    ;;

    (blockinherit .net.port.obj_base_template)

    (call port.dccp_bind_all_netports (unconfined.subj_typeattr))
    (call port.dccp_connect_all_netports (unconfined.subj_typeattr))
    (call port.icmp_bind_all_netports (unconfined.subj_typeattr))
    (call port.rawip_bind_all_netports (unconfined.subj_typeattr))
    (call port.sctp_bind_all_netports (unconfined.subj_typeattr))
    (call port.sctp_connect_all_netports (unconfined.subj_typeattr))
    (call port.tcp_bind_all_netports (unconfined.subj_typeattr))
    (call port.tcp_connect_all_netports (unconfined.subj_typeattr))
    (call port.udp_bind_all_netports (unconfined.subj_typeattr))

    (call .dccp_bind_invalid_netports (unconfined.subj_typeattr))
    (call .dccp_connect_invalid_netports (unconfined.subj_typeattr))
    (call .icmp_bind_invalid_netports (unconfined.subj_typeattr))
    (call .rawip_bind_invalid_netports (unconfined.subj_typeattr))
    (call .sctp_bind_invalid_netports (unconfined.subj_typeattr))
    (call .sctp_connect_invalid_netports (unconfined.subj_typeattr))
    (call .tcp_bind_invalid_netports (unconfined.subj_typeattr))
    (call .tcp_connect_invalid_netports (unconfined.subj_typeattr))
    (call .udp_bind_invalid_netports (unconfined.subj_typeattr))

    (block port

           ;;
           ;; Policy
           ;;

           (blockinherit obj_all_macro_template)

           (call .sys.type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   netport_context
                   (.u
                    .r
                    netport
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   netport)

                  (call .net.port.obj_type (netport)))

           (block obj_all_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro dccp_bind_all_netports ((type ARG1))
                         (allow ARG1 self (capability (net_bind_service)))
                         (allow ARG1 self create_dccp_stream_socket)
                         (allow ARG1 obj_typeattr (dccp_socket (name_bind))))

                  (macro dccp_connect_all_netports ((type ARG1))
                         (allow ARG1 self create_dccp_socket)
                         (allow ARG1 obj_typeattr
                                (dccp_socket (name_connect))))

                  (macro icmp_bind_all_netports ((type ARG1))
                         (allow ARG1 self (capability (net_bind_service)))
                         (allow ARG1 self create_icmp_socket)
                         (allow ARG1 obj_typeattr (icmp_socket (name_bind))))

                  (macro obj_type ((type ARG1))
                         (typeattributeset obj_typeattr ARG1))

                  (macro rawip_bind_all_netports ((type ARG1))
                         (allow ARG1 self (capability (net_bind_service)))
                         (allow ARG1 self create_rawip_socket)
                         (allow ARG1 obj_typeattr (rawip_socket (name_bind))))

                  (macro sctp_bind_all_netports ((type ARG1))
                         (allow ARG1 self (capability (net_bind_service)))
                         (allow ARG1 self create_sctp_stream_socket)
                         (allow ARG1 obj_typeattr (sctp_socket (name_bind))))

                  (macro sctp_connect_all_netports ((type ARG1))
                         (allow ARG1 self create_sctp_socket)
                         (allow ARG1 obj_typeattr
                                (sctp_socket (name_connect))))

                  (macro tcp_bind_all_netports ((type ARG1))
                         (allow ARG1 self (capability (net_bind_service)))
                         (allow ARG1 self create_tcp_stream_socket)
                         (allow ARG1 obj_typeattr (tcp_socket (name_bind))))

                  (macro tcp_connect_all_netports ((type ARG1))
                         (allow ARG1 self create_tcp_socket)
                         (allow ARG1 obj_typeattr (tcp_socket (name_connect))))

                  (macro udp_bind_all_netports ((type ARG1))
                         (allow ARG1 self (capability (net_bind_service)))
                         (allow ARG1 self create_udp_socket)
                         (allow ARG1 obj_typeattr (udp_socket (name_bind))))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_all_macro_template)

                  (typeattribute obj_typeattr))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(sid
 netif)

(sidcontext
 netif
 (.u
  .r
  .net.netif
  (systemlow
   systemlow)))

(in .net

    ;;
    ;; Policy
    ;;

    (blockinherit .net.netif.obj_template)

    (call netif.egressingress_all_netifs (unconfined.subj_typeattr))

    (call .egressingress_invalid_netifs (unconfined.subj_typeattr))

    (block netif

           ;;
           ;; Policy
           ;;

           (blockinherit obj_all_macro_template)

           (call .sys.type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   netif_context
                   (.u
                    .r
                    netif
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   netif)

                  (call .net.netif.obj_type (netif)))

           (block obj_all_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro egress_all_netifs ((type ARG1))
                         (allow ARG1 obj_typeattr (netif (egress))))

                  (macro egressingress_all_netifs ((type ARG1))
                         (allow ARG1 obj_typeattr (netif (egress ingress))))

                  (macro ingress_all_netifs ((type ARG1))
                         (allow ARG1 obj_typeattr (netif (ingress))))

                  (macro obj_type ((type ARG1))
                         (typeattributeset obj_typeattr ARG1))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_all_macro_template)

                  (typeattribute
                   obj_typeattr))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro egress_netifs ((type ARG1))
                         (allow ARG1 netif (netif (egress))))

                  (macro egressingress_netifs ((type ARG1))
                         (allow ARG1 netif (netif (egress ingress))))

                  (macro ingress_netifs ((type ARG1))
                         (allow ARG1 netif (netif (ingress))))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .net.netif.obj_base_template)
                  (blockinherit .net.netif.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(sid
 security)

(sidcontext
 security
 (.u
  .r
  .selinux
  (systemlow
   systemlow)))

(type
 selinux)

(call .sys.type (selinux))

(block selinux

       ;;
       ;; Macros
       ;;

       (macro checkcontext ((type ARG1))
              (allow ARG1 .selinux (security (check_context)))
              (call .selinux.list_fs_dirs (ARG1))
              (call .selinux.readwrite_fs_files (ARG1)))

       (macro computeav ((type ARG1))
              (allow ARG1 self create_netlink_selinux_socket)
              (allow ARG1 .selinux (security (compute_av)))
              (call .selinux.list_fs_dirs (ARG1))
              (call .selinux.readwrite_fs_files (ARG1)))

       (macro computecreate ((type ARG1))
              (allow ARG1 .selinux (security (compute_create)))
              (call .selinux.list_fs_dirs (ARG1))
              (call .selinux.readwrite_fs_files (ARG1)))

       (macro computemember ((type ARG1))
              (allow ARG1 .selinux (security (compute_member)))
              (call .selinux.list_fs_dirs (ARG1))
              (call .selinux.readwrite_fs_files (ARG1)))

       (macro computerelabel ((type ARG1))
              (allow ARG1 .selinux (security (compute_relabel)))
              (call .selinux.list_fs_dirs (ARG1))
              (call .selinux.readwrite_fs_files (ARG1)))

       (macro computeuser ((type ARG1))
              (allow ARG1 .selinux (security (compute_user)))
              (call .selinux.list_fs_dirs (ARG1))
              (call .selinux.readwrite_fs_files (ARG1)))

       (macro readpolicy ((type ARG1))
              (allow ARG1 .selinux (security (read_policy)))
              (call .selinux.list_fs_dirs (ARG1))
              (call .selinux.read_fs_files (ARG1)))

       (macro setcheckreqprot ((type ARG1))
              (allow ARG1 .selinux (security (setcheckreqprot)))
              (call .selinux.list_fs_dirs (ARG1))
              (call .selinux.readwrite_fs_files (ARG1)))

       (macro validatetrans ((type ARG1))
              (allow ARG1 .selinux (security (validate_trans)))
              (call .selinux.list_fs_dirs (ARG1))
              (call .selinux.readwrite_fs_files (ARG1)))

       (block linked

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (call getattr_filesystems (subj_typeattr))
              (call read_conffile_files (subj_typeattr))
              (call search_conffile_dirs (subj_typeattr))

              (call .sys.search_fs_dirs (subj_typeattr))

              (call .file.search_conffile_dirs (subj_typeattr))

              (call .fs.search_sysfile_dirs (subj_typeattr)))

       (block loadpolicy

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (typeattribute
               not_subj_typeattr)

              (typeattributeset
               not_subj_typeattr
               (not
                subj_typeattr))

              (neverallow not_subj_typeattr .selinux (security (load_policy)))
              )

       (block setenforce

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (typeattribute
               not_subj_typeattr)

              (typeattributeset
               not_subj_typeattr
               (not
                subj_typeattr))

              (neverallow not_subj_typeattr .selinux (security (setenforce)))
              )

       (block setfscreate

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (allow subj_typeattr self (process (setfscreate))))

       (block setsecparam

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (typeattribute
               not_subj_typeattr)

              (typeattributeset
               not_subj_typeattr
               (not
                subj_typeattr))

              (neverallow not_subj_typeattr .selinux (security (setsecparam)))
       )

       (block unconfined

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (allow subj_typeattr .selinux
                     (security (not (load_policy setenforce setsecparam))))

              (call loadpolicy.subj_type (subj_typeattr))
              (call setenforce.subj_type (subj_typeattr))
              (call setsecparam.subj_type (subj_typeattr))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys

    ;;
    ;; Contexts
    ;;

    (genfscon
     "proc"
     "/sys"
     sysctlfile_file_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .sysctlfile.obj_template))

(block sysctlfile

       ;;
       ;; Policy
       ;;

       (blockinherit .file.obj_all_macro_template)

       (call .procfile.obj_type (obj_typeattr))

       ;;
       ;; Templates
       ;;

       (block obj_base_template

              ;;
              ;; Contexts
              ;;

              (context
               sysctlfile_file_context
               (.u
                .r
                sysctlfile
                (systemlow
                 systemlow)))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_base_template)

              (type
               sysctlfile)

              (call .sysctlfile.obj_type (sysctlfile)))

       (block obj_macro_template

              ;;
              ;; Macros
              ;;

              (macro addname_sysctlfile_dirs ((type ARG1))
                     (allow ARG1 sysctlfile addname_dir))

              (macro append_sysctlfile_blk_files ((type ARG1))
                     (allow ARG1 sysctlfile append_blk_file))

              (macro append_sysctlfile_chr_files ((type ARG1))
                     (allow ARG1 sysctlfile append_chr_file))

              (macro append_sysctlfile_fifo_files ((type ARG1))
                     (allow ARG1 sysctlfile append_fifo_file))

              (macro append_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile append_file))

              (macro appendinherited_sysctlfile_blk_files ((type ARG1))
                     (allow ARG1 sysctlfile appendinherited_blk_file))

              (macro appendinherited_sysctlfile_chr_files ((type ARG1))
                     (allow ARG1 sysctlfile appendinherited_chr_file))

              (macro appendinherited_sysctlfile_fifo_files ((type ARG1))
                     (allow ARG1 sysctlfile appendinherited_fifo_file))

              (macro appendinherited_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile appendinherited_file))

              (macro create_sysctlfile ((type ARG1))
                     (allow ARG1 sysctlfile (allfiles (create))))

              (macro create_sysctlfile_blk_files ((type ARG1))
                     (allow ARG1 sysctlfile create_blk_file))

              (macro create_sysctlfile_chr_files ((type ARG1))
                     (allow ARG1 sysctlfile create_chr_file))

              (macro create_sysctlfile_dirs ((type ARG1))
                     (allow ARG1 sysctlfile create_dir))

              (macro create_sysctlfile_fifo_files ((type ARG1))
                     (allow ARG1 sysctlfile create_fifo_file))

              (macro create_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile create_file))

              (macro create_sysctlfile_lnk_files ((type ARG1))
                     (allow ARG1 sysctlfile create_lnk_file))

              (macro create_sysctlfile_sock_files ((type ARG1))
                     (allow ARG1 sysctlfile create_sock_file))

              (macro deletename_sysctlfile_dirs ((type ARG1))
                     (allow ARG1 sysctlfile deletename_dir))

              (macro delete_sysctlfile ((type ARG1))
                     (allow ARG1 sysctlfile (allfiles (delete))))

              (macro delete_sysctlfile_blk_files ((type ARG1))
                     (allow ARG1 sysctlfile delete_blk_file))

              (macro delete_sysctlfile_chr_files ((type ARG1))
                     (allow ARG1 sysctlfile delete_chr_file))

              (macro delete_sysctlfile_dirs ((type ARG1))
                     (allow ARG1 sysctlfile delete_dir))

              (macro delete_sysctlfile_fifo_files ((type ARG1))
                     (allow ARG1 sysctlfile delete_fifo_file))

              (macro delete_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile delete_file))

              (macro delete_sysctlfile_lnk_files ((type ARG1))
                     (allow ARG1 sysctlfile delete_lnk_file))

              (macro delete_sysctlfile_sock_files ((type ARG1))
                     (allow ARG1 sysctlfile delete_sock_file))

              (macro execute_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile execute_file))

              (macro list_sysctlfile_dirs ((type ARG1))
                     (allow ARG1 sysctlfile list_dir))

              (macro listinherited_sysctlfile_dirs ((type ARG1))
                     (allow ARG1 sysctlfile listinherited_dir))

              (macro manage_sysctlfile ((type ARG1))
                     (allow ARG1 sysctlfile (allfiles (manage))))

              (macro manage_sysctlfile_blk_files ((type ARG1))
                     (allow ARG1 sysctlfile manage_blk_file))

              (macro manage_sysctlfile_chr_files ((type ARG1))
                     (allow ARG1 sysctlfile manage_chr_file))

              (macro manage_sysctlfile_dirs ((type ARG1))
                     (allow ARG1 sysctlfile manage_dir))

              (macro manage_sysctlfile_fifo_files ((type ARG1))
                     (allow ARG1 sysctlfile manage_fifo_file))

              (macro manage_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile manage_file))

              (macro manage_sysctlfile_lnk_files ((type ARG1))
                     (allow ARG1 sysctlfile manage_lnk_file))

              (macro manage_sysctlfile_sock_files ((type ARG1))
                     (allow ARG1 sysctlfile manage_sock_file))

              (macro mapexecute_sysctlfile_chr_files ((type ARG1))
                     (allow ARG1 sysctlfile mapexecute_chr_file))

              (macro mapexecute_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile mapexecute_file))

              (macro mounton_sysctlfile ((type ARG1))
                     (allow ARG1 sysctlfile (allfiles (mounton))))

              (macro mounton_sysctlfile_blk_files ((type ARG1))
                     (allow ARG1 sysctlfile mounton_blk_file))

              (macro mounton_sysctlfile_chr_files ((type ARG1))
                     (allow ARG1 sysctlfile mounton_chr_file))

              (macro mounton_sysctlfile_dirs ((type ARG1))
                     (allow ARG1 sysctlfile mounton_dir))

              (macro mounton_sysctlfile_fifo_files ((type ARG1))
                     (allow ARG1 sysctlfile mounton_fifo_file))

              (macro mounton_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile mounton_file))

              (macro mounton_sysctlfile_lnk_files ((type ARG1))
                     (allow ARG1 sysctlfile mounton_lnk_file))

              (macro mounton_sysctlfile_sock_files ((type ARG1))
                     (allow ARG1 sysctlfile mounton_sock_file))

              (macro read_sysctlfile ((type ARG1))
                     (allow ARG1 sysctlfile (allfiles (read))))

              (macro read_sysctlfile_blk_files ((type ARG1))
                     (allow ARG1 sysctlfile read_blk_file))

              (macro read_sysctlfile_chr_files ((type ARG1))
                     (allow ARG1 sysctlfile read_chr_file))

              (macro read_sysctlfile_fifo_files ((type ARG1))
                     (allow ARG1 sysctlfile read_fifo_file))

              (macro read_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile read_file))

              (macro readinherited_sysctlfile_blk_files ((type ARG1))
                     (allow ARG1 sysctlfile readinherited_blk_file))

              (macro readinherited_sysctlfile_chr_files ((type ARG1))
                     (allow ARG1 sysctlfile readinherited_chr_file))

              (macro readinherited_sysctlfile_fifo_files ((type ARG1))
                     (allow ARG1 sysctlfile readinherited_fifo_file))

              (macro readinherited_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile readinherited_file))

              (macro readinherited_sysctlfile_sock_files ((type ARG1))
                     (allow ARG1 sysctlfile readinherited_sock_file))

              (macro read_sysctlfile_lnk_files ((type ARG1))
                     (allow ARG1 sysctlfile read_lnk_file))

              (macro read_sysctlfile_sock_files ((type ARG1))
                     (allow ARG1 sysctlfile read_sock_file))

              (macro readwrite_sysctlfile ((type ARG1))
                     (allow ARG1 sysctlfile (allfiles (readwrite))))

              (macro readwrite_sysctlfile_blk_files ((type ARG1))
                     (allow ARG1 sysctlfile readwrite_blk_file))

              (macro readwrite_sysctlfile_chr_files ((type ARG1))
                     (allow ARG1 sysctlfile readwrite_chr_file))

              (macro readwrite_sysctlfile_dirs ((type ARG1))
                     (allow ARG1 sysctlfile readwrite_dir))

              (macro readwrite_sysctlfile_fifo_files ((type ARG1))
                     (allow ARG1 sysctlfile readwrite_fifo_file))

              (macro readwrite_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile readwrite_file))

              (macro readwriteinherited_sysctlfile_blk_files ((type ARG1))
                     (allow ARG1 sysctlfile readwriteinherited_blk_file))

              (macro readwriteinherited_sysctlfile_chr_files ((type ARG1))
                     (allow ARG1 sysctlfile readwriteinherited_chr_file))

              (macro readwriteinherited_sysctlfile_dirs ((type ARG1))
                     (allow ARG1 sysctlfile readwriteinherited_dir))

              (macro readwriteinherited_sysctlfile_fifo_files ((type ARG1))
                     (allow ARG1 sysctlfile readwriteinherited_fifo_file))

              (macro readwriteinherited_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile readwriteinherited_file))

              (macro readwriteinherited_sysctlfile_sock_files ((type ARG1))
                     (allow ARG1 sysctlfile readwriteinherited_sock_file))

              (macro readwrite_sysctlfile_lnk_files ((type ARG1))
                     (allow ARG1 sysctlfile readwrite_lnk_file))

              (macro readwrite_sysctlfile_sock_files ((type ARG1))
                     (allow ARG1 sysctlfile readwrite_sock_file))

              (macro relabel_sysctlfile ((type ARG1))
                     (allow ARG1 sysctlfile (allfiles (relabel))))

              (macro relabel_sysctlfile_blk_files ((type ARG1))
                     (allow ARG1 sysctlfile relabel_blk_file))

              (macro relabel_sysctlfile_chr_files ((type ARG1))
                     (allow ARG1 sysctlfile relabel_chr_file))

              (macro relabel_sysctlfile_dirs ((type ARG1))
                     (allow ARG1 sysctlfile relabel_dir))

              (macro relabel_sysctlfile_fifo_files ((type ARG1))
                     (allow ARG1 sysctlfile relabel_fifo_file))

              (macro relabel_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile relabel_file))

              (macro relabel_sysctlfile_lnk_files ((type ARG1))
                     (allow ARG1 sysctlfile relabel_lnk_file))

              (macro relabel_sysctlfile_sock_files ((type ARG1))
                     (allow ARG1 sysctlfile relabel_sock_file))

              (macro relabelfrom_sysctlfile ((type ARG1))
                     (allow ARG1 sysctlfile (allfiles (relabelfrom))))

              (macro relabelfrom_sysctlfile_blk_files ((type ARG1))
                     (allow ARG1 sysctlfile relabelfrom_blk_file))

              (macro relabelfrom_sysctlfile_chr_files ((type ARG1))
                     (allow ARG1 sysctlfile relabelfrom_chr_file))

              (macro relabelfrom_sysctlfile_dirs ((type ARG1))
                     (allow ARG1 sysctlfile relabelfrom_dir))

              (macro relabelfrom_sysctlfile_fifo_files ((type ARG1))
                     (allow ARG1 sysctlfile relabelfrom_fifo_file))

              (macro relabelfrom_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile relabelfrom_file))

              (macro relabelfrom_sysctlfile_lnk_files ((type ARG1))
                     (allow ARG1 sysctlfile relabelfrom_lnk_file))

              (macro relabelfrom_sysctlfile_sock_files ((type ARG1))
                     (allow ARG1 sysctlfile relabelfrom_sock_file))

              (macro relabelto_sysctlfile ((type ARG1))
                     (allow ARG1 sysctlfile (allfiles (relabelto))))

              (macro relabelto_sysctlfile_blk_files ((type ARG1))
                     (allow ARG1 sysctlfile relabelto_blk_file))

              (macro relabelto_sysctlfile_chr_files ((type ARG1))
                     (allow ARG1 sysctlfile relabelto_chr_file))

              (macro relabelto_sysctlfile_dirs ((type ARG1))
                     (allow ARG1 sysctlfile relabelto_dir))

              (macro relabelto_sysctlfile_fifo_files ((type ARG1))
                     (allow ARG1 sysctlfile relabelto_fifo_file))

              (macro relabelto_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile relabelto_file))

              (macro relabelto_sysctlfile_lnk_files ((type ARG1))
                     (allow ARG1 sysctlfile relabelto_lnk_file))

              (macro relabelto_sysctlfile_sock_files ((type ARG1))
                     (allow ARG1 sysctlfile relabelto_sock_file))

              (macro rename_sysctlfile ((type ARG1))
                     (allow ARG1 sysctlfile (allfiles (rename))))

              (macro rename_sysctlfile_blk_files ((type ARG1))
                     (allow ARG1 sysctlfile rename_blk_file))

              (macro rename_sysctlfile_chr_files ((type ARG1))
                     (allow ARG1 sysctlfile rename_chr_file))

              (macro rename_sysctlfile_dirs ((type ARG1))
                     (allow ARG1 sysctlfile rename_dir))

              (macro rename_sysctlfile_fifo_files ((type ARG1))
                     (allow ARG1 sysctlfile rename_fifo_file))

              (macro rename_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile rename_file))

              (macro rename_sysctlfile_lnk_files ((type ARG1))
                     (allow ARG1 sysctlfile rename_lnk_file))

              (macro rename_sysctlfile_sock_files ((type ARG1))
                     (allow ARG1 sysctlfile rename_sock_file))

              (macro search_sysctlfile_dirs ((type ARG1))
                     (allow ARG1 sysctlfile search_dir))

              (macro sysctlfile_obj_type_transition
                     ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                     (typetransition ARG1 sysctlfile ARG3 ARG4 ARG2)
                     (call addname_sysctlfile_dirs (ARG1)))

              (macro write_sysctlfile ((type ARG1))
                     (allow ARG1 sysctlfile (allfiles (write))))

              (macro write_sysctlfile_blk_files ((type ARG1))
                     (allow ARG1 sysctlfile write_blk_file))

              (macro write_sysctlfile_chr_files ((type ARG1))
                     (allow ARG1 sysctlfile write_chr_file))

              (macro write_sysctlfile_dirs ((type ARG1))
                     (allow ARG1 sysctlfile write_dir))

              (macro write_sysctlfile_fifo_files ((type ARG1))
                     (allow ARG1 sysctlfile write_fifo_file))

              (macro write_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile write_file))

              (macro writeinherited_sysctlfile_blk_files ((type ARG1))
                     (allow ARG1 sysctlfile writeinherited_blk_file))

              (macro writeinherited_sysctlfile_chr_files ((type ARG1))
                     (allow ARG1 sysctlfile writeinherited_chr_file))

              (macro writeinherited_sysctlfile_dirs ((type ARG1))
                     (allow ARG1 sysctlfile writeinherited_dir))

              (macro writeinherited_sysctlfile_fifo_files ((type ARG1))
                     (allow ARG1 sysctlfile writeinherited_fifo_file))

              (macro writeinherited_sysctlfile_files ((type ARG1))
                     (allow ARG1 sysctlfile writeinherited_file))

              (macro writeinherited_sysctlfile_sock_files ((type ARG1))
                     (allow ARG1 sysctlfile writeinherited_sock_file))

              (macro write_sysctlfile_lnk_files ((type ARG1))
                     (allow ARG1 sysctlfile write_lnk_file))

              (macro write_sysctlfile_sock_files ((type ARG1))
                     (allow ARG1 sysctlfile write_sock_file))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_macro_template))

       (block obj_template

              ;;
              ;; Policy
              ;;

              (blockabstract obj_template)

              (blockinherit .sysctlfile.obj_base_template)
              (blockinherit .sysctlfile.obj_macro_template)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block cgiscript

       ;;
       ;; Policy
       ;;

       (blockinherit .subj.subj_all_macro_template)

       (call .agent.subj_type (subj_typeattr))

       (block exec

              ;;
              ;; Policy
              ;;

              (blockinherit .file.obj_all_macro_template)

              (call .agent.exec.obj_type (obj_typeattr)))

       ;;
       ;; Templates
       ;;

       (block base_template

              ;;
              ;; Macros
              ;;

              (macro subj_type_transition ((type ARG1))
                     (allow ARG1 subj (process (transition)))
                     (dontaudit ARG1 subj
                                (process (noatsecure siginh rlimitinh)))

                     (allow subj ARG1 (process (sigchld)))

                     (call cgiscriptfile_subj_type_transition (ARG1 subj))
                     (call mapexecute_cgiscriptfile_files (ARG1))
                     (call read_cgiscriptfile_files (ARG1)))

              ;;
              ;; Policy
              ;;

              (blockabstract base_template)

              (blockinherit .file.cgiscript.obj_template)
              (blockinherit .subj.common.subj_template)

              (call entrypoint_cgiscriptfile_files (subj))
              (call mapexecute_cgiscriptfile_files (subj))
              (call read_cgiscriptfile_files (subj))

              (call .cgiscript.exec.obj_type (cgiscriptfile))
              (call .cgiscript.subj_type (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block initscript

       ;;
       ;; Policy
       ;;

       (blockinherit .subj.subj_all_macro_template)

       (call .sys.list_rootfile_dirs (subj_typeattr))
       (call .sys.readwriteinherited_fifo_files (subj_typeattr))
       (call .sys.dontaudit_readwriteinherited_ptydev_chr_files
             (subj_typeattr))

       (call .agent.subj_type (subj_typeattr))

       ;; file check for /etc/capabilties/*.json common to initscripts for services that drop privs
       (call capabilities.getattr_conffile_files (subj_typeattr))
       (call capabilities.search_conffile_dirs (subj_typeattr))

       (call .console.dontaudit_readwriteinherited_ttydev_chr_files
             (subj_typeattr))

       (call .dev.dontaudit_readwriteinherited_ttydev_chr_files
             (subj_typeattr))

       ;; file check on /sbin/ujail
       (call .file.getattr_execfile_files (subj_typeattr))

       ;; service foo enable|disable
       (call .file.manage_conffile_lnk_files (subj_typeattr))
       (call .file.readwrite_conffile_dirs (subj_typeattr))
       (call .file.search_initscriptfile_dirs (subj_typeattr))

       (call .functions.read_miscfile_files (subj_typeattr))
       (call .functions.search_miscfile_dirs (subj_typeattr))

       (call .jshn.subj_type_transition (subj_typeattr))

       (call .jsonfilter.subj_type_transition (subj_typeattr))

       (call .libubox.read_datafile_files (subj_typeattr))
       (call .libubox.search_datafile_dirs (subj_typeattr))

       ;; probably /sbin/ujail related
       (call .mnt.getattr_miscfile_dirs (subj_typeattr))

       (call .nameservice.read_miscfile_files (subj_typeattr))

       (call .rccommon.read_conffile_files (subj_typeattr))

       (call .selinux.linked.subj_type (subj_typeattr))

       (call .shell.execute_execfile_files (subj_typeattr))

       (call .tmp.list_fs_dirs (subj_typeattr))

       (call .tmpfile.addname_locktmpfile_dirs (subj_typeattr))
       (call .tmpfile.create_locktmpfile_files (subj_typeattr))
       (call .tmpfile.readwrite_locktmpfile_files (subj_typeattr))

       (call .ubus.subj_type_transition (subj_typeattr))

       (call .uci.subj_type_transition (subj_typeattr))

       (call .validatedata.subj_type_transition (subj_typeattr))

       (optional initscript_opt_rcucitrack
                 (call .rcucitrack.use_fds (subj_typeattr)))

       (block exec

              ;;
              ;; Policy
              ;;

              (blockinherit .file.obj_all_macro_template)

              (call .agent.exec.obj_type (obj_typeattr)))

       ;;
       ;; Templates
       ;;

       (block base_template

              ;;
              ;; Macros
              ;;

              (macro subj_type_transition ((type ARG1))
                     (allow ARG1 subj (process (transition)))
                     (dontaudit ARG1 subj
                                (process (noatsecure siginh rlimitinh)))

                     (allow subj ARG1 (process (sigchld)))

                     (call initscriptfile_subj_type_transition (ARG1 subj))
                     (call mapexecute_initscriptfile_files (ARG1))
                     (call read_initscriptfile_files (ARG1)))

              ;;
              ;; Policy
              ;;

              (blockabstract base_template)

              (blockinherit .file.initscript.obj_template)
              (blockinherit .subj.common.subj_template)

              (call entrypoint_initscriptfile_files (subj))
              (call mapexecute_initscriptfile_files (subj))
              (call read_initscriptfile_files (subj))

              (call .initscript.exec.obj_type (initscriptfile))
              (call .initscript.subj_type (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(handleunknown
 deny)

(mls
 false)

(policycap
 "always_check_network")
(policycap
 "cgroup_seclabel")
(policycap
 "extended_socket_class")
(policycap
 "genfs_seclabel_symlinks")
(policycap
 "network_peer_controls")
(policycap
 "nnp_nosuid_transition")
(policycap
 "open_perms")

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(defaultrole
  blk_file
  source)
(defaultrole
  chr_file
  source)
(defaultrole
  dir
  source)
(defaultrole
  fifo_file
  source)
(defaultrole
  file
  source)
(defaultrole
  lnk_file
  source)
(defaultrole
  sock_file
  source)

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .wpad.subj_type_transition (subj)))

(in .file
    (call .wpad.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .wpad.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr dir "hostapd"))
    (call .wpad.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr dir "wpa_supplicant")))

(block wpad

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/run/hostapd"
        dir
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/hostapd/.*"
        any
        runtimetmpfile_file_context)

       (filecon
        "/tmp/run/wpa_supplicant"
        dir
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/wpa_supplicant/.*"
        any
        runtimetmpfile_file_context)

       (filecon
        "/tmp/wpa_ctrl.*"
        socket
        tmpfile_file_context)

       (filecon
        "/usr/bin/hostapd"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/wpad"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro getattr_execfile_files ((type ARG1))
              (allow ARG1 execfile (file (getattr))))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "hostapd"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "wpad")))

       (macro obj_type_transition_runtimetmpfile ((type ARG1)(class ARG2)(name ARG3))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile ARG2 ARG3)))

       (macro obj_type_transition_tmpfile ((type ARG1)(class ARG2)(name ARG3))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile ARG2 ARG3)))

       (macro setattr_runtimetmpfile_dirs ((type ARG1))
              (allow ARG1 runtimetmpfile (dir (setattr))))

       (macro unix_dgram_send_runtimetmpfile ((type ARG1))
              (call search_runtimetmpfile_dirs (ARG1))
              (call sendto_unix_dgram_sockets (ARG1))
              (call write_runtimetmpfile_sock_files (ARG1)))

       (macro unix_dgram_send_tmpfile ((type ARG1))
              (call sendto_unix_dgram_sockets (ARG1))
              (call write_tmpfile_sock_files (ARG1)))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .tmpfile.obj_template)
       (blockinherit .tmpfile.runtime.obj_template)

       ;; bad ownership/permissions (network.network) on /tmp/run/{hostapd,wpa_supplicant}
       (allow subj self (capability (dac_override net_admin net_raw)))
       (allow subj self create_netlink_generic_socket)
       (allow subj self create_netlink_route_socket)
       (allow subj self create_packet_socket)
       (allow subj self create_tcp_socket)
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)
       (allow subj self create_unix_stream_stream_socket)
       (allow subj self (netlink_route_socket (nlmsg_write)))
       (allow subj self (unix_dgram_socket (sendto)))

       (call manage_runtimetmpfile_dirs (subj))
       (call manage_runtimetmpfile_sock_files (subj))
       (call obj_type_transition_runtimetmpfile (subj dir "hostapd"))
       (call obj_type_transition_runtimetmpfile (subj dir "wpa_supplicant"))

       (call manage_tmpfile_sock_files (subj))
       (call obj_type_transition_tmpfile (subj sock_file "*"))

       (call .sys.loadkernelmodule.subj_type (subj))
       ;; compat with genfs_seclabel_symlinks=0
       (call .sys.read_fs_lnk_files (subj))
       (call .sys.readinherited_fifo_files (subj))
       (call .sys.requestmodule (subj))
       (call .sys.search_fs_dirs (subj))
       (call .sys.search_sysctlfile_dirs (subj))

       (call .class.read_sysfile_lnk_files (subj))
       (call .class.search_sysfile_dirs (subj))

       (call .debug.search_fs_dirs (subj))

       (call .devices.search_sysfile_dirs (subj))

       (call .file.search_conffile_dirs (subj))

       (call .ipv4.readwrite_sysctlfile_files (subj))
       (call .ipv4.search_sysctlfile_dirs (subj))

       (call .ipv6.readwrite_sysctlfile_files (subj))
       (call .ipv6.search_sysctlfile_dirs (subj))

       (call .logd.unix_dgram_send (subj))

       (call .net.egress_netifs (subj))
       (call .net.search_sysctlfile_dirs (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .netifd.read_runtimetmpfile_files (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .tmpfile.deletename_runtimetmpfile_dirs (subj))

       (call .ubusd.unix_stream_connect (subj))

       (optional wpad_opt_rpcd
                 (call .rpcd.unix_dgram_send (subj)))

       (optional wpad_opt_sslcertfile
                 (call .ssl.read.subj_type (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .chronyc.subj_type_transition (subj))
    (call .chronyd.subj_type_transition (subj)))

(in .file
    (call .chrony.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .chrony.obj_type_transition_conftmpfile (unconfined.subj_typeattr))
    (call .chrony.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr))
    (call .chronyc.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .chronyd.obj_type_transition_execfile (unconfined.subj_typeattr)))

(in .hotplugcall
    (call .chrony.manage_runtimetmpfile_dirs (subj))
    (call .chrony.manage_runtimetmpfile_files (subj))
    (call .chrony.obj_type_transition_runtimetmpfile (subj))
    (call .chronyc.subj_type_transition (subj)))

(block chrony

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/chrony"
        dir
        conffile_file_context)
       (filecon
        "/etc/chrony/.*"
        any
        conffile_file_context)

       (filecon
        "/tmp/etc/chrony\.conf"
        file
        conftmpfile_file_context)
       (filecon
        "/tmp/etc/chrony\.d"
        dir
        conftmpfile_file_context)
       (filecon
        "/tmp/etc/chrony\.d/.*"
        any
        conftmpfile_file_context)

       (filecon
        "/tmp/run/chrony"
        dir
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/chrony/.*"
        any
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/chrony-dhcp"
        dir
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/chrony-dhcp/.*"
        any
        runtimetmpfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "chrony")))

       (macro obj_type_transition_conftmpfile ((type ARG1))
              (call .tmpfile.conftmpfile_obj_type_transition
                    (ARG1 conftmpfile dir "chrony.d"))
              (call .tmpfile.conftmpfile_obj_type_transition
                    (ARG1 conftmpfile file "chrony.conf")))

       (macro obj_type_transition_runtimetmpfile ((type ARG1))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile dir "chrony"))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile dir "chrony-dhcp")))

       (macro setattr_conffile_files ((type ARG1))
              (allow ARG1 conffile (file (setattr))))

       ;;
       ;; Policy
       ;;

       (blockinherit .file.conf.obj_template)
       (blockinherit .tmpfile.conf.obj_template)
       (blockinherit .tmpfile.runtime.obj_template))

(block chronyc

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/chronyc"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "chronyc")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (allow subj self (capability (dac_override dac_read_search)))
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)

       (call .sys.readwriteinherited_ptydev_chr_files (subj))

       (call .chrony.manage_runtimetmpfile_sock_files (subj))
       (call .chrony.read_conffile_files (subj))
       (call .chrony.readwrite_runtimetmpfile_dirs (subj))
       (call .chrony.search_conffile_dirs (subj))

       (call .chronyd.sendto_unix_dgram_sockets (subj))

       (call .cpuinfo.read_procfile_files (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))

       (call .hotplugcall.readinherited_fifo_files (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .net.egress_netifs (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .netifd.readinherited_fifo_files (subj))
       (call .netifd.dontaudit_readwrite_netlink_kobject_uevent_sockets (subj))
       (call .netifd.dontaudit_readwrite_netlink_route_sockets (subj))

       (call .resolv.read.subj_type (subj))

       (call .tmpfile.search_runtimetmpfile_dirs (subj))

       (optional chronyc_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj))))

(block chronyd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/chronyd"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "chronyd")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (allow subj self
              (capability (chown dac_override dac_read_search fsetid setgid
                                 setuid sys_time)))
       (allow subj self (process (setcap)))
       (allow subj self create_unix_dgram_socket)

       (call .cpuinfo.read_procfile_files (subj))

       (call .chrony.append_conffile_files (subj))
       (call .chrony.list_conftmpfile_dirs (subj))
       (call .chrony.manage_runtimetmpfile_dirs (subj))
       (call .chrony.manage_runtimetmpfile_files (subj))
       (call .chrony.manage_runtimetmpfile_sock_files (subj))
       (call .chrony.obj_type_transition_runtimetmpfile (subj))
       (call .chrony.read_conffile_files (subj))
       (call .chrony.read_conftmpfile_files (subj))
       (call .chrony.search_conffile_dirs (subj))
       (call .chrony.setattr_conffile_files (subj))

       (call .chronyc.sendto_unix_dgram_sockets (subj))

       (call .chronycmd.udp_bind_netports (subj))

       (call .logd.unix_dgram_send (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .net.egress_netifs (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .ntp.udp_bind_netports (subj))

       (call .ntpnts.tcp_connect_netports (subj))

       (call .resolv.read.subj_type (subj))

       (call .tmpfile.search_conftmpfile_dirs (subj))

       (optional chronyd_opt_sslcertfile
                 (call .ssl.read.subj_type (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .wireguard.subj_type_transition (subj)))

(in .file
    (call .wireguard.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .wireguard.obj_type_transition_tmpfile (unconfined.subj_typeattr))
    (call .wireguard.watchdog.obj_type_transition_execfile
          (unconfined.subj_typeattr)))

(in .netifd
    (call .wireguard.manage_tmpfile_dirs (subj))
    (call .wireguard.manage_tmpfile_files (subj))
    (call .wireguard.obj_type_transition_tmpfile (subj))
    (call .wireguard.subj_type_transition (subj)))

(in wireguard

    ;;
    ;; Contexts
    ;;

    (filecon
     "/tmp/wireguard"
     dir
     tmpfile_file_context)
    (filecon
     "/tmp/wireguard/.*"
     any
     tmpfile_file_context)

    (filecon
     "/usr/bin/wg"
     file
     execfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_execfile ((type ARG1))
           (call .file.execfile_obj_type_transition
                 (ARG1 execfile file "wg")))

    (macro obj_type_transition_tmpfile ((type ARG1))
           (call .tmp.fs_obj_type_transition
                 (ARG1 tmpfile dir "wireguard")))

    ;;
    ;; Policy
    ;;

    (blockinherit .agent.base_template)
    (blockinherit .tmpfile.obj_template)

    (allow subj self (capability (net_admin)))
    (allow subj self create_netlink_generic_socket)
    (allow subj self create_netlink_route_socket)
    (allow subj self create_udp_socket)
    (allow subj self (netlink_route_socket (nlmsg_read)))

    (call read_tmpfile_files (subj))
    (call search_tmpfile_dirs (subj))

    (call .sys.readwriteinherited_fifo_files (subj))
    (call .sys.readwriteinherited_ptydev_chr_files (subj))

    (call .dev.readwriteinherited_ttydev_chr_files (subj))

    ;; wg genkey|pubkey >
    (call .file.writeinherited_homefile_files (subj))
    (call .file.search_conffile_dirs (subj))

    (call .netifd.readwriteinherited_fifo_files (subj))
    (call .netifd.dontaudit_readwrite_netlink_kobject_uevent_sockets (subj))
    (call .netifd.dontaudit_readwrite_netlink_route_sockets (subj))

    (call .tmpfile.search_runtimetmpfile_dirs (subj))

    (optional wireguard_opt_luci
              (call .luci.cgi.writeinherited_fifo_files (subj)))

    (optional wireguard_opt_ttyd
              (call .ttyd.readwriteinherited_ptydev_chr_files (subj)))

    (optional wireguard_opt_uhttpd
              (call .uhttpd.readinherited_fifo_files (subj)))

    (block watchdog

           ;;
           ;; Contexts
           ;;

           (filecon
            "/usr/bin/wireguard_watchdog"
            file
            execfile_file_context)

           ;;
           ;; Macros
           ;;

           (macro obj_type_transition_execfile ((type ARG1))
                  (call .file.execfile_obj_type_transition
                        (ARG1 execfile file "wireguard_watchdog")))

           ;;
           ;; Policy
           ;;

           (blockinherit .file.exec.obj_template)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .mountroot.subj_type_transition (subj)))

(in .file
    (call .mountroot.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .mountroot.obj_type_transition_tmpfile (unconfined.subj_typeattr)))

(block mountroot

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/\.switch_jffs2"
        file
        tmpfile_file_context)
       (filecon
        "/tmp/sysupgrade\.tar"
        file
        tmpfile_file_context)

       (filecon
        "/usr/bin/mount_root"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "mount_root")))

       (macro obj_type_transition_tmpfile ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile file ".switch_jffs2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile file "sysupgrade.tar")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .tmpfile.obj_template)

       ;; mknod is caused by "cp", probably copying over a devnode. bug?
       (allow subj self
              (capability (chown dac_override dac_read_search fsetid mknod
                                 sys_admin)))
       (allow subj self (capability2 (syslog)))
       (allow subj self create_unix_dgram_socket)

       (call manage_tmpfile_files (subj))
       (call obj_type_transition_tmpfile (subj))

       (call .sys.readringbuffer (subj))
       (call .sys.requestmodule (subj))
       (call .sys.setsched (subj)) ;; might be able to dontaudit this (could be mount related)
       (call .sys.writeinherited_fifo_files (subj))
       (call .sys.mountpoint.mounton_all_dirs (subj))

       ;; the big hammer
       (call .agent.exec.execute_all_files (subj))

       (call .debug.search_fs_dirs (subj))

       (call .dev.getattr_all_chr_files (subj))
       (call .dev.stor.readwrite_all_blk_files (subj))
       (call .dev.stor.readwrite_all_chr_files (subj))
       (call .dev.stor.readwrite.subj_type (subj))

       ;; this is probably a bug: /boot/boot
       (call .dos.manage_fs_dirs (subj))
       (call .dos.manage_fs_files (subj))
       (call .dos.relabel_fs_files (subj))

       ;; the big hammer
       (call .file.unconfined.subj_type (subj))

       (call .filesystems.read_procfile_files (subj))

       (call .fs.seclabel.getattr_all_filesystems (subj))

       (call .kmsg.readwrite_nodedev_chr_files (subj))

       (call .mke2fs.subj_type_transition (subj))

       (call .logd.unix_dgram_send (subj))

       (call .mkfsf2fs.subj_type_transition (subj))

       (call .proc.list_fs_dirs (subj))
       (call .pts.search_fs_dirs (subj))

       (call .selinux.checkcontext (subj))
       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .sysctl.list_conffile_dirs (subj))
       (call .sysctl.read_conffile_files (subj))

       (call .tmp.getattr_filesystems (subj))
       (call .tmp.manage_fs_dirs (subj))
       (call .tmp.manage_fs_lnk_files (subj))
       (call .tmp.mount_filesystems (subj))
       ;; the big hammer
       (call .tmp.dontaudit_getattr_fs_chr_files (subj))

       (call .watchdog.dontaudit_writeinherited_nodedev_chr_files (subj))

       (call .xattr.getattr_filesystems (subj))
       (call .xattr.mount_filesystems (subj))
       (call .xattr.remount_filesystems (subj))
       (call .xattr.unmount_filesystems (subj))

       (optional mountroot_opt_blockmount
                 (call .blockmount.subj_type_transition (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .blockd.subj_type_transition (subj)))

(in .file
    (call .blockd.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .blockd.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr)))

(in .blockmount
    (call .blockd.use_fds (subj)))

(in .hotplugcall
    (call .blockd.use_fds (subj)))

(block blockd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/run/blockd"
        dir
        ())
       (filecon
        "/tmp/run/blockd/.*"
        any
        ())

       (filecon
        "/usr/bin/blockd"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "blockd")))

       (macro obj_type_transition_runtimetmpfile ((type ARG1))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile dir "blockd")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .tmpfile.runtime.obj_template)

       (allow subj self (capability (sys_admin)))
       (allow subj self create_unix_dgram_socket)
       (allow subj self create_unix_stream_socket)

       (call create_runtimetmpfile_dirs (subj))
       (call mounton_runtimetmpfile_dirs (subj))
       (call obj_type_transition_runtimetmpfile (subj))

       (call .auto.list_fs_dirs (subj))
       (call .auto.mount_filesystems (subj))
       (call .auto.unmount_filesystems (subj))

       (call .blockmount.subj_type_transition (subj))

       (call .hotplugcall.subj_type_transition (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .ubusd.unix_stream_connect (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .ubusd.subj_type_transition (subj)))

(in .file
    (call .ubusd.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .ubusd.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr)))

(block ubusd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/run/ubus"
        dir
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/ubus/.*"
        any
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/ubus\.sock"
        socket
        runtimetmpfile_file_context)

       (filecon
        "/usr/bin/ubusd"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ubusd")))

       (macro obj_type_transition_runtimetmpfile ((type ARG1))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile dir "ubus"))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile sock_file "ubus.sock")))

       (macro unix_stream_connect ((type ARG1))
              (call connectto_unix_stream_sockets (ARG1))
              (call search_runtimetmpfile_dirs (ARG1))
              (call write_runtimetmpfile_sock_files (ARG1)))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .tmpfile.runtime.obj_template)

       (allow subj self create_unix_dgram_socket)
       (allow subj self create_unix_stream_stream_socket)

       (call manage_runtimetmpfile_dirs (subj))
       (call manage_runtimetmpfile_sock_files (subj))
       (call obj_type_transition_runtimetmpfile (subj))

       (call .acl.list_datafile_dirs (subj))
       (call .acl.read_datafile_files (subj))

       (call .file.search_conffile_dirs (subj))

       (call .logd.readinherited_fifo_files (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .tmpfile.deletename_runtimetmpfile_dirs (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .swconfig.subj_type_transition (subj)))

(in .file
    (call .swconfig.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block swconfig

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/swconfig"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro auditexecute_execfile_files ((type ARG1))
              (allow ARG1 execfile (file (getattr execute))))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "swconfig")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (allow subj self (capability (net_admin)))
       (allow subj self create_netlink_generic_socket)

       (call .sys.readwriteinherited_ptydev_chr_files (subj))
       (call .sys.readwriteinherited_fifo_files (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))

       (call .file.search_conffile_dirs (subj))

       (call .uci.read_conffile_files (subj))
       (call .uci.read_tmpfile_files (subj))
       (call .uci.search_conffile_dirs (subj))
       (call .uci.search_tmpfile_dirs (subj))

       (call .watchdog.dontaudit_writeinherited_nodedev_chr_files (subj))

       (optional swconfig_opt_rcnetwork
                 (call .rcnetwork.use_fds (subj)))

       (optional swconfig_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .boarddetect.obj_type_transition_conffile
          (unconfined.subj_typeattr))
    (call .boarddetect.obj_type_transition_execfile
          (unconfined.subj_typeattr)))

(block boarddetect

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/board\.d"
        dir
        conffile_file_context)
       (filecon
        "/etc/board\.d/.*"
        any
        conffile_file_context)

       (filecon
        "/usr/bin/board_detect"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "board.d")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "board_detect")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.conf.obj_template)

       (call list_conffile_dirs (subj))
       (call read_conffile_files (subj))

       (call .sys.read_fs_lnk_files (subj))
       (call .sys.writeinherited_fifo_files (subj))

       (call .board.read_miscfile_files (subj))

       (call .class.search_sysfile_dirs (subj))

       (call .configgenerate.use_fds (subj))

       (call .dev.stor.read.subj_type (subj))

       (call .devices.search_sysfile_dirs (subj))

       (call .functions.search_miscfile_dirs (subj))
       (call .functions.read_miscfile_files (subj))

       (call .jshn.subj_type_transition (subj))

       (call .libubox.read_datafile_files (subj))
       (call .libubox.search_datafile_dirs (subj))

       (call .mtd.read_procfile_files (subj))

       (call .preinit.read_tmpfile_files (subj))
       (call .preinit.search_tmpfile_dirs (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (optional boarddetect_opt_mtdstordev
                 (call .mtd.read_stordev_blk_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .tcpdump.subj_type_transition (subj)))

(in .file
    (call .tcpdump.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block tcpdump

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/tcpdump"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "tcpdump")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (allow subj self (capability (net_raw setgid setuid)))
       (allow subj self create_netlink_route_socket)
       (allow subj self create_packet_socket)
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)
       (allow subj self (packet_socket (map)))
       (allow subj self (netlink_route_socket (nlmsg_read)))

       (call .sys.read_fs_lnk_files (subj))
       (call .sys.readwriteinherited_fifo_files (subj))
       (call .sys.readwriteinherited_ptydev_chr_files (subj))
       (call .sys.search_fs_dirs (subj))

       (call .class.list_sysfile_dirs (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))

       (call .devices.read_sysfile_files (subj))
       (call .devices.search_sysfile_dirs (subj))

       (call .file.manage_homefile_files (subj))
       (call .file.readwrite_homefile_dirs (subj))

       (call .locale.read.subj_type (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .net.egress_netifs (subj))
       (call .net.read_procfile_files (subj))
       (call .net.read_procfile_lnk_files (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .resolv.read.subj_type (subj))

       (optional tcpdump_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .uci.subj_type_transition (subj)))

(in .file
    (call .uci.defaults.obj_type_transition_conffile
          (unconfined.subj_typeattr))
    (call .uci.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .uci.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .uci.obj_type_transition_statetmpfile (unconfined.subj_typeattr))
    (call .uci.obj_type_transition_tmpfile (unconfined.subj_typeattr)))

(block uci

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/config"
        dir
        conffile_file_context)
       (filecon
        "/etc/config/.*"
        any
        conffile_file_context)

       (filecon
        "/tmp/\.uci"
        dir
        tmpfile_file_context)
       (filecon
        "/tmp/\.uci/.*"
        dir
        tmpfile_file_context)

       (filecon
        "/tmp/state/network"
        file
        statetmpfile_file_context)
       (filecon
        "/tmp/state/wireless"
        file
        statetmpfile_file_context)

       (filecon
        "/usr/bin/uci"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro getattr_conffile_files ((type ARG1))
              (allow ARG1 conffile (file (getattr))))

       (macro getattr_execfile_files ((type ARG1))
              (allow ARG1 execfile (file (getattr))))

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "config")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "uci")))

       (macro obj_type_transition_statetmpfile ((type ARG1))
              (call .tmpfile.statetmpfile_obj_type_transition
                    (ARG1 statetmpfile file "network"))
              (call .tmpfile.statetmpfile_obj_type_transition
                    (ARG1 statetmpfile file "wireless")))

       (macro obj_type_transition_tmpfile ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile dir ".uci")))

       (macro setattr_tmpfile_dirs ((type ARG1))
              (allow ARG1 tmpfile (dir (setattr)))) 

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.conf.obj_template)
       (blockinherit .tmpfile.obj_template)
       (blockinherit .tmpfile.state.obj_template)

       (call manage_conffile_dirs (subj))
       (call manage_conffile_files (subj))
       (call obj_type_transition_conffile (subj))

       (call manage_statetmpfile_files (subj))
       (call obj_type_transition_statetmpfile (subj))

       (call manage_tmpfile_dirs (subj))
       (call manage_tmpfile_files (subj))
       (call obj_type_transition_tmpfile (subj))

       (call .sys.readwriteinherited_fifo_files (subj))
       (call .sys.readwriteinherited_ptydev_chr_files (subj))
       (call .sys.dontaudit_readwrite_udp_sockets (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))

       (call .file.search_conffile_dirs (subj))

       (call .configgenerate.readinherited_fifo_files (subj))

       (call .hotplugcall.writeinherited_fifo_files (subj))

       (call .ifup.writeinherited_fifo_files (subj))

       (call .net.dontaudit_readinherited_procfile_files (subj))

       (call .netifd.readwriteinherited_fifo_files (subj))
       (call .netifd.dontaudit_readwrite_netlink_kobject_uevent_sockets (subj))
       (call .netifd.dontaudit_readwrite_netlink_route_sockets (subj))

       (call .reloadconfig.use_fds (subj))
       (call .reloadconfig.writeinherited_runtimetmpfile_files (subj))

       (call .tmpfile.search_statetmpfile_dirs (subj))

       (call .urandomseed.writeinherited_fifo_files (subj))

       (call .watchdog.dontaudit_writeinherited_nodedev_chr_files (subj))

       (call .wifi.readwriteinherited_fifo_files (subj))

       (optional uci_opt_initscript
                 (call .initscript.readwriteinherited_all_fifo_files (subj)))

       (optional uci_opt_luci
                 (call .luci.cgi.writeinherited_fifo_files (subj)))

       (optional uci_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj)))

       (optional uci_opt_uhttpd
                 (call .uhttpd.readinherited_fifo_files (subj)))

       (block defaults

              ;;
              ;; Contexts
              ;;

              (filecon
               "/etc/uci-defaults"
               dir
               conffile_file_context)
              (filecon
               "/etc/uci-defaults/.*"
               any
               conffile_file_context)

              ;;
              ;; Macros
              ;;

              (macro obj_type_transition_conffile ((type ARG1))
                     (call .file.conffile_obj_type_transition
                           (ARG1 conffile dir "uci-defaults")))

              ;;
              ;; Policy
              ;;

              (blockinherit .file.conf.obj_template)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .gptfdisk.subj_type_transition (subj)))

(in .file
    (call .gptfdisk.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block gptfdisk

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/addpart"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/cfdisk"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/cgdisk"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/delpart"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/fdisk"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/fixparts"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/gdisk"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/partx"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/sfdisk"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/sgdisk"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "addpart"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "cfdisk"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "cgdisk"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "delpart"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "fdisk"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "fixparts"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "gdisk"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "partx"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "sfdisk"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "sgdisk")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (allow subj self (capability (sys_admin)))

       (call .sys.read_fs_lnk_files (subj))
       (call .sys.search_fs_dirs (subj))
       (call .sys.readwriteinherited_ptydev_chr_files (subj))

       (call .block.search_sysfile_dirs (subj))

       (call .file.search_conffile_dirs (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))
       (call .dev.stor.readwrite.subj_type (subj))

       (call .devices.read_sysfile_files (subj))
       (call .devices.search_sysfile_dirs (subj))

       (call .random.read_nodedev_chr_files (subj))

       (optional gptfdisk_opt_dmstordev
                 (call .dm.readwrite_stordev_blk_files (subj)))

       (optional gptfdisk_opt_hdstordev
                 (call .hd.readwrite_stordev_blk_files (subj)))

       (optional gptfdisk_opt_loopstordev
                 (call .loop.readwrite_stordev_blk_files (subj)))

       (optional gptfdisk_opt_mmcstordev
                 (call .mmc.readwrite_stordev_blk_files (subj)))

       (optional gptfdisk_opt_nvmestordev
                 (call .nvme.readwrite_stordev_blk_files (subj)))

       (optional gptfdisk_opt_sdstordev
                 (call .sd.readwrite_stordev_blk_files (subj)))

       (optional gptfdisk_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj)))

       (optional gptfdisk_opt_vdstordev
                 (call .vd.readwrite_stordev_blk_files (subj)))

       (optional gptfdisk_opt_zramstordev
                 (call .zram.readwrite_stordev_blk_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .urngd.subj_type_transition (subj)))

(in .file
    (call .urngd.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block urngd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/urngd"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "urngd")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (allow subj self (capability (sys_admin)))
       (allow subj self (capability2 (syslog)))

       (call .sys.readringbuffer (subj))
       (call .sys.search_sysctlfile_dirs (subj))

       (call .file.search_conffile_dirs (subj))

       (call .kmsg.readwrite_nodedev_chr_files (subj))

       (call .random.readwrite_nodedev_chr_files (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .preinit.libfile_obj_type_transition_miscfile
          (unconfined.subj_typeattr))
    (call .preinit.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .preinit.obj_type_transition_tmpfile (unconfined.subj_typeattr)))

(block preinit

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/sysinfo"
        dir
        tmpfile_file_context)
       (filecon
        "/tmp/sysinfo/.*"
        any
        tmpfile_file_context)

       (filecon
        "/etc/preinit"
        file
        execfile_file_context)

       (filecon
        "/etc/diag\.sh"
        file
        miscfile_file_context)

       (filecon
        "/usr/lib/preinit"
        dir
        miscfile_file_context)
       (filecon
        "/usr/lib/preinit/.*"
        any
        miscfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro libfile_obj_type_transition_miscfile ((type ARG1))
              (call .file.libfile_obj_type_transition
                    (ARG1 miscfile dir "preinit")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 execfile file "preinit")))

       (macro obj_type_transition_tmpfile ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile dir "sysinfo")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.misc.obj_template)
       (blockinherit .tmpfile.obj_template)

       (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .ubiutil.subj_type_transition (subj)))

(in .file
    (call .ubiutil.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block ubiutil

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/ubiattach"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/ubiblock"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/ubicrc32"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/ubidetach"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/ubiformat"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/ubimkvol"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/ubinfo"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/ubinize"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/ubirename"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/ubirmvol"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/ubirsvol"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/ubiupdatevol"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ubiattach"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ubiblock"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ubicrc32"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ubidetach"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ubiformat"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ubimkvol"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ubinfo"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ubinize"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ubirename"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ubirmvol"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ubirsvol"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ubiupdatevol")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (allow subj self (capability (sys_resource)))

       ;; compat with genfs_seclabel_symlinks=0
       (call .sys.read_fs_lnk_files (subj))
       (call .sys.search_fs_dirs (subj))

       (call .class.list_sysfile_dirs (subj))
       (call .class.read_sysfile_files (subj))
       (call .class.read_sysfile_lnk_files (subj))

       (call .debug.search_fs_dirs (subj))

       (call .dev.stor.read.subj_type (subj))

       (call .devices.read_sysfile_files (subj))
       (call .devices.search_sysfile_dirs (subj))

       (call .file.search_conffile_dirs (subj))

       (call .mtd.read_stordev_chr_files (subj))

       (call .watchdog.dontaudit_writeinherited_nodedev_chr_files (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .opkg.call.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .opkg.key.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .opkg.libfile_obj_type_transition_miscfile
          (unconfined.subj_typeattr))
    (call .opkg.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .opkg.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .opkg.obj_type_transition_statetmpfile (unconfined.subj_typeattr))
    (call .opkg.obj_type_transition_tmpfile (unconfined.subj_typeattr)))

(block opkg

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/opkg"
        dir
        conffile_file_context)
       (filecon
        "/etc/opkg/.*"
        any
        conffile_file_context)
       (filecon
        "/etc/opkg\.conf"
        file
        conffile_file_context)

       (filecon
        "/tmp/opkg\.err"
        file
        tmpfile_file_context)
       (filecon
        "/tmp/opkg\.lock"
        file
        tmpfile_file_context)
       (filecon
        "/tmp/opkg\.out"
        file
        tmpfile_file_context)

       (filecon
        "/tmp/opkg-lists"
        dir
        tmpfile_file_context)
       (filecon
        "/tmp/opkg-lists/.*"
        any
        tmpfile_file_context)

       (filecon
        "/tmp/usr/lib/opkg"
        dir
        statetmpfile_file_context)
       (filecon
        "/tmp/usr/lib/opkg/.*"
        any
        statetmpfile_file_context)

       (filecon
        "/usr/bin/opkg"
        file
        execfile_file_context)

       (filecon
        "/usr/lib/opkg"
        dir
        miscfile_file_context)
       (filecon
        "/usr/lib/opkg/.*"
        any
        miscfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro libfile_obj_type_transition_miscfile ((type ARG1))
              (call .file.libfile_obj_type_transition
                    (ARG1 miscfile dir "opkg")))

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "opkg"))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "opkg.conf")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "opkg")))

       (macro obj_type_transition_statetmpfile ((type ARG1))
              (call .tmpfile.statetmpfile_obj_type_transition
                    (ARG1 statetmpfile dir "opkg")))

       (macro obj_type_transition_tmpfile ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile dir "opkg-lists"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile file "opkg.err"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile file "opkg.lock"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile file "opkg.out")))

       (macro dontaudit_writeinherited_tmpfile_files ((type ARG1))
              (dontaudit ARG1 tmpfile writeinherited_file))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.conf.obj_template)
       (blockinherit .file.misc.obj_template)
       (blockinherit .tmpfile.obj_template)
       (blockinherit .tmpfile.state.obj_template)

       (call .xattr.associate_filesystems (miscfile))

       (block call

              ;;
              ;; Contexts
              ;;

              (filecon
               "/usr/bin/opkg-call"
               file
               execfile_file_context)

              ;;
              ;; Macros
              ;;

              (macro obj_type_transition_execfile ((type ARG1))
                     (call .file.execfile_obj_type_transition
                           (ARG1 execfile file "opkg-call")))

              ;;
              ;; Policy
              ;;

              (blockinherit .agent.base_template)

              (call list_conffile_dirs (subj))
              (call read_conffile_files (subj))

              (call read_miscfile_files (subj))
              (call search_miscfile_dirs (subj))

              (call list_tmpfile_dirs (subj))
              (call manage_tmpfile_files (subj))
              (call obj_type_transition_tmpfile (subj))

              ;; opkg is "trusted"
              (call opkg.execfile_subj_type_transition (subj .sys.subj))
              (call opkg.mapexecute_execfile_files (subj))
              (call opkg.read_execfile_files (subj))

              (call .sys.transition (subj))
              (call .sys.dontaudit_noatsecure (subj))
              (call .sys.dontaudit_rlimitinh (subj))
              (call .sys.dontaudit_siginh (subj))

              (call .jshn.subj_type_transition (subj))

              (call .libubox.read_datafile_files (subj))
              (call .libubox.search_datafile_dirs (subj))

              (call .selinux.linked.subj_type (subj))

              (call .shell.execute_execfile_files (subj))

              (call .tmp.deletename_fs_dirs (subj))

              (optional opkg_call_opt_cgiio
                        (call .cgiio.writeinherited_fifo_files (subj))))

       (block key

              ;;
              ;; Contexts
              ;;

              (filecon
               "/usr/bin/opkg-key"
               file
               execfile_file_context)

              ;;
              ;; Macros
              ;;

              (macro obj_type_transition_execfile ((type ARG1))
                     (call .file.execfile_obj_type_transition
                           (ARG1 execfile file "opkg-key")))

              ;;
              ;; Policy
              ;;

              (blockinherit .agent.base_template)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .squid.sslcrtd.subj_type_transition (subj))
    (call .squid.subj_type_transition (subj)))

(in .file
    (call .squid.helper.libfile_obj_type_transition_execfile
          (unconfined.subj_typeattr))
    (call .squid.obj_type_transition_certfile (unconfined.subj_typeattr))
    (call .squid.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .squid.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .squid.obj_type_transition_runtimetmpfile (unconfined.subj_typeattr))
    (call .squid.obj_type_transition_tmpfile
          (unconfined.subj_typeattr dir "squid"))
    (call .squid.sslcrtd.libfile_obj_type_transition_execfile
          (unconfined.subj_typeattr)))

(block squid

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/squid"
        dir
        conffile_file_context)
       (filecon
        "/etc/squid/.*"
        any
        conffile_file_context)

       (filecon
        "/etc/squid/ssl_cert"
        dir
        certfile_file_context)
       (filecon
        "/etc/squid/ssl_cert/.*"
        any
        certfile_file_context)

       (filecon
        "/tmp/squid"
        dir
        tmpfile_file_context)
       (filecon
        "/tmp/squid/.*"
        any
        tmpfile_file_context)

       (filecon
        "/tmp/run/squid\.pid"
        file
        runtimetmpfile_file_context)

       (filecon
        "/usr/bin/squid"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro map_tmpfile_files ((type ARG1))
              (allow ARG1 tmpfile (file (map))))

       (macro obj_type_transition_certfile ((type ARG1))
              (call .squid.conffile_obj_type_transition
                    (ARG1 certfile dir "ssl_cert")))

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "squid")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "squid")))

       (macro obj_type_transition_runtimetmpfile ((type ARG1))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile file "squid.pid")))

       (macro obj_type_transition_tmpfile ((type ARG1)(class ARG2)(name ARG3))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile ARG2 ARG3)))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.cert.obj_template)
       (blockinherit .file.conf.obj_template)
       (blockinherit .tmpfile.obj_template)
       (blockinherit .tmpfile.runtime.obj_template)

       (allow subj self (capability (setgid setuid)))
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)
       (allow subj self create_unix_stream_socket)

       (call read_certfile_files (subj))
       (call search_certfile_dirs (subj))

       (call read_conffile_files (subj))
       (call search_conffile_dirs (subj))

       (call manage_runtimetmpfile_files (subj))
       (call obj_type_transition_runtimetmpfile (subj))

       (call manage_tmpfile_files (subj))
       (call map_tmpfile_files (subj))
       (call obj_type_transition_tmpfile (subj file "*"))
       (call search_tmpfile_dirs (subj))

       (call helper.execute_execfile_files (subj))

       (call sslcrtd.subj_type_transition (subj))

       (call .sys.readwriteinherited_fifo_files (subj))

       (call .file.read_datafile_files (subj))
       (call .file.search_datafile_dirs (subj))

       (call .http.tcp_connect_netports (subj))

       (call .httpproxy.tcp_bind_netports (subj))

       (call .locale.read.subj_type (subj))

       (call .logd.unix_dgram_send (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .net.egress_netifs (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.tcp_bind_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .resolv.read.subj_type (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .tmp.deletename_fs_dirs (subj))

       (call .tmpfile.deletename_runtimetmpfile_dirs (subj))

       (optional squid_opt_rcsquid
                 (call .rcsquid.use_fds (subj)))

       (optional squid_opt_sslcertfile
                 (call .ssl.read.subj_type (subj)))

       (optional squid_opt_uhttpd
                 (call .uhttpd.readinherited_fifo_files (subj)))

       (block helper

              ;;
              ;; Contexts
              ;;

              (filecon
               "/usr/lib/squid/cachemgr\.cgi"
               file
               execfile_file_context)
              (filecon
               "/usr/lib/squid/diskd"
               file
               execfile_file_context)
              (filecon
               "/usr/lib/squid/helper-mux"
               file
               execfile_file_context)
              (filecon
               "/usr/lib/squid/log_db_daemon"
               file
               execfile_file_context)
              (filecon
               "/usr/lib/squid/log_file_daemon"
               file
               execfile_file_context)
              (filecon
               "/usr/lib/squid/security_fake_certverify"
               file
               execfile_file_context)
              (filecon
               "/usr/lib/squid/storeid_file_rewrite"
               file
               execfile_file_context)
              (filecon
               "/usr/lib/squid/url_fake_rewrite"
               file
               execfile_file_context)
              (filecon
               "/usr/lib/squid/url_fake_rewrite\.sh"
               file
               execfile_file_context)
              (filecon
               "/usr/lib/squid/url_lfs_rewrite"
               file
               execfile_file_context)

              ;;
              ;; Macros
              ;;

              (macro libfile_obj_type_transition_execfile ((type ARG1))
                     (call .file.libfile_obj_type_transition
                           (ARG1 execfile file "cachemgr.cgi"))
                     (call .file.libfile_obj_type_transition
                           (ARG1 execfile file "diskd"))
                     (call .file.libfile_obj_type_transition
                           (ARG1 execfile file "helper-mux"))
                     (call .file.libfile_obj_type_transition
                           (ARG1 execfile file "log_db_daemon"))
                     (call .file.libfile_obj_type_transition
                           (ARG1 execfile file "log_file_daemon"))
                     (call .file.libfile_obj_type_transition
                           (ARG1 execfile file "security_fake_certverify"))
                     (call .file.libfile_obj_type_transition
                           (ARG1 execfile file "storeid_file_rewrite"))
                     (call .file.libfile_obj_type_transition
                           (ARG1 execfile file "url_fake_rewrite"))
                     (call .file.libfile_obj_type_transition
                           (ARG1 execfile file "url_fake_rewrite.sh"))
                     (call .file.libfile_obj_type_transition
                           (ARG1 execfile file "url_lfs_rewrite")))

              ;;
              ;; Policy
              ;;

              (blockinherit .file.exec.obj_template))

       (block sslcrtd

              ;;
              ;; Contexts
              ;;

              (filecon
               "/usr/lib/squid/security_file_certgen"
               file
               execfile_file_context)

              ;;
              ;; Macros
              ;;

              (macro libfile_obj_type_transition_execfile ((type ARG1))
                     (call .file.libfile_obj_type_transition
                           (ARG1 execfile file "security_file_certgen")))

              ;;
              ;; Policy
              ;;

              (blockinherit .agent.base_template)

              (allow subj self (capability (dac_override dac_read_search)))

              (call manage_tmpfile_dirs (subj))
              (call manage_tmpfile_files (subj))

              (call .sys.readwriteinherited_ptydev_chr_files (subj))

              (call .dev.readwriteinherited_ttydev_chr_files (subj))

              (call .file.search_conffile_dirs (subj))

              (optional squid_sslcrtd_opt_rcsquid
                        (call .rcsquid.use_fds (subj)))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .murmur.subj_type_transition (subj)))

(in .file
    (call .murmur.conffile_obj_type_transition_certfile
          (unconfined.subj_typeattr))
    (call .murmur.banfile.obj_type_transition_conffile
          (unconfined.subj_typeattr))
    (call .murmur.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .murmur.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .murmur.obj_type_transition_logtmpfile (unconfined.subj_typeattr))
    (call .murmur.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr)))

(in murmur

    ;;
    ;; Contexts
    ;;

    (filecon
     "/etc/umurmur"
     dir
     certfile_file_context)
    (filecon
     "/etc/umurmur/.*"
     any
     certfile_file_context)

    (filecon
     "/etc/umurmur\.conf"
     file
     conffile_file_context)
    (filecon
     "/etc/umurmur\.conf\..*"
     file
     conffile_file_context)

    (filecon
     "/tmp/log/umurmurd\.log"
     file
     logtmpfile_file_context)
    (filecon
     "/tmp/log/umurmurd\.log\..*"
     file
     logtmpfile_file_context)

    (filecon
     "/tmp/run/umurmurd\.pid"
     file
     runtimetmpfile_file_context)

    (filecon
     "/usr/bin/umurmurd"
     file
     execfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro conffile_obj_type_transition_certfile ((type ARG1))
           (call .file.conffile_obj_type_transition
                 (ARG1 certfile dir "umurmur")))

    (macro obj_type_transition_execfile ((type ARG1))
           (call .file.execfile_obj_type_transition
                 (ARG1 execfile file "umurmurd")))

    (macro obj_type_transition_conffile ((type ARG1))
           (call .file.conffile_obj_type_transition
                 (ARG1 conffile file "umurmur.conf")))

    (macro obj_type_transition_logtmpfile ((type ARG1))
           (call .tmpfile.logtmpfile_obj_type_transition
                 (ARG1 logtmpfile file "umurmurd.log")))

    (macro obj_type_transition_runtimetmpfile ((type ARG1))
           (call .tmpfile.runtimetmpfile_obj_type_transition
                 (ARG1 runtimetmpfile file "umurmurd.pid")))

    ;;
    ;; Policy
    ;;

    (blockinherit conf.obj_template)
    (blockinherit .agent.base_template)
    (blockinherit .file.cert.obj_template)
    (blockinherit .tmpfile.log.obj_template)
    (blockinherit .tmpfile.runtime.obj_template)

    (allow subj self (capability (setgid setuid)))
    (allow subj self create_unix_dgram_socket)
    (allow subj self create_unix_stream_socket)

    (call addname_certfile_dirs (subj))
    (call create_certfile_files (subj))
    (call readwrite_certfile_files (subj))

    (call append_logtmpfile_files (subj))
    (call create_logtmpfile_files (subj))
    (call obj_type_transition_logtmpfile (subj))
    (call read_logtmpfile_files (subj))

    (call manage_runtimetmpfile_files (subj))
    (call obj_type_transition_runtimetmpfile (subj))

    (call tcp_bind_netports (subj))
    (call udp_bind_netports (subj))

    (call banfile.write_conffile_files (subj))

    (call conf.read_all_files (subj))

    (call .sys.writeinherited_fifo_files (subj))

    (call .file.read_conffile_lnk_files (subj))

    (call .locale.read.subj_type (subj))

    (call .logd.unix_dgram_send (subj))

    (call .nameservice.read_miscfile_files (subj))

    (call .net.egress_netifs (subj))
    (call .net.sendto_netnodes (subj))
    (call .net.tcp_bind_netnodes (subj))
    (call .net.udp_bind_netnodes (subj))

    (call .tmpfile.deletename_runtimetmpfile_dirs (subj))

    (optional murmur_opt_acme
              (call .acme.read_conffile_files (subj))
              (call .acme.read_conffile_lnk_files (subj))
              (call .acme.search_conffile_dirs (subj)))

    (optional murmur_opt_rcmurmur
              (call .rcmurmur.use_fds (subj)))

    (optional murmur_opt_sslcertfile
              (call .ssl.read.subj_type (subj)))

    (block conf

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (call .file.conf.obj_type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   conffile_file_context
                   (.u
                    .r
                    conffile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   conffile)

                  (call .murmur.conf.obj_type (conffile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile addname_dir))

                  (macro append_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile append_blk_file))

                  (macro append_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile append_chr_file))

                  (macro append_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile append_fifo_file))

                  (macro append_conffile_files ((type ARG1))
                         (allow ARG1 conffile append_file))

                  (macro appendinherited_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile appendinherited_blk_file))

                  (macro appendinherited_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile appendinherited_chr_file))

                  (macro appendinherited_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile appendinherited_fifo_file))

                  (macro appendinherited_conffile_files ((type ARG1))
                         (allow ARG1 conffile appendinherited_file))

                  (macro conffile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 conffile ARG3 ARG4 ARG2)
                         (call addname_conffile_dirs (ARG1)))

                  (macro create_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (create))))

                  (macro create_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile create_blk_file))

                  (macro create_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile create_chr_file))

                  (macro create_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile create_dir))

                  (macro create_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile create_fifo_file))

                  (macro create_conffile_files ((type ARG1))
                         (allow ARG1 conffile create_file))

                  (macro create_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile create_lnk_file))

                  (macro create_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile create_sock_file))

                  (macro deletename_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile deletename_dir))

                  (macro delete_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (delete))))

                  (macro delete_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile delete_blk_file))

                  (macro delete_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile delete_chr_file))

                  (macro delete_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile delete_dir))

                  (macro delete_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile delete_fifo_file))

                  (macro delete_conffile_files ((type ARG1))
                         (allow ARG1 conffile delete_file))

                  (macro delete_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile delete_lnk_file))

                  (macro delete_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile delete_sock_file))

                  (macro execute_conffile_files ((type ARG1))
                         (allow ARG1 conffile execute_file))

                  (macro list_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile list_dir))

                  (macro listinherited_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile listinherited_dir))

                  (macro manage_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (manage))))

                  (macro manage_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile manage_blk_file))

                  (macro manage_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile manage_chr_file))

                  (macro manage_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile manage_dir))

                  (macro manage_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile manage_fifo_file))

                  (macro manage_conffile_files ((type ARG1))
                         (allow ARG1 conffile manage_file))

                  (macro manage_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile manage_lnk_file))

                  (macro manage_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile manage_sock_file))

                  (macro mapexecute_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile mapexecute_chr_file))

                  (macro mapexecute_conffile_files ((type ARG1))
                         (allow ARG1 conffile mapexecute_file))

                  (macro mounton_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (mounton))))

                  (macro mounton_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile mounton_blk_file))

                  (macro mounton_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile mounton_chr_file))

                  (macro mounton_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile mounton_dir))

                  (macro mounton_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile mounton_fifo_file))

                  (macro mounton_conffile_files ((type ARG1))
                         (allow ARG1 conffile mounton_file))

                  (macro mounton_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile mounton_lnk_file))

                  (macro mounton_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile mounton_sock_file))

                  (macro read_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (read))))

                  (macro read_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile read_blk_file))

                  (macro read_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile read_chr_file))

                  (macro read_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile read_fifo_file))

                  (macro read_conffile_files ((type ARG1))
                         (allow ARG1 conffile read_file))

                  (macro readinherited_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile readinherited_blk_file))

                  (macro readinherited_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile readinherited_chr_file))

                  (macro readinherited_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile readinherited_fifo_file))

                  (macro readinherited_conffile_files ((type ARG1))
                         (allow ARG1 conffile readinherited_file))

                  (macro readinherited_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile readinherited_sock_file))

                  (macro read_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile read_lnk_file))

                  (macro read_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile read_sock_file))

                  (macro readwrite_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (readwrite))))

                  (macro readwrite_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile readwrite_blk_file))

                  (macro readwrite_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile readwrite_chr_file))

                  (macro readwrite_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile readwrite_dir))

                  (macro readwrite_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile readwrite_fifo_file))

                  (macro readwrite_conffile_files ((type ARG1))
                         (allow ARG1 conffile readwrite_file))

                  (macro readwriteinherited_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile readwriteinherited_blk_file))

                  (macro readwriteinherited_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile readwriteinherited_chr_file))

                  (macro readwriteinherited_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile readwriteinherited_dir))

                  (macro readwriteinherited_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile readwriteinherited_fifo_file))

                  (macro readwriteinherited_conffile_files ((type ARG1))
                         (allow ARG1 conffile readwriteinherited_file))

                  (macro readwriteinherited_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile readwriteinherited_sock_file))

                  (macro readwrite_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile readwrite_lnk_file))

                  (macro readwrite_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile readwrite_sock_file))

                  (macro relabel_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (relabel))))

                  (macro relabel_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile relabel_blk_file))

                  (macro relabel_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile relabel_chr_file))

                  (macro relabel_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile relabel_dir))

                  (macro relabel_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile relabel_fifo_file))

                  (macro relabel_conffile_files ((type ARG1))
                         (allow ARG1 conffile relabel_file))

                  (macro relabel_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile relabel_lnk_file))

                  (macro relabel_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile relabel_sock_file))

                  (macro relabelfrom_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (relabelfrom))))

                  (macro relabelfrom_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile relabelfrom_blk_file))

                  (macro relabelfrom_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile relabelfrom_chr_file))

                  (macro relabelfrom_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile relabelfrom_dir))

                  (macro relabelfrom_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile relabelfrom_fifo_file))

                  (macro relabelfrom_conffile_files ((type ARG1))
                         (allow ARG1 conffile relabelfrom_file))

                  (macro relabelfrom_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile relabelfrom_lnk_file))

                  (macro relabelfrom_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile relabelfrom_sock_file))

                  (macro relabelto_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (relabelto))))

                  (macro relabelto_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile relabelto_blk_file))

                  (macro relabelto_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile relabelto_chr_file))

                  (macro relabelto_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile relabelto_dir))

                  (macro relabelto_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile relabelto_fifo_file))

                  (macro relabelto_conffile_files ((type ARG1))
                         (allow ARG1 conffile relabelto_file))

                  (macro relabelto_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile relabelto_lnk_file))

                  (macro relabelto_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile relabelto_sock_file))

                  (macro rename_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (rename))))

                  (macro rename_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile rename_blk_file))

                  (macro rename_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile rename_chr_file))

                  (macro rename_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile rename_dir))

                  (macro rename_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile rename_fifo_file))

                  (macro rename_conffile_files ((type ARG1))
                         (allow ARG1 conffile rename_file))

                  (macro rename_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile rename_lnk_file))

                  (macro rename_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile rename_sock_file))

                  (macro search_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile search_dir))

                  (macro write_conffile ((type ARG1))
                         (allow ARG1 conffile (allfiles (write))))

                  (macro write_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile write_blk_file))

                  (macro write_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile write_chr_file))

                  (macro write_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile write_dir))

                  (macro write_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile write_fifo_file))

                  (macro write_conffile_files ((type ARG1))
                         (allow ARG1 conffile write_file))

                  (macro writeinherited_conffile_blk_files ((type ARG1))
                         (allow ARG1 conffile writeinherited_blk_file))

                  (macro writeinherited_conffile_chr_files ((type ARG1))
                         (allow ARG1 conffile writeinherited_chr_file))

                  (macro writeinherited_conffile_dirs ((type ARG1))
                         (allow ARG1 conffile writeinherited_dir))

                  (macro writeinherited_conffile_fifo_files ((type ARG1))
                         (allow ARG1 conffile writeinherited_fifo_file))

                  (macro writeinherited_conffile_files ((type ARG1))
                         (allow ARG1 conffile writeinherited_file))

                  (macro writeinherited_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile writeinherited_sock_file))

                  (macro write_conffile_lnk_files ((type ARG1))
                         (allow ARG1 conffile write_lnk_file))

                  (macro write_conffile_sock_files ((type ARG1))
                         (allow ARG1 conffile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .murmur.conf.obj_base_template)
                  (blockinherit .murmur.conf.obj_macro_template)))

    (block banfile

           ;;
           ;; Contexts
           ;;

           (filecon
            "/etc/umurmur\.banfile"
            file
            conffile_file_context)

           ;;
           ;; Macros
           ;;

           (macro obj_type_transition_conffile ((type ARG1))
                  (call .file.conffile_obj_type_transition
                        (ARG1 conffile file "umurmur.banfile")))

           ;;
           ;; Policy
           ;;

           (blockinherit murmur.conf.obj_template)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .sqm.subj_type_transition (subj)))

(in .file
    (call .sqm.libfile_obj_type_transition_execfile
          (unconfined.subj_typeattr))
    (call .sqm.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .sqm.obj_type_transition_runtimetmpfile (unconfined.subj_typeattr)))

(in .hotplugcall
    (call .sqm.subj_type_transition (subj)))

(in .ip
    (call .sqm.writeinherited_fifo_files (subj)))

(in .kmodloader
    (call .sqm.use_fds (subj)))

(in .uci
    (call .sqm.writeinherited_fifo_files (subj)))

(block sqm

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/sqm"
        dir
        conffile_file_context)
       (filecon
        "/etc/sqm/.*"
        any
        conffile_file_context)

       (filecon
        "/tmp/run/sqm"
        dir
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/sqm/.*"
        any
        runtimetmpfile_file_context)

       (filecon
        "/usr/lib/sqm/run\.sh"
        file
        execfile_file_context)
       (filecon
        "/usr/lib/sqm/start-sqm"
        file
        execfile_file_context)
       (filecon
        "/usr/lib/sqm/stop-sqm"
        file
        execfile_file_context)
       (filecon
        "/usr/lib/sqm/update-available-qdiscs"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro getattr_execfile_files ((type ARG1))
              (allow ARG1 execfile (file (getattr))))

       (macro getattr_runtimetmpfile_files ((type ARG1))
              (allow ARG1 runtimetmpfile (file (getattr))))

       (macro libfile_obj_type_transition_execfile ((type ARG1))
              (call .file.libfile_obj_type_transition
                    (ARG1 execfile file "run.sh"))
              (call .file.libfile_obj_type_transition
                    (ARG1 execfile file "start-sqm"))
              (call .file.libfile_obj_type_transition
                    (ARG1 execfile file "stop-sqm"))
              (call .file.libfile_obj_type_transition
                    (ARG1 execfile file "update-available-qdiscs")))

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "sqm")))

       (macro obj_type_transition_runtimetmpfile ((type ARG1))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile dir "sqm")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.conf.obj_template)
       (blockinherit .tmpfile.runtime.obj_template)

       (allow subj self (capability (net_admin)))
       (allow subj self create_netlink_route_socket)
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)
       (allow subj self (netlink_route_socket (nlmsg_read nlmsg_write)))

       (call read_conffile_files (subj))
       (call search_conffile_dirs (subj))

       (call execute_execfile_files (subj))

       (call manage_runtimetmpfile_dirs (subj))
       (call manage_runtimetmpfile_files (subj))
       (call obj_type_transition_runtimetmpfile (subj))

       (call .sys.read_fs_lnk_files (subj))
       (call .sys.writeinherited_fifo_files (subj))

       (call .class.search_sysfile_dirs (subj))

       (call .devices.read_sysfile_files (subj))
       (call .devices.search_sysfile_dirs (subj))

       (call .file.read_conffile_lnk_files (subj))

       (call .functions.read_miscfile_files (subj))
       (call .functions.search_miscfile_dirs (subj))

       (call .hotplugcall.use_fds (subj))

       (call .ip.subj_type_transition (subj))

       (call .kmodloader.subj_type_transition (subj))

       (call .locale.read.subj_type (subj))

       (call .logd.unix_dgram_send (subj))

       (call .module.search_sysfile_dirs (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .netifd.readinherited_fifo_files (subj))
       (call .netifd.dontaudit_readwrite_netlink_kobject_uevent_sockets (subj))
       (call .netifd.dontaudit_readwrite_netlink_route_sockets (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .uci.subj_type_transition (subj))

       (optional sqm_opt_rcsqm
                 (call .rcsqm.use_fds (subj)))

       (optional sqm_opt_xtables
                 (call .xtables.subj_type_transition (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .unbound.control.subj_type_transition (subj)))

(in .file
    (call .unbound.control.obj_type_transition_execfile
          (unconfined.subj_typeattr)))

(in unbound

    (block control

           ;;
           ;; Contexts
           ;;

           (filecon
            "/usr/bin/unbound-control"
            file
            execfile_file_context)

           ;;
           ;; Macros
           ;;

           (macro obj_type_transition_execfile ((type ARG1))
                  (call .file.execfile_obj_type_transition
                        (ARG1 execfile file "unbound-control")))

           ;;
           ;; Policy
           ;;

           (blockinherit .agent.base_template)

           (call .sys.readwriteinherited_fifo_files (subj))
           (call .sys.readwriteinherited_ptydev_chr_files (subj))

           (call .dev.readwriteinherited_ttydev_chr_files (subj))

           (call .file.search_conffile_dirs (subj))

           (call .net.egress_netifs (subj))
           (call .net.sendto_netnodes (subj))
           (call .net.dontaudit_readinherited_procfile_files (subj))

           (call .tmpfile.search_statetmpfile_dirs (subj))

           (call .ubdnscontrol.tcp_connect_netports (subj))

           (call .unbound.odhcpd.use_fds (subj))
           (call .unbound.odhcpd.readinherited_fifo_files (subj))
           (call .unbound.read_statetmpfile_files (subj))
           (call .unbound.search_statetmpfile_dirs (subj))

           (optional unbound_control_opt_luci
                     (call .luci.cgi.writeinherited_fifo_files (subj)))

           (optional unbound_control_opt_odhcpd
                     (call .odhcpd.use_fds (subj))
                     (call .odhcpd.dontaudit_readwrite_netlink_route_sockets
                           (subj)))

           (optional unbound_control_opt_sslcertfile
                     (call .ssl.read.subj_type (subj)))

           (optional unbound_control_opt_ttyd
                     (call .ttyd.readwriteinherited_ptydev_chr_files (subj)))

           (optional unbound_control_opt_uhttpd
                     (call .uhttpd.readinherited_fifo_files (subj)))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .kmodloader.subj_type_transition (subj)))

(in .file
    (call .kmodloader.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .kmodloader.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block kmodloader

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/modules-boot\.d"
        dir
        conffile_file_context)
       (filecon
        "/etc/modules-boot\.d/.*"
        any
        conffile_file_context)

       (filecon
        "/etc/modules\.d"
        dir
        conffile_file_context)
       (filecon
        "/etc/modules\.d/.*"
        any
        conffile_file_context)

       (filecon
        "/usr/bin/kmodloader"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "modules-boot.d"))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "modules.d")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "kmodloader")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.conf.obj_template)

       (allow subj self (capability (sys_admin)))
       (allow subj self (capability2 (syslog)))
       (allow subj self create_unix_dgram_socket)

       (call list_conffile_dirs (subj))
       (call read_conffile_files (subj))
       (call read_conffile_lnk_files (subj))

       (call .sys.loadkernelmodule.subj_type (subj))
       (call .sys.readringbuffer (subj))
       (call .sys.readwriteinherited_ptydev_chr_files (subj))
       (call .sys.search_keyrings (subj))
       (call .sys.writeinherited_fifo_files (subj))

       (call .debug.search_fs_dirs (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))

       (call .file.list_modulesfile_dirs (subj))
       (call .file.modules.load_all_files (subj))
       (call .file.modules.map_all_files (subj))
       (call .file.modules.read_all_files (subj))
       (call .file.search_conffile_dirs (subj))

       (call .firmware.read_miscfile_files (subj))
       (call .firmware.search_miscfile_dirs (subj))

       (call .kmsg.readwrite_nodedev_chr_files (subj))

       (call .logd.unix_dgram_send (subj))

       (call .modules.read_procfile_files (subj))

       (call .netifd.readwriteinherited_fifo_files (subj))
       (call .netifd.dontaudit_readwrite_netlink_kobject_uevent_sockets (subj))
       (call .netifd.dontaudit_readwrite_netlink_route_sockets (subj))

       (call .watchdog.dontaudit_writeinherited_nodedev_chr_files (subj))

       (optional kmodloader_opt_rcboot
                 (call .rcboot.use_fds (subj)))

       (optional kmodloader_opt_rcsqm
                 (call .rcsqm.use_fds (subj)))

       (optional kmodloader_opt_sqm
                 (call .sqm.appendinherited_runtimetmpfile_files (subj)))

       (optional kmodloader_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .irqbalance.subj_type_transition (subj)))

(in .file
    (call .irqbalance.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .irqbalance.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr)))

(block irqbalance

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/run/irqbalance"
        dir
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/irqbalance/.*"
        any
        runtimetmpfile_file_context)

       (filecon
        "/usr/bin/irqbalance"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "irqbalance")))

       (macro obj_type_transition_runtimetmpfile ((type ARG1))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile dir "irqbalance")))

       (macro unix_stream_connect ((type ARG1))
              (call connectto_unix_stream_sockets (ARG1))
              (call search_runtimetmpfile_dirs (ARG1))
              (call write_runtimetmpfile_sock_files (ARG1)))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .tmpfile.runtime.obj_template)

       (allow subj self create_unix_dgram_socket)
       (allow subj self create_unix_stream_stream_socket)

       (call manage_runtimetmpfile_dirs (subj))
       (call manage_runtimetmpfile_sock_files (subj))
       (call obj_type_transition_runtimetmpfile (subj))

       ;; compat with genfs_seclabel_symlinks=0
       (call .sys.read_fs_lnk_files (subj))
       (call .sys.search_fs_dirs (subj))

       (call .bus.list_sysfile_dirs (subj))
       (call .bus.read_sysfile_lnk_files (subj))

       (call .devices.list_sysfile_dirs (subj))
       (call .devices.read_sysfile_files (subj))

       (call .file.search_conffile_dirs (subj))

       (call .interrupts.read_procfile_files (subj))

       (call .irq.readwrite_procfile_files (subj))
       (call .irq.search_procfile_dirs (subj))

       (call .logd.unix_dgram_send (subj))

       (call .stat.read_procfile_files (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .odhcpd.subj_type_transition (subj))
    (call .odhcpd.update.subj_type_transition (subj)))

(in .file
    (call .odhcpd.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .odhcpd.obj_type_transition_hoststmpfile (unconfined.subj_typeattr))
    (call .odhcpd.obj_type_transition_statetmpfile (unconfined.subj_typeattr))
    (call .odhcpd.update.obj_type_transition_execfile
          (unconfined.subj_typeattr)))

(in .uci
    (call .odhcpd.use_fds (subj))
    (call .odhcpd.dontaudit_readwrite_netlink_route_sockets (subj)))

(block odhcpd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/hosts/odhcpd"
        file
        hoststmpfile_file_context)

       (filecon
        "/tmp/lib/odhcpd"
        dir
        statetmpfile_file_context)
       (filecon
        "/tmp/lib/odhcpd/.*"
        any
        statetmpfile_file_context)

       (filecon
        "/usr/bin/odhcpd"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro getattr_execfile_files ((type ARG1))
              (allow ARG1 execfile (file (getattr))))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "odhcpd")))

       (macro obj_type_transition_hoststmpfile ((type ARG1))
              (call .tmpfile.hoststmpfile_obj_type_transition
                    (ARG1 hoststmpfile file "odhcpd"))
              (call .tmpfile.hoststmpfile_obj_type_transition
                    (ARG1 hoststmpfile file "odhcpd.tmp")))

       (macro obj_type_transition_statetmpfile ((type ARG1))
              (call .tmpfile.statetmpfile_obj_type_transition
                    (ARG1 statetmpfile dir "odhcpd")))

       (macro dontaudit_readwrite_netlink_route_sockets ((type ARG1))
              (dontaudit ARG1 subj (netlink_route_socket (read write))))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .tmpfile.hosts.obj_template)
       (blockinherit .tmpfile.state.obj_template)

       (allow subj self (capability (net_admin net_raw)))
       (allow subj self create_netlink_route_socket)
       (allow subj self create_rawip_socket)
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)
       (allow subj self create_unix_stream_socket)
       (allow subj self (netlink_route_socket (nlmsg_read nlmsg_write)))

       (call manage_hoststmpfile_files (subj))
       (call obj_type_transition_hoststmpfile (subj))

       (call manage_statetmpfile_dirs (subj))
       (call manage_statetmpfile_files (subj))
       (call obj_type_transition_statetmpfile (subj))

       (call update.subj_type_transition (subj))

       (call .sys.loadkernelmodule.subj_type (subj))
       (call .sys.requestmodule (subj))
       (call .sys.search_sysctlfile_dirs (subj))

       (call .dhcp.udp_bind_netports (subj))

       (call .file.search_conffile_dirs (subj))

       (call .ipv6.readwrite_sysctlfile_files (subj))
       (call .ipv6.search_sysctlfile_dirs (subj))

       (call .logd.unix_dgram_send (subj))

       (call .net.egress_netifs (subj))
       (call .net.read_procfile_files (subj))
       (call .net.read_procfile_lnk_files (subj))
       (call .net.search_sysctlfile_dirs (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .shell.mapexecute_execfile_files (subj))
       (call .shell.read_execfile_files (subj))

       (call .tmpfile.manage_hoststmpfile_dirs (subj))
       (call .tmpfile.manage_statetmpfile_dirs (subj))
       (call .tmpfile.obj_type_transition_hoststmpfile (subj))
       (call .tmpfile.obj_type_transition_statetmpfile (subj))
       (call .tmpfile.search_runtimetmpfile_dirs (subj))

       (call .ubusd.unix_stream_connect (subj))

       (call .uci.read_conffile_files (subj))
       (call .uci.read_tmpfile_files (subj))
       (call .uci.search_conffile_dirs (subj))
       (call .uci.search_tmpfile_dirs (subj))

       (optional odhcpd_opt_unbound
                 (call .unbound.odhcpd.subj_type_transition (subj))
                 (call .unbound.search_miscfile_dirs (subj)))

       (block update

              ;;
              ;; Contexts
              ;;

              (filecon
               "/usr/bin/odhcpd-update"
               file
               execfile_file_context)

              ;;
              ;; Macros
              ;;

              (macro obj_type_transition_execfile ((type ARG1))
                     (call .file.execfile_obj_type_transition
                           (ARG1 execfile file "odhcpd-update")))

              ;;
              ;; Policy
              ;;

              (blockinherit .agent.base_template)

              (call odhcpd.use_fds (subj))
              (call odhcpd.dontaudit_readwrite_netlink_route_sockets (subj))

              (call .functions.read_miscfile_files (subj))
              (call .functions.search_miscfile_dirs (subj))

              (call .jshn.subj_type_transition (subj))

              (call .libubox.read_datafile_files (subj))
              (call .libubox.search_datafile_dirs (subj))

              (call .net.read_procfile_files (subj))
              (call .net.read_procfile_lnk_files (subj))

              (call .selinux.linked.subj_type (subj))

              (call .shell.execute_execfile_files (subj))

              (call .tmpfile.addname_locktmpfile_dirs (subj))
              (call .tmpfile.manage_locktmpfile_files (subj))

              (call .ubus.subj_type_transition (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev

    (block sandboxexcept

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (typeattributeset
            obj_typeattr
            (and .dev.obj_typeattr
                 (not
                  (.dev.pty.obj_typeattr
                   .dev.stor.obj_typeattr
                   .random.nodedev
                   .mem.nodedev)))))

    (block sandboxopen

           ;;
           ;; Macros
           ;;

           (macro open_all_chr_files ((type ARG1))
                  (allow ARG1 obj_typeattr (chr_file (open))))

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (typeattributeset
            obj_typeattr
            (.null.nodedev
             .ptmx.nodedev
             .tty.nodedev
             .zero.nodedev))))

(in .dev.pty

    (block sandboxexcept

           ;;
           ;; Macros
           ;;

           (macro readwriteinherited_all_chr_files ((type ARG1))
                  (allowx ARG1 obj_typeattr (ioctl chr_file (not (0x5412))))
                  (allow ARG1 obj_typeattr readwriteinherited_chr_file))

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (typeattributeset
            obj_typeattr
            (and .dev.pty.obj_typeattr
                 (not
                  (.sandbox.ptydev))))))

(in .file

    (block sandboxexcept

           ;;
           ;; Macros
           ;;

           (macro watch_all_dirs ((type ARG1))
                  (allow ARG1 obj_typeattr (dir (watch))))

           (macro watch_all_fifo_files ((type ARG1))
                  (allow ARG1 obj_typeattr (fifo_file (watch))))

           (macro watch_all_files ((type ARG1))
                  (allow ARG1 obj_typeattr (file (watch))))

           (macro watch_all_lnk_files ((type ARG1))
                  (allow ARG1 obj_typeattr (lnk_file (watch))))

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (typeattributeset
            obj_typeattr
            (and .file.except.obj_typeattr
                 (not
                  (.kcore.procfile sandboxexception.obj_typeattr)))))

    (block sandboxexception

           ;;
           ;; Macros
           ;;

           (macro getattr_all_dirs ((type ARG1))
                  (allow ARG1 obj_typeattr (dir (getattr))))

           (macro getattr_all_files ((type ARG1))
                  (allow ARG1 obj_typeattr (file (getattr))))

           (macro getattr_all_lnk_files ((type ARG1))
                  (allow ARG1 obj_typeattr (lnk_file (getattr))))

           ;;
           ;; Policy
           ;;

           (blockinherit obj_all_macro_template)))

(in .fs

    (block sandboxexcept

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (typeattributeset
            obj_typeattr
            (and .fs.obj_typeattr
                 (not
                  (sandboxexception.obj_typeattr)))))

    (block sandboxexception

           ;;
           ;; Macros
           ;;

           (macro getattr_all_dirs ((type ARG1))
                  (allow ARG1 obj_typeattr (dir (getattr))))

           (macro getattr_all_files ((type ARG1))
                  (allow ARG1 obj_typeattr (file (getattr))))

           (macro getattr_lnk_all_files ((type ARG1))
                  (allow ARG1 obj_typeattr (lnk_file (getattr))))

           ;;
           ;; Policy
           ;;

           (blockinherit obj_all_macro_template)))

(block sandbox

       ;;
       ;; Macros
       ;;

       (macro getpgid_all ((type ARG1))
              (allow ARG1 subj_typeattr (process (getpgid))))

       (macro obj_type_transition_homefile ((type ARG1)(class ARG2)(name ARG3))
              (call .file.homefile_obj_type_transition
                    (ARG1 homefile ARG2 ARG3)))

       (macro obj_type_transition_ptydev ((type ARG1))
              (call .pts.fs_obj_type_transition
                    (ARG1 ptydev chr_file "*")))

       (macro obj_type_transition_tmpfile ((type ARG1)(class ARG2)(name ARG3))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile ARG2 ARG3)))

       (macro signal_all ((type ARG1))
              (allow ARG1 subj_typeattr (process (signal))))

       (macro subj_type ((type ARG1))
              (typeattributeset subj_typeattr ARG1))

       (macro transition_all ((type ARG1))
              (allow ARG1 subj_typeattr (process (transition))))

       ;;
       ;; Policy
       ;;

       (typeattribute subj_typeattr)

       (blockinherit subj_template)

       (blockinherit .dev.pty.obj_template)
       (blockinherit .file.home.obj_template)
       (blockinherit .tmpfile.obj_template)

       (allow subj_typeattr self
              (process (not (dyntransition execheap execstack getcap setcap
                                           setcurrent setexec share
                                           transition))))
       (allow subj_typeattr self
              (process2 (not (nnp_transition nosuid_transition))))
       (allow subj_typeattr self (allsockets (common)))
       (allow subj_typeattr self (fd (use)))
       (allow subj_typeattr self (key (all)))
       (allow subj_typeattr self (msg (all)))
       (allow subj_typeattr self (msgq (all)))
       (allow subj_typeattr self (sem (all)))
       (allow subj_typeattr self (shm (all)))
       (allow subj_typeattr self (netlink_route_socket (nlmsg_read)))
       (allow subj_typeattr self (packet_socket (map)))
       (allow subj_typeattr self (unix_dgram_socket (sendto)))
       (allow subj_typeattr self
              (unix_stream_socket (accept connectto listen)))

       (allow subj_typeattr self list_dir)
       (allow subj_typeattr self read_lnk_file)
       (allow subj_typeattr self readwrite_fifo_file)
       (allow subj_typeattr self readwrite_file)

       (call manage_homefile (subj_typeattr))
       (call obj_type_transition_homefile (subj_typeattr allfiles "*"))

       (call obj_type_transition_ptydev (subj_typeattr))
       (call readwrite_ptydev_chr_files (subj_typeattr))

       (call manage_tmpfile (subj_typeattr))
       (call obj_type_transition_tmpfile (subj_typeattr allfiles "*"))

       (call .recvfromsendtoassoc.subj_type (subj_typeattr))
       (call .recvpeer.subj_type (subj_typeattr))
       (call .recvsendpacket.subj_type (subj_typeattr))

       (call .sys.readwriteinherited_fifo_files (subj_typeattr))
       (call .sys.sigchld (subj_typeattr))

       (call .dev.sandboxexcept.mapexecute_all_chr_files (subj_typeattr))
       (call .dev.sandboxexcept.readwriteinherited_all_chr_files
             (subj_typeattr))
       (call .dev.sandboxopen.open_all_chr_files (subj_typeattr))
       (call .dev.stor.getattr_all_blk_files (subj_typeattr))
       (call .dev.stor.getattr_all_chr_files (subj_typeattr))

       (call .dev.pty.sandboxexcept.readwriteinherited_all_chr_files
             (subj_typeattr))

       (call .file.deletename_homefile_dirs (subj_typeattr))
       (call .file.getattr_all_sock_files (subj_typeattr))
       (call .file.exec.entrypoint_all_files (subj_typeattr))
       (call .file.exec.execute_all_files (subj_typeattr))
       (call .file.sandboxexcept.list_all_dirs (subj_typeattr))
       (call .file.sandboxexcept.mapexecute_all_files (subj_typeattr))
       (call .file.sandboxexcept.read_all_fifo_files (subj_typeattr))
       (call .file.sandboxexcept.read_all_files (subj_typeattr))
       (call .file.sandboxexcept.read_all_lnk_files (subj_typeattr))
       (call .file.sandboxexcept.watch_all_dirs (subj_typeattr))
       (call .file.sandboxexcept.watch_all_fifo_files (subj_typeattr))
       (call .file.sandboxexcept.watch_all_files (subj_typeattr))
       (call .file.sandboxexcept.watch_all_lnk_files (subj_typeattr))
       (call .file.sandboxexception.getattr_all_dirs (subj_typeattr))
       (call .file.sandboxexception.getattr_all_files (subj_typeattr))
       (call .file.sandboxexception.getattr_all_lnk_files (subj_typeattr))

       (call .fs.getattr_all_filesystems (subj_typeattr))
       (call .fs.sandboxexcept.list_all_dirs (subj_typeattr))
       (call .fs.sandboxexcept.read_all_fifo_files (subj_typeattr))
       (call .fs.sandboxexcept.read_all_files (subj_typeattr))
       (call .fs.sandboxexcept.read_all_lnk_files (subj_typeattr))
       (call .fs.sandboxexception.getattr_all_dirs (subj_typeattr))
       (call .fs.sandboxexception.getattr_all_files (subj_typeattr))
       (call .fs.sandboxexception.getattr_all_lnk_files (subj_typeattr))

       (call .kcore.getattr_procfile_files (subj_typeattr))

       (call .mem.getattr_nodedev_chr_files (subj_typeattr))

       ;; RELRO protection
       (call .mountroot.use_fds (subj_typeattr))

       (call .random.read_nodedev_chr_files (subj_typeattr))

       (call .shadow.getattr_authfile_files (subj_typeattr))

       (call .subj.useinteractivefd.subj_type (subj_typeattr))
       (call .subj.dontaudit_getattr_all_sockets (subj_typeattr))
       (call .subj.dontaudit_ps_all (subj_typeattr))

       (call .tmp.deletename_fs_dirs (subj_typeattr))

       (block subj_template

              ;;
              ;; Macros
              ;;

              (macro getpgid ((type ARG1))
                     (allow ARG1 subj (process (getpgid))))

              (macro signal ((type ARG1))
                     (allow ARG1 subj (process (signal))))

              (macro transition ((type ARG1))
                     (allow ARG1 subj (process (transition))))

              ;;
              ;; Policy
              ;;

              (blockabstract subj_template)

              (blockinherit .subj.subj_base_template)

              (call .sandbox.subj_type (subj)))

       (block net

              ;;
              ;; Policy
              ;;

              (blockinherit .sandbox.subj_template)

              (call .net.egress_netifs (subj))
              (call .net.port.tcp_connect_all_netports (subj))
              (call .net.port.unreserved.tcp_bind_all_netports (subj))
              (call .net.port.unreserved.udp_bind_all_netports (subj))
              (call .net.sendto_netnodes (subj))
              (call .net.tcp_bind_netnodes (subj))
              (call .net.udp_bind_netnodes (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .igmpproxy.subj_type_transition (subj)))

(in .file
    (call .igmpproxy.obj_type_transition_conftmpfile
          (unconfined.subj_typeattr))
    (call .igmpproxy.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block igmpproxy

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/etc/igmpproxy\.conf"
        file
        conftmpfile_file_context)

       (filecon
        "/usr/bin/igmpproxy"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conftmpfile ((type ARG1))
              (call .tmpfile.conftmpfile_obj_type_transition
                    (ARG1 conftmpfile file "igmpproxy.conf")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "igmpproxy")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .tmpfile.conf.obj_template)

       (allow subj self (capability (net_raw)))
       (allow subj self create_rawip_socket)
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)

       (call read_conftmpfile_files (subj))

       (call .sys.readwriteinherited_ptydev_chr_files (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))

       (call .file.search_conffile_dirs (subj))

       (call .logd.unix_dgram_send (subj))

       (call .net.egress_netifs (subj))
       (call .net.sendto_netnodes (subj))

       (call .tmpfile.search_conftmpfile_dirs (subj))

       (optional igmpproxy_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .xtables.subj_type_transition (subj)))

(in .file
    (call .xtables.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .xtables.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr)))

(block xtables

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/run/xtables\.lock"
        file
        runtimetmpfile_file_context)

       (filecon
        "/usr/bin/xtables-legacy-multi"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "xtables-legacy-multi")))

       (macro obj_type_transition_runtimetmpfile ((type ARG1))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile file "xtables.lock")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.misc.obj_template)
       (blockinherit .tmpfile.runtime.obj_template)

       (allow subj self (capability (net_admin net_raw)))
       (allow subj self create_rawip_socket)
       (allow subj self create_udp_socket)

       (call manage_runtimetmpfile_files (subj))
       (call obj_type_transition_runtimetmpfile (subj))

       (call .sys.readwriteinherited_ptydev_chr_files (subj))
       (call .sys.requestmodule (subj))
       (call .sys.writeinherited_fifo_files (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .net.egress_netifs (subj))
       (call .net.read_procfile_files (subj))
       (call .net.read_procfile_lnk_files (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .proc.getattr_filesystems (subj))

       (call .resolv.read.subj_type (subj))

       (call .xattr.associate_filesystems (miscfile))

       (optional xtables_opt_acme
                 (call .acme.readwriteinherited_fifo_files (subj)))

       (optional xtables_opt_fw3
                 (call .fw3.use_fds (subj))
                 ;; /tmp/run/fw3.lock
                 (call .fw3.dontaudit_writeinherited_runtimetmpfile_files
                       (subj)))

       (optional xtables_opt_rcfirewall
                 (call .rcfirewall.use_fds (subj)))

       (optional xtables_opt_sqm
                 (call .sqm.readwriteinherited_fifo_files (subj)))

       (optional xtables_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .iw.subj_type_transition (subj)))

(in .file
    (call .iw.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block iw

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/iw"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "iw")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (allow subj self (capability (net_admin)))
       (allow subj self create_netlink_generic_socket)
       (allow subj self create_unix_dgram_socket)

       (call .sys.loadkernelmodule.subj_type (subj))
       ;; compat with genfs_seclabel_symlinks=0
       (call .sys.read_fs_lnk_files (subj))
       (call .sys.readwriteinherited_ptydev_chr_files (subj))
       (call .sys.requestmodule (subj))
       (call .sys.search_fs_dirs (subj))
       (call .sys.writeinherited_fifo_files (subj))

       (call .class.read_sysfile_lnk_files (subj))
       (call .class.search_sysfile_dirs (subj))

       (call .debug.search_fs_dirs (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))

       (call .devices.read_sysfile_files (subj))
       (call .devices.search_sysfile_dirs (subj))

       (call .file.search_conffile_dirs (subj))

       (call .netifd.readwriteinherited_fifo_files (subj))
       (call .netifd.dontaudit_readwrite_netlink_kobject_uevent_sockets (subj))
       (call .netifd.dontaudit_readwrite_netlink_route_sockets (subj))

       (call .wifi.writeinherited_fifo_files (subj))

       (optional iw_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .uhttpd.subj_type_transition (subj)))

(in .file
    (call .uhttpd.conffile_obj_type_transition_certfile
          (unconfined.subj_typeattr))
    (call .uhttpd.obj_type_transition_conftmpfile (unconfined.subj_typeattr))
    (call .uhttpd.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block uhttpd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/uhttpd\.crt"
        file
        certfile_file_context)
       (filecon
        "/etc/uhttpd\.crt\..*"
        file
        certfile_file_context)
       (filecon
        "/etc/uhttpd\.key"
        file
        certfile_file_context)
       (filecon
        "/etc/uhttpd\.key\..*"
        file
        certfile_file_context)

       (filecon
        "/tmp/etc/uhttpd"
        dir
        conftmpfile_file_context)
       (filecon
        "/tmp/etc/uhttpd/.*"
        any
        conftmpfile_file_context)

       (filecon
        "/usr/bin/uhttpd"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro conffile_obj_type_transition_certfile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 certfile file "uhttpd.crt"))
              (call .file.conffile_obj_type_transition
                    (ARG1 certfile file "uhttpd.crt.new"))
              (call .file.conffile_obj_type_transition
                    (ARG1 certfile file "uhttpd.key"))
              (call .file.conffile_obj_type_transition
                    (ARG1 certfile file "uhttpd.key.new")))

       (macro getattr_execfile_files ((type ARG1))
              (allow ARG1 execfile (file (getattr))))

       (macro obj_type_transition_conftmpfile ((type ARG1))
              (call .tmpfile.conftmpfile_obj_type_transition
                    (ARG1 conftmpfile dir "uhttpd")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "uhttpd")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.cert.obj_template)
       (blockinherit .tmpfile.conf.obj_template)

       (allow subj self create_unix_stream_socket)

       (call read_certfile_files (subj))

       (call manage_conftmpfile_dirs (subj))
       (call obj_type_transition_conftmpfile (subj))

       (call .sys.writeinherited_fifo_files (subj))

       (call .cgiio.subj_type_transition (subj))

       (call .file.read_cgiscriptfile_lnk_files (subj))
       (call .file.search_cgiscriptfile_dirs (subj))
       (call .file.search_conffile_dirs (subj))

       (call .http.tcp_bind_netports (subj))

       (call .lua.execute_execfile_files (subj))

       (call .net.egress_netifs (subj))
       (call .net.port.unreserved.tcp_bind_all_netports (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.tcp_bind_netnodes (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .tmpfile.search_runtimetmpfile_dirs (subj))

       (call .ubusd.unix_stream_connect (subj))

       (call .www.list_miscfile_dirs (subj))
       (call .www.read_miscfile_files (subj))
       (call .www.read_miscfile_lnk_files (subj))

       (optional uhttpd_opt_acme
                 (call .acme.read_conffile_files (subj))
                 (call .acme.read_conffile_lnk_files (subj))
                 (call .acme.search_conffile_dirs (subj)))

       (optional uhttpd_opt_sslcertfile
                 (call .ssl.read.subj_type (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .mkfsf2fs.subj_type_transition (subj)))

(in .file
    (call .mkfsf2fs.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block mkfsf2fs

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/mkfs\.f2fs"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "mkfs.f2fs")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (allow subj self (capability (sys_rawio)))
       (allow subj self create_unix_stream_socket)

       ;; compat with genfs_seclabel_symlinks=0
       (call .sys.read_fs_lnk_files (subj))
       (call .sys.search_fs_dirs (subj))
       (call .sys.writeinherited_fifo_files (subj))
       (call .sys.readwriteinherited_ptydev_chr_files (subj))

       (call .dev.read_sysfile_lnk_files (subj))
       (call .dev.readwriteinherited_ttydev_chr_files (subj))
       (call .dev.search_sysfile_dirs (subj))
       (call .dev.stor.readwrite.subj_type (subj))

       (call .devices.read_sysfile_files (subj))
       (call .devices.search_sysfile_dirs (subj))

       (call .file.read_conffile_lnk_files (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .version.read_procfile_files (subj))

       (call .watchdog.dontaudit_writeinherited_nodedev_chr_files (subj))

       (optional mkfsf2fs_opt_dmstordev
                 (call .dm.readwrite_stordev_blk_files (subj)))

       (optional mkfsf2fs_opt_loopstordev
                 (call .loop.readwrite_stordev_blk_files (subj)))

       (optional mkfsf2fs_opt_mmcstordev
                 (call .mmc.readwrite_stordev_blk_files (subj)))

       (optional mkfsf2fs_opt_nvmestordev
                 (call .nvme.readwrite_stordev_blk_files (subj)))

       (optional mkfsf2fs_opt_sdstordev
                 (call .sd.readwrite_stordev_blk_files (subj)))

       (optional mkfsf2fs_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj)))

       (optional mkfsf2fs_opt_vdstordev
                 (call .vd.readwrite_stordev_blk_files (subj)))

       (optional mkfsf2fs_opt_zramblocksysfile
                 (call .zram.read_sysfile_files (subj))
                 (call .zram.search_sysfile_dirs (subj)))

       (optional mkfsf2fs_opt_zramstordev
                 (call .zram.readwrite_stordev_blk_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .pppd.subj_type_transition (subj)))

(in .file
    (call .pppd.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .pppd.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .pppd.libfile_obj_type_transition_miscfile
          (unconfined.subj_typeattr)))

(block pppd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/ppp"
        dir
        conffile_file_context)
       (filecon
        "/etc/ppp/.*"
        any
        conffile_file_context)

       (filecon
        "/tmp/run/ppp-.*\.pid"
        file
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/pppoe-.*\.pid"
        file
        runtimetmpfile_file_context)

       (filecon
        "/usr/bin/pppd"
        file
        execfile_file_context)

       (filecon
        "/usr/lib/pppd"
        dir
        miscfile_file_context)
       (filecon
        "/usr/lib/pppd/.*"
        any
        miscfile_file_context)

       ;;
       ;; Macro
       ;;

       (macro libfile_obj_type_transition_miscfile ((type ARG1))
              (call .file.libfile_obj_type_transition
                    (ARG1 miscfile dir "pppd")))

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "ppp")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "pppd")))

       (macro obj_type_transition_runtimetmpfile
              ((type ARG1)(class ARG2)(name ARG3))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile ARG2 ARG3)))

       (macro dontaudit_readwrite_packet_sockets ((type ARG1))
              (dontaudit ARG1 subj readwrite_packet_socket))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.conf.obj_template)
       (blockinherit .file.misc.obj_template)
       (blockinherit .tmpfile.runtime.obj_template)

       (allow subj self (capability (net_admin net_raw setgid setuid)))
       (allow subj self create_netlink_route_socket)
       (allow subj self create_packet_socket)
       (allow subj self create_pppox_socket)
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)
       (allow subj self (netlink_route_socket (nlmsg_write)))

       (call read_conffile_files (subj))
       (call read_conffile_lnk_files (subj))
       (call search_conffile_dirs (subj))

       (call mapexecute_miscfile_files (subj))
       (call read_miscfile_files (subj))
       (call search_miscfile_dirs (subj))

       (call manage_runtimetmpfile_files (subj))
       (call obj_type_transition_runtimetmpfile (subj file "*"))

       (call .sys.requestmodule (subj))

       ;; /dev/ttyUSBN used by pppd to send AT commands to modem
       (call .dev.readwrite_ttydev_chr_files (subj))

       (call .fw3.subj_type_transition (subj))

       (call .jshn.subj_type_transition (subj))

       (call .libubox.read_datafile_files (subj))
       (call .libubox.search_datafile_dirs (subj))

       (call .logd.unix_dgram_send (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .net.read_procfile_files (subj))
       (call .net.read_procfile_lnk_files (subj))

       (call .netifd.execute_miscfile_files (subj))
       (call .netifd.search_miscfile_dirs (subj))
       (call .netifd.readwriteinherited_fifo_files (subj))
       (call .netifd.dontaudit_readwrite_netlink_kobject_uevent_sockets (subj))
       (call .netifd.dontaudit_readwrite_netlink_route_sockets (subj))

       (call .ppp.readwrite_nodedev_chr_files (subj))

       (call .resolv.manage_tmpfile_files (subj))
       (call .resolv.obj_type_transition_tmpfile (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .tmpfile.deletename_runtimetmpfile_dirs (subj))

       (call .ubus.subj_type_transition (subj))

       (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .logd.subj_type_transition (subj)))

(in .file
    (call .logd.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .logd.tmp_obj_type_transition_miscfile (unconfined.subj_typeattr)))

(block logd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/log"
        socket
        miscfile_file_context)

       (filecon
        "/usr/bin/logd"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro getattr_miscfile_sock_files ((type ARG1))
              (allow ARG1 miscfile (sock_file (getattr))))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "logd")))

       (macro tmp_obj_type_transition_miscfile ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 miscfile sock_file "log")))

       (macro unix_dgram_send ((type ARG1))
              (call sendto_unix_dgram_sockets (ARG1))
              (call write_miscfile_sock_files (ARG1)))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.misc.obj_template)

       (allow subj self (capability (setuid)))
       (allow subj self (capability2 (syslog)))
       (allow subj self create_unix_dgram_socket)
       (allow subj self create_unix_stream_socket)

       (call manage_miscfile_sock_files (subj))
       (call tmp_obj_type_transition_miscfile (subj))

       (call .sys.modifyringbuffer (subj))

       (call .file.search_conffile_dirs (subj))

       (call .kmsg.read_procfile_files (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .tmp.associate_filesystems (miscfile))
       (call .tmp.deletename_fs_dirs (subj))

       (call .tmpfile.search_runtimetmpfile_dirs (subj))

       (call .ubusd.unix_stream_connect (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .sftpserver.subj_type_transition (subj)))

(in .file
    (call .sftpserver.libfile_obj_type_transition_execfile
          (unconfined.subj_typeattr)))

(block sftpserver

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/lib/sftp-server"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro libfile_obj_type_transition_execfile ((type ARG1))
              (call .file.libfile_obj_type_transition
                    (ARG1 execfile file "sftp-server")))

       (macro obj_type_transition_tmpfile ((type ARG1)(class ARG2)(name ARG3))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile ARG2 ARG3)))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .tmpfile.obj_template)

       (call manage_tmpfile_dirs (subj))
       (call manage_tmpfile_files (subj))
       (call manage_tmpfile_lnk_files (subj))
       (call obj_type_transition_tmpfile (subj dir "*"))
       (call obj_type_transition_tmpfile (subj file "*"))
       (call obj_type_transition_tmpfile (subj lnk_file "*"))

       (call .file.manage_homefile_dirs (subj))
       (call .file.manage_homefile_files (subj))
       (call .file.manage_homefile_lnk_files (subj))
       (call .file.read_conffile_lnk_files (subj))
       (call .file.dontaudit_manage_all_dirs (subj))
       (call .file.dontaudit_manage_all_files (subj))
       (call .file.dontaudit_manage_all_lnk_files (subj))

       (call .locale.read.subj_type (subj))

       (call .mnt.search_miscfile_dirs (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .tmp.deletename_fs_dirs (subj))

       (optional sftpserver_opt_dropbear
                 (call .dropbear.readwriteinherited_fifo_files (subj)))

       (optional sftpserver_opt_sslcertfile
                 (call .ssl.read.subj_type (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .hotplugcall

    ;;
    ;; installs a hotplug script that runs /etc/init.d/unbound
    ;; these rules are needed when initscripts are not targeted
    ;;

    (allow subj self (capability (chown fowner fsetid sys_ptrace)))

    (call .proc.list_fs_dirs (subj))

    (call .resolv.manage_tmpfile_files (subj))
    (call .resolv.obj_type_transition_tmpfile (subj))

    (call .subj.read_state_all (subj))

    (call .tmp.manage_fs_lnk_files (subj))
    (call .tmp.deletename_fs_dirs (subj))

    (call .unbound.execute_execfile_files (subj))
    (call .unbound.list_conffile_dirs (subj))
    (call .unbound.read_conffile_files (subj))
    (call .unbound.read_miscfile_files (subj))
    (call .unbound.search_miscfile_dirs (subj))
    (call .unbound.setattr_statetmpfile_dirs (subj))

    (optional unboundhotplug_opt_sslcertfile
              (call .ssl.read.subj_type (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .ntpdhotplug.subj_type_transition (subj)))

(in .file
    (call .ntpdhotplug.obj_type_transition_execfile
          (unconfined.subj_typeattr)))

(block ntpdhotplug

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/ntpd-hotplug"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ntpd-hotplug")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (call .sys.dontaudit_readwrite_udp_sockets (subj))

       (call .hotplugcall.nnptransition (subj))
       (call .hotplugcall.subj_type_transition (subj))

       (call .jshn.nnptransition (subj))
       (call .jshn.subj_type_transition (subj))

       (call .libubox.read_datafile_files (subj))
       (call .libubox.search_datafile_dirs (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .tmpfile.search_conftmpfile_dirs (subj))
       (call .tmpfile.search_statetmpfile_dirs (subj))

       (call .ubus.nnptransition (subj))
       (call .ubus.subj_type_transition (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .validatedata.subj_type_transition (subj)))

(in .file
    (call .validatedata.obj_type_transition_execfile
          (unconfined.subj_typeattr)))

(block validatedata

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/validate_data"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "validate_data")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (call .sys.readwriteinherited_fifo_files (subj))

       (call .file.search_conffile_dirs (subj))

       (call .uci.read_conffile_files (subj))
       (call .uci.read_tmpfile_files (subj))
       (call .uci.search_conffile_dirs (subj))
       (call .uci.search_tmpfile_dirs (subj))

       (optional validatedata_opt_acme
                 (call .acme.getattr_conffile_files (subj))
                 (call .acme.read_conffile_lnk_files (subj))
                 (call .acme.search_conffile_dirs (subj)))

       (optional validatedata_opt_initscript
                 (call .initscript.writeinherited_all_fifo_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .unbound.subj_type_transition (subj)))

(in .file
    (call .unbound.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .unbound.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .unbound.obj_type_transition_miscfile (unconfined.subj_typeattr))
    (call .unbound.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr))
    (call .unbound.obj_type_transition_statetmpfile
          (unconfined.subj_typeattr))
    (call .unbound.obj_type_transition_tmpfile
          (unconfined.subj_typeattr file "unbound_odhcpd.lock"))
    (call .unbound.odhcpd.obj_type_transition_execfile
          (unconfined.subj_typeattr)))

(in .uci
    (call .unbound.odhcpd.use_fds (subj))
    (call .unbound.odhcpd.writeinherited_fifo_files (subj)))

(block unbound

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/unbound"
        dir
        conffile_file_context)
       (filecon
        "/etc/unbound/.*"
        any
        conffile_file_context)

       (filecon
        "/tmp/unbound_odhcpd\.lock"
        file
        tmpfile_file_context)
       (filecon
        "/tmp/unbound_odhcpd\.lock\..*"
        file
        tmpfile_file_context)

       (filecon
        "/tmp/lib/unbound"
        dir
        statetmpfile_file_context)
       (filecon
        "/tmp/lib/unbound/.*"
        any
        statetmpfile_file_context)

       (filecon
        "/tmp/run/unbound\.pid"
        file
        runtimetmpfile_file_context)

       (filecon
        "/usr/bin/unbound"
        file
        execfile_file_context)

       (filecon
        "/usr/lib/unbound"
        dir
        miscfile_file_context)
       (filecon
        "/usr/lib/unbound/.*"
        any
        miscfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "unbound")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "unbound")))

       (macro obj_type_transition_miscfile ((type ARG1))
              (call .file.libfile_obj_type_transition
                    (ARG1 miscfile dir "unbound")))

       (macro obj_type_transition_runtimetmpfile ((type ARG1))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile file "unbound.pid")))

       (macro obj_type_transition_statetmpfile ((type ARG1))
              (call .tmpfile.statetmpfile_obj_type_transition
                    (ARG1 statetmpfile dir "unbound")))

       (macro setattr_statetmpfile_dirs ((type ARG1))
              (allow ARG1 statetmpfile (dir (setattr))))

       (macro obj_type_transition_tmpfile ((type ARG1)(class ARG2)(name ARG3))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile ARG2 ARG3)))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.conf.obj_template)
       (blockinherit .file.misc.obj_template)
       (blockinherit .tmpfile.runtime.obj_template)
       (blockinherit .tmpfile.state.obj_template)
       (blockinherit .tmpfile.obj_template)

       (allow subj self
              (capability (net_admin setgid setuid sys_chroot sys_resource)))
       (allow subj self (process (setrlimit)))
       (allow subj self create_unix_dgram_socket)
       (allow subj self create_unix_stream_socket)

       (call manage_runtimetmpfile_files (subj))
       (call obj_type_transition_runtimetmpfile (subj))

       (call manage_statetmpfile_dirs (subj))
       (call manage_statetmpfile_files (subj))
       (call obj_type_transition_statetmpfile (subj))

       (call .sys.loadkernelmodule.subj_type (subj))
       (call .sys.requestmodule (subj))
       (call .sys.writeinherited_fifo_files (subj))

       (call .dns.tcp_bind_netports (subj))
       (call .dns.tcp_connect_netports (subj))
       (call .dns.udp_bind_netports (subj))

       (call .file.read_conffile_lnk_files (subj))

       (call .locale.read.subj_type (subj))

       (call .logd.unix_dgram_send (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .net.egress_netifs (subj))
       (call .net.port.unreserved.udp_bind_all_netports (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.tcp_bind_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .tmp.associate_filesystems (miscfile))

       (call .tmpfile.deletename_runtimetmpfile_dirs (subj))

       (call .ubdnscontrol.tcp_bind_netports (subj))

       (optional unbound_opt_luci
                 (call .luci.cgi.writeinherited_fifo_files (subj)))

       (optional unbound_opt_rcunbound
                 (call .rcunbound.use_fds (subj))
                 (call .rcunbound.writeinherited_fifo_files (subj)))

       (optional unbound_opt_sslcertfile
                 (call .ssl.read.subj_type (subj)))

       (optional unbound_opt_uhttpd
                 (call .uhttpd.readinherited_fifo_files (subj)))

       (block odhcpd

              ;;
              ;; Contexts
              ;;

              (filecon
               "/usr/lib/unbound/odhcpd\.sh"
               file
               execfile_file_context)

              ;;
              ;; Macros
              ;;

              (macro obj_type_transition_execfile ((type ARG1))
                     (call .unbound.miscfile_obj_type_transition
                           (ARG1 execfile file "odhcpd.sh")))

              ;;
              ;; Policy
              ;;

              (blockinherit .agent.base_template)

              (allow subj self (capability (dac_override net_admin)))
              (allow subj self create_netlink_route_socket)
              (allow subj self create_unix_dgram_socket)
              (allow subj self (netlink_route_socket (nlmsg_read)))

              (call manage_statetmpfile_files (subj))
              (call manage_tmpfile_files (subj))
              (call obj_type_transition_tmpfile
                    (subj file "unbound_odhcpd.lock"))
              (call obj_type_transition_statetmpfile (subj))
              (call read_miscfile_files (subj))
              (call readwrite_statetmpfile_dirs (subj))
              (call search_miscfile_dirs (subj))

              (call .sys.list_rootfile_dirs (subj))
              ;; busybox ip builtin: netdev-br-lan
              (call .sys.loadkernelmodule.subj_type (subj))
              (call .sys.requestmodule (subj))

              (call .file.read_conffile_lnk_files (subj))

              (call .functions.read_miscfile_files (subj))
              (call .functions.search_miscfile_dirs (subj))

              (call .ip.subj_type_transition (subj))

              (call .locale.read.subj_type (subj))

              (call .net.dontaudit_readinherited_procfile_files (subj))

              (call .selinux.linked.subj_type (subj))

              (call .shell.execute_execfile_files (subj))

              (call .tmp.deletename_fs_dirs (subj))

              (call .uci.subj_type_transition (subj))

              (optional unbound_odhcpd_opt_odhcpd
                        (call .odhcpd.read_statetmpfile_files (subj))
                        (call .odhcpd.search_statetmpfile_dirs (subj))
                        (call .odhcpd.use_fds (subj))
                        (call .odhcpd.dontaudit_readwrite_netlink_route_sockets
                              (subj)))

              (optional unbound_odhcpd_opt_unboundcontrol
                        (call .unbound.control.subj_type_transition (subj)))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .reloadconfig.subj_type_transition (subj)))

(in .file
    (call .reloadconfig.obj_type_transition_execfile
          (unconfined.subj_typeattr))
    (call .reloadconfig.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr)))

(block reloadconfig

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/run/config\.check"
        dir
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/config\.check/.*"
        any
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/config\.md5"
        file
        runtimetmpfile_file_context)

       (filecon
        "/usr/bin/reload_config"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "reload_config")))

       (macro obj_type_transition_runtimetmpfile ((type ARG1))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile dir "config.check"))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile file "config.md5")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .tmpfile.runtime.obj_template)

       (call manage_runtimetmpfile_dirs (subj))
       (call manage_runtimetmpfile_files (subj))
       (call obj_type_transition_runtimetmpfile (subj))

       (call .sys.writeinherited_fifo_files (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .tmpfile.deletename_runtimetmpfile_dirs (subj))

       (call .uci.defaults.read_conffile_files (subj))
       (call .uci.defaults.search_conffile_dirs (subj))
       (call .uci.list_conffile_dirs (subj))
       (call .uci.read_conffile_files (subj))
       (call .uci.subj_type_transition (subj))

       (optional reloadconfig_opt_rcboot
                 (call .rcboot.use_fds (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .tinyproxy.subj_type_transition (subj)))

(in .file
    (call .tinyproxy.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .tinyproxy.obj_type_transition_conftmpfile
          (unconfined.subj_typeattr))
    (call .tinyproxy.obj_type_transition_datafile (unconfined.subj_typeattr))
    (call .tinyproxy.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .tinyproxy.obj_type_transition_logtmpfile
          (unconfined.subj_typeattr)))

(block tinyproxy

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/tinyproxy"
        dir
        conffile_file_context)
       (filecon
        "/etc/tinyproxy/.*"
        any
        conffile_file_context)

       (filecon
        "/tmp/etc/tinyproxy\.conf"
        file
        conftmpfile_file_context)
       (filecon
        "/tmp/etc/tinyproxy\.conf\..*"
        file
        conftmpfile_file_context)

       (filecon
        "/usr/share/tinyproxy"
        dir
        datafile_file_context)
       (filecon
        "/usr/share/tinyproxy/.*"
        any
        datafile_file_context)

       (filecon
        "/tmp/log/tinyproxy\.log"
        file
        logtmpfile_file_context)
       (filecon
        "/tmp/log/tinyproxy\.log\..*"
        file
        logtmpfile_file_context)

       (filecon
        "/tmp/tinyproxy\.shared\..*"
        file
        tmpfile_file_context)

       (filecon
        "/usr/bin/tinyproxy"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro map_tmpfile_files ((type ARG1))
              (allow ARG1 tmpfile (file (map))))

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "tinyproxy")))

       (macro obj_type_transition_conftmpfile ((type ARG1))
              (call .tmpfile.conftmpfile_obj_type_transition
                    (ARG1 conftmpfile file "tinyproxy.conf")))

       (macro obj_type_transition_datafile ((type ARG1))
              (call .file.datafile_obj_type_transition
                    (ARG1 datafile dir "tinyproxy")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "tinyproxy")))

       (macro obj_type_transition_logtmpfile ((type ARG1))
              (call .tmpfile.logtmpfile_obj_type_transition
                    (ARG1 logtmpfile file "tinyproxy.log")))

       (macro obj_type_transition_tmpfile ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile file "*")))

       (macro setattr_logtmpfile_files ((type ARG1))
              (allow ARG1 logtmpfile (file (setattr))))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.conf.obj_template)
       (blockinherit .file.data.obj_template)
       (blockinherit .tmpfile.conf.obj_template)
       (blockinherit .tmpfile.log.obj_template)
       (blockinherit .tmpfile.obj_template)

       (allow subj self (capability (setgid setuid)))
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)

       (call read_conffile_files (subj))
       (call search_conffile_dirs (subj))

       (call read_conftmpfile_files (subj))

       (call read_datafile_files (subj))
       (call search_datafile_dirs (subj))

       (call append_logtmpfile_files (subj))
       (call read_logtmpfile_files (subj))

       (call manage_tmpfile_files (subj))
       (call map_tmpfile_files (subj))
       (call obj_type_transition_tmpfile (subj))

       (call .http.tcp_connect_netports (subj))

       (call .httpproxy.tcp_bind_netports (subj))

       (call .locale.read.subj_type (subj))

       (call .logd.unix_dgram_send (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .net.egress_netifs (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.tcp_bind_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .resolv.read.subj_type (subj))

       (call .tmp.deletename_fs_dirs (subj))

       (call .tmpfile.search_conftmpfile_dirs (subj))
       (call .tmpfile.search_logtmpfile_dirs (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .blockmount.subj_type_transition (subj)))

(in .file
    (call .blockmount.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .blockmount.obj_type_transition_tmpfile
          (unconfined.subj_typeattr dir "extroot"))
    (call .blockmount.obj_type_transition_tmpfile
          (unconfined.subj_typeattr dir "ubifs_cfg")))

(block blockmount

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/block"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro auditexecute_execfile_files ((type ARG1))
              (allow ARG1 execfile (file (getattr execute))))

       (macro mounton_tmpfile_dirs ((type ARG1))
              (allow ARG1 tmpfile (dir (getattr mounton))))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "block")))

       (macro obj_type_transition_tmpfile ((type ARG1)(class ARG2)(name ARG3))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile ARG2 ARG3)))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .tmpfile.obj_template)

       (allow subj self (capability (mknod sys_admin sys_resource)))
       (allow subj self (capability2 (syslog)))
       (allow subj self create_unix_dgram_socket)
       (allow subj self create_unix_stream_socket)

       (call manage_tmpfile_dirs (subj))
       (call mounton_tmpfile_dirs (subj))
       (call obj_type_transition_tmpfile (subj dir "*"))

       (call .sys.loadkernelmodule.subj_type (subj))
       ;; compat with genfs_seclabel_symlinks=0
       (call .sys.read_fs_lnk_files (subj))
       (call .sys.readringbuffer (subj))
       (call .sys.requestmodule (subj))
       (call .sys.search_fs_dirs (subj))
       (call .sys.setsched (subj)) ;; might be able to dontaudit this (could be mount related)
       (call .sys.writeinherited_fifo_files (subj))

       (call .block.read_sysfile_lnk_files (subj))
       (call .block.search_sysfile_dirs (subj))

       (call .class.list_sysfile_dirs (subj))
       (call .class.read_sysfile_files (subj))
       (call .class.read_sysfile_lnk_files (subj))

       (call .debug.search_fs_dirs (subj))

       (call .dev.list_sysfile_dirs (subj))
       (call .dev.read_sysfile_lnk_files (subj))
       (call .dev.stor.readwrite.subj_type (subj))

       (call .devices.list_sysfile_dirs (subj))
       (call .devices.read_sysfile_files (subj))

       (call .file.mounton_homefile_dirs (subj))
       (call .file.search_conffile_dirs (subj))

       (call .filesystems.read_procfile_files (subj))

       (call .hotplugcall.use_fds (subj))

       (call .kmsg.readwrite_nodedev_chr_files (subj))

       (call .logd.unix_dgram_send (subj))

       (call .loopctl.read_nodedev_chr_files (subj))

       (call .mnt.manage_miscfile_dirs (subj))
       (call .mnt.mounton_miscfile_dirs (subj))

       (call .mtd.read_procfile_files (subj))

       (call .overlay.mounton_miscfile_dirs (subj))
       (call .overlay.manage_miscfile_dirs (subj))
       (call .overlay.manage_miscfile_files (subj))
       (call .overlay.obj_type_transition_miscfile (subj))

       (call .tmp.deletename_fs_dirs (subj))

       (call .tmpfile.search_runtimetmpfile_dirs (subj))

       (call .ubusd.unix_stream_connect (subj))

       ;; initial block detect > /etc/config/fstab
       (call .uci.readwrite_conffile_files (subj))
       (call .uci.read_tmpfile_files (subj))
       (call .uci.search_conffile_dirs (subj))
       (call .uci.search_tmpfile_dirs (subj))

       (call .watchdog.dontaudit_writeinherited_nodedev_chr_files (subj))

       (call .xattr.mount_filesystems (subj))
       (call .xattr.unmount_filesystems (subj))

       (optional blockmount_opt_hdstordev
                 (call .hd.create_stordev_blk_files (subj))
                 (call .hd.obj_type_transition_stordev (subj))
                 (call .hd.readwrite_stordev_blk_files (subj)))

       (optional blockmount_opt_loopstordev
                 (call .loop.create_stordev_blk_files (subj))
                 (call .loop.obj_type_transition_stordev (subj))
                 (call .loop.readwrite_stordev_blk_files (subj)))

       (optional blockmount_opt_mmcstordev
                 (call .mmc.create_stordev_blk_files (subj))
                 (call .mmc.obj_type_transition_stordev (subj))
                 (call .mmc.read_stordev_chr_files (subj))
                 (call .mmc.readwrite_stordev_blk_files (subj)))

       (optional blockmount_opt_mtdstordev
                 (call .mtd.create_stordev_blk_files (subj))
                 (call .mtd.obj_type_transition_stordev (subj))
                 (call .mtd.read_stordev_chr_files (subj))
                 (call .mtd.readwrite_stordev_blk_files (subj)))

       (optional blockmount_opt_nvmestordev
                 (call .nvme.create_stordev_blk_files (subj))
                 (call .nvme.obj_type_transition_stordev (subj))
                 (call .nvme.readwrite_stordev_blk_files (subj)))

       (optional blockmount_opt_rcblockd
                 (call .rcblockd.use_fds (subj)))

       (optional blockmount_opt_rcboot
                 (call .rcboot.use_fds (subj)))

       (optional blockmount_opt_rcfstab
                 (call .rcfstab.use_fds (subj)))

       (optional blockmount_opt_sdstordev
                 (call .sd.create_stordev_blk_files (subj))
                 (call .sd.obj_type_transition_stordev (subj))
                 (call .sd.readwrite_stordev_blk_files (subj)))

       (optional blockmount_opt_vdstordev
                 (call .vd.create_stordev_blk_files (subj))
                 (call .vd.obj_type_transition_stordev (subj))
                 (call .vd.readwrite_stordev_blk_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .luci.bwc.subj_type_transition (subj))
    (call .luci.cgi.subj_type_transition (subj))
    (call .luci.peeraddr.subj_type_transition (subj))
    (call .luci.reload.subj_type_transition (subj))
    (call .luci.subj_type_transition (subj)))

(in .file
    (call .luci.bwc.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .luci.bwc.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr))
    (call .luci.bwc.obj_type_transition_statetmpfile
          (unconfined.subj_typeattr))
    (call .luci.cgi.obj_type_transition_cgiscriptfile
          (unconfined.subj_typeattr))
    (call .luci.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .luci.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .luci.obj_type_transition_datafile (unconfined.subj_typeattr))
    (call .luci.obj_type_transition_tmpfile
          (unconfined.subj_typeattr dir "luci-modulecache"))
    (call .luci.peeraddr.obj_type_transition_execfile
          (unconfined.subj_typeattr))
    (call .luci.reload.obj_type_transition_execfile
          (unconfined.subj_typeattr)))

(in .uhttpd
    (call .luci.cgi.subj_type_transition (subj)))

(block luci

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/luci-uploads"
        dir
        conffile_file_context)
       (filecon
        "/etc/luci-uploads/.*"
        any
        conffile_file_context)

       (filecon
        "/tmp/luci-indexcache\..*"
        file
        tmpfile_file_context)

       (filecon
        "/tmp/luci-modulecache"
        dir
        tmpfile_file_context)
       (filecon
        "/tmp/luci-modulecache/.*"
        any
        tmpfile_file_context)

       (filecon
        "/usr/bin/rpcd/luci"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/rpcd/luci\.wireguard"
        file
        execfile_file_context)

       (filecon
        "/usr/share/luci"
        dir
        datafile_file_context)
       (filecon
        "/usr/share/luci/.*"
        any
        datafile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "luci-uploads")))

       (macro obj_type_transition_datafile ((type ARG1))
              (call .file.datafile_obj_type_transition
                    (ARG1 datafile dir "luci")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "luci"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "luci.wireguard")))

       (macro obj_type_transition_tmpfile ((type ARG1)(class ARG2)(name ARG3))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile ARG2 ARG3)))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.conf.obj_template)
       (blockinherit .file.data.obj_template)
       (blockinherit .tmpfile.obj_template)

       (allow subj self (capability (setuid)))
       (allow subj self (process (setrlimit)))
       (allow subj self create_unix_dgram_socket)
       (allow subj self create_unix_stream_socket)

       (call bwc.subj_type_transition (subj))

       ;; compat with genfs_seclabel_symlinks=0
       (call .sys.read_fs_lnk_files (subj))

       (call .class.read_sysfile_lnk_files (subj))
       (call .class.search_sysfile_dirs (subj))

       (call .cron.list_miscfile_dirs (subj))
       (call .cron.read_miscfile_files (subj))

       (call .devices.read_sysfile_files (subj))
       (call .devices.search_sysfile_dirs (subj))

       (call .dnsmasq.subj_type_transition (subj))

       (call .file.auth.write.subj_type (subj))
       (call .file.execute_initscriptfile_files (subj))
       (call .file.list_initscriptfile_dirs (subj))
       (call .file.manage_conffile_lnk_files (subj))
       (call .file.readwrite_conffile_dirs (subj))

       (call .fs.getattr_all_filesystems (subj))

       (call .functions.read_miscfile_files (subj))
       (call .functions.search_miscfile_dirs (subj))

       (call .fw3.read_datafile_files (subj))
       (call .fw3.search_datafile_dirs (subj))
       (call .fw3.subj_type_transition (subj))

       (call .jshn.subj_type_transition (subj))

       (call .kernel.search_sysctlfile_dirs (subj))
       (call .kernel.search_sysfile_dirs (subj))

       (call .leds.list_sysfile_dirs (subj))
       (call .leds.read_sysfile_lnk_files (subj))

       (call .libubox.read_datafile_files (subj))
       (call .libubox.search_datafile_dirs (subj))

       (call .loadavg.read_procfile_files (subj))

       (call .locale.read.subj_type (subj))

       (call .logd.unix_dgram_send (subj))

       (call .lua.execute_execfile_files (subj))

       (call .meminfo.read_procfile_files (subj))

       (call .module.search_sysfile_dirs (subj))

       (call .nameservice.manage_miscfile_files (subj))

       (call .net.read_procfile_files (subj))
       (call .net.read_procfile_lnk_files (subj))

       (call .proc.list_fs_dirs (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .rccommon.read_conffile_files (subj))

       (call .selinux.computeav (subj))
       (call .selinux.linked.subj_type (subj))
       (call .selinux.setfscreate.subj_type (subj))

       (call .shadow.manage_authfile_files (subj))
       (call .shadow.read.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .stat.read_procfile_files (subj))

       (call .subj.passwd_all (subj))
       (call .subj.read_state_all (subj))

       (call .swconfig.subj_type_transition (subj))

       (call .tmpfile.search_locktmpfile_dirs (subj))
       (call .tmpfile.search_runtimetmpfile_dirs (subj))
       (call .tmpfile.write_locktmpfile_files (subj))

       (call .ubus.subj_type_transition (subj))

       (call .ubusd.unix_stream_connect (subj))

       (call .uci.search_conffile_dirs (subj))
       (call .uci.subj_type_transition (subj))
       (call .uci.write_conffile_files (subj))

       (call .wpad.subj_type_transition (subj))

       (optional luci_opt_blockmount
                 ;; mountpoints currently supported
                 (call .file.search_homefile_dirs (subj))
                 (call .blockmount.subj_type_transition (subj))
                 (call .mnt.search_miscfile_dirs (subj))
                 (call .overlay.search_miscfile_dirs (subj)))

       (optional luci_opt_rcacme
                 (call .rcacme.subj_type_transition (subj)))

       (optional luci_opt_rcblockd
                 (call .rcblockd.subj_type_transition (subj)))

       (optional luci_opt_rcboot
                 (call .rcboot.subj_type_transition (subj)))

       (optional luci_opt_rcbootcount
                 (call .rcbootcount.subj_type_transition (subj)))

       (optional luci_opt_rcchronyd
                 (call .rcchronyd.subj_type_transition (subj)))

       (optional luci_opt_rccron
                 (call .rccron.subj_type_transition (subj)))

       (optional luci_opt_rcdnsmasq
                 (call .rcdnsmasq.subj_type_transition (subj)))

       (optional luci_opt_rcdropbear
                 (call .rcdropbear.subj_type_transition (subj)))

       (optional luci_opt_rcfirewall
                 (call .rcfirewall.subj_type_transition (subj)))

       (optional luci_opt_rcfstab
                 (call .rcfstab.subj_type_transition (subj)))

       (optional luci_opt_rcgpioswitch
                 (call .rcgpioswitch.subj_type_transition (subj)))

       (optional luci_opt_rcigmpproxy
                 (call .rcigmpproxy.subj_type_transition (subj)))

       (optional luci_opt_rcirqbalance
                 (call .rcirqbalance.subj_type_transition (subj)))

       (optional luci_opt_rcled
                 (call .rcled.subj_type_transition (subj)))

       (optional luci_opt_rclog
                 (call .rclog.subj_type_transition (subj)))

       (optional luci_opt_rcmurmur
                 (call .rcmurmur.subj_type_transition (subj)))

       (optional luci_opt_rcnetwork
                 (call .rcnetwork.subj_type_transition (subj)))

       (optional luci_opt_rcngircd
                 (call .rcngircd.subj_type_transition (subj)))

       (optional luci_opt_rcodhcpd
                 (call .rcodhcpd.subj_type_transition (subj)))

       (optional luci_opt_rcrpcd
                 (call .rcrpcd.subj_type_transition (subj)))

       (optional luci_opt_rcsocat
                 (call .rcsocat.subj_type_transition (subj)))

       (optional luci_opt_rcsqm
                 (call .rcsqm.subj_type_transition (subj)))

       (optional luci_opt_rcsquid
                 (call .rcsquid.subj_type_transition (subj)))

       (optional luci_opt_rcsysctl
                 (call .rcsysctl.subj_type_transition (subj)))

       (optional luci_opt_rcsysfixtime
                 (call .rcsysfixtime.subj_type_transition (subj)))

       (optional luci_opt_rcsysntpd
                 (call .rcsysntpd.subj_type_transition (subj)))

       (optional luci_opt_rcsystem
                 (call .rcsystem.subj_type_transition (subj)))

       (optional luci_opt_rctinyproxy
                 (call .rctinyproxy.subj_type_transition (subj)))

       (optional luci_opt_rcttyd
                 (call .rcttyd.subj_type_transition (subj)))

       (optional luci_opt_rcucitrack
                 (call .rcucitrack.subj_type_transition (subj)))

       (optional luci_opt_rcuhttpd
                 (call .rcuhttpd.subj_type_transition (subj)))

       (optional luci_opt_rcumount
                 (call .rcumount.subj_type_transition (subj)))

       (optional luci_opt_rcunbound
                 (call .rcunbound.subj_type_transition (subj)))

       (optional luci_opt_rcurandomseed
                 (call .rcurandomseed.subj_type_transition (subj)))

       (optional luci_opt_rcurngd
                 (call .rcurngd.subj_type_transition (subj)))

       (optional luci_opt_rcwpad
                 (call .rcwpad.subj_type_transition (subj)))

       (optional luci_opt_rczram
                 (call .rczram.subj_type_transition (subj)))

       (optional luci_opt_sslcertfile
                 (call .ssl.search_certfile_dirs (subj)))

       (block bwc

              ;;
              ;; Contexts
              ;;

              (filecon
               "/tmp/lib/luci-bwc"
               dir
               statetmpfile_file_context)
              (filecon
               "/tmp/lib/luci-bwc/.*"
               any
               statetmpfile_file_context)

              (filecon
               "/tmp/run/luci-bwc\.pid"
               file
               runtimetmpfile_file_context)

              (filecon
               "/usr/bin/luci-bwc"
               file
               execfile_file_context)

              ;;
              ;; Macros
              ;;

              (macro map_statetmpfile_dirs ((type ARG1))
                     (allow ARG1 statetmpfile (dir (map))))

              (macro map_statetmpfile_files ((type ARG1))
                     (allow ARG1 statetmpfile (file (map))))

              (macro obj_type_transition_execfile ((type ARG1))
                     (call .file.execfile_obj_type_transition
                           (ARG1 execfile file "luci-bwc")))

              (macro obj_type_transition_runtimetmpfile ((type ARG1))
                     (call .tmpfile.runtimetmpfile_obj_type_transition
                           (ARG1 runtimetmpfile file "luci-bwc.pid")))

              (macro obj_type_transition_statetmpfile ((type ARG1))
                     (call .tmpfile.statetmpfile_obj_type_transition
                           (ARG1 statetmpfile dir "luci-bwc")))

              ;;
              ;; Policy
              ;;

              (blockinherit .agent.base_template)
              (blockinherit .tmpfile.runtime.obj_template)
              (blockinherit .tmpfile.state.obj_template)

              (allow subj self create_netlink_generic_socket)
              (allow subj self create_udp_socket)
              (allow subj self create_unix_dgram_socket)

              (call manage_runtimetmpfile_files (subj))
              (call obj_type_transition_runtimetmpfile (subj))

              (call manage_statetmpfile_dirs (subj))
              (call manage_statetmpfile_files (subj))
              (call map_statetmpfile_dirs (subj))
              (call map_statetmpfile_files (subj))
              (call obj_type_transition_statetmpfile (subj))

              ;; compat with genfs_seclabel_symlinks=0
              (call .sys.read_fs_lnk_files (subj))
              (call .sys.search_fs_dirs (subj))

              (call .class.list_sysfile_dirs (subj))
              (call .class.read_sysfile_lnk_files (subj))

              (call .devices.read_sysfile_files (subj))
              (call .devices.search_sysfile_dirs (subj))

              (call .file.search_conffile_dirs (subj))

              (call .loadavg.read_procfile_files (subj))

              (call .net.read_procfile_files (subj))
              (call .net.read_procfile_lnk_files (subj))

              (call .tmpfile.deletename_runtimetmpfile_dirs (subj)))

       (block cgi

              ;;
              ;; Contexts
              ;;

              (filecon
               "/www/cgi-bin/luci"
               file
               cgiscriptfile_file_context)

              ;;
              ;; Macros
              ;;

              (macro obj_type_transition_cgiscriptfile ((type ARG1))
                     (call .file.cgiscriptfile_obj_type_transition
                           (ARG1 cgiscriptfile file "luci")))

              ;;
              ;; Policy
              ;;

              (blockinherit .cgiscript.base_template)

              (allow subj self (capability (net_admin)))
              (allow subj self create_netlink_generic_socket)
              (allow subj self create_netlink_route_socket)
              (allow subj self create_udp_socket)
              (allow subj self create_unix_dgram_socket)
              (allow subj self create_unix_stream_socket)
              (allow subj self (netlink_route_socket (nlmsg_read)))

              (call list_datafile_dirs (subj))
              (call read_datafile_files (subj))

              (call manage_tmpfile_dirs (subj))
              (call manage_tmpfile_files (subj))
              (call obj_type_transition_tmpfile (subj dir "luci-modulecache"))
              (call obj_type_transition_tmpfile (subj file "*"))

              (call .sys.loadkernelmodule.subj_type (subj))
              (call .sys.read_fs_lnk_files (subj))
              (call .sys.requestmodule (subj))
              (call .sys.writeinherited_fifo_files (subj))

              (call .blockmount.auditexecute_execfile_files (subj))

              (call .board.read_miscfile_files (subj))

              (call .class.list_sysfile_dirs (subj))

              (call .devices.list_sysfile_dirs (subj))
              (call .devices.read_sysfile_files (subj))

              (call .dropbear.auditexecute_execfile_files (subj))

              (call .file.read_conffile_lnk_files (subj))
              (call .file.search_initscriptfile_dirs (subj))
              (call .file.search_cgiscriptfile_dirs (subj))

              (call .fw3.auditexecute_execfile_files (subj))

              (call .leds.list_sysfile_dirs (subj))

              (call .locale.read.subj_type (subj))

              (call .logread.subj_type_transition (subj))

              (call .lua.execute_execfile_files (subj))

              (call .nameservice.read_miscfile_files (subj))

              (call .osrelease.read_miscfile_files (subj))

              (call .random.read_nodedev_chr_files (subj))

              (call .selinux.linked.subj_type (subj))

              (call .shadow.read_authfile_files (subj))
              (call .shadow.read.subj_type (subj))

              (call .shell.execute_execfile_files (subj))

              (call .swconfig.auditexecute_execfile_files (subj))

              (call .tmpfile.search_runtimetmpfile_dirs (subj))
              (call .tmpfile.search_statetmpfile_dirs (subj))

              (call .uci.readwrite_conffile_files (subj))
              (call .uci.read_tmpfile_files (subj))
              (call .uci.search_conffile_dirs (subj))
              (call .uci.search_tmpfile_dirs (subj))

              (call .ubusd.unix_stream_connect (subj))

              (call .uhttpd.readwriteinherited_fifo_files (subj))

              (call .www.search_miscfile_dirs (subj))

              (optional luci_cgi_opt_acme
                        (call .acme.search_conffile_dirs (subj)))

              (optional luci_cgi_opt_rcsquid
                        (call .rcsquid.subj_type_transition (subj)))

              (optional luci_cgi_opt_rctinyproxy
                        (call .rctinyproxy.subj_type_transition (subj)))

              (optional luci_cgi_opt_rcunbound
                        (call .rcunbound.subj_type_transition (subj)))

              (optional luci_cgi_opt_squid
                        (call .squid.readwrite_conffile_files (subj))
                        (call .squid.search_conffile_dirs (subj)))

              (optional luci_cgi_opt_unbound
                        (call .unbound.read_statetmpfile_files (subj))
                        (call .unbound.readwrite_conffile_files (subj))
                        (call .unbound.search_conffile_dirs (subj))
                        (call .unbound.search_statetmpfile_dirs (subj)))

              (optional luci_cgi_opt_unboundcontrol
                        (call .unbound.control.subj_type_transition (subj)))

              ;; luci-app-tinyproxy
              (optional luci_cgi_opt_wget
                        (call .httpproxy.tcp_connect_netports (subj))
                        (call .net.egress_netifs (subj))
                        (call .net.sendto_netnodes (subj))
                        (call .wget.execute_execfile_files (subj)))

              (optional luci_cgi_opt_wireguard
                        (call .wireguard.subj_type_transition (subj))))

       (block peeraddr

              ;;
              ;; Contexts
              ;;

              (filecon
               "/usr/bin/luci-peeraddr"
               file
               execfile_file_context)

              ;;
              ;; Macros
              ;;

              (macro obj_type_transition_execfile ((type ARG1))
                     (call .file.execfile_obj_type_transition
                           (ARG1 execfile file "luci-peeraddr")))

              ;;
              ;; Policy
              ;;

              (blockinherit .agent.base_template))

       (block reload

              ;;
              ;; Contexts
              ;;

              (filecon
               "/usr/bin/luci-reload"
               file
               execfile_file_context)

              ;;
              ;; Macros
              ;;

              (macro obj_type_transition_execfile ((type ARG1))
                     (call .file.execfile_obj_type_transition
                           (ARG1 execfile file "luci-reload")))

              ;;
              ;; Policy
              ;;

              (blockinherit .agent.base_template)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .ubus.subj_type_transition (subj)))

(in .file
    (call .ubus.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block ubus

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/ubus"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ubus")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (allow subj self create_unix_stream_socket)

       (call .sys.readwriteinherited_fifo_files (subj))
       (call .sys.readwriteinherited_ptydev_chr_files (subj))
       (call .sys.dontaudit_readwrite_udp_sockets (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))

       (call .devstatus.use_fds (subj))

       (call .file.search_conffile_dirs (subj))

       (call .hotplugcall.writeinherited_fifo_files (subj))

       (call .ifup.writeinherited_fifo_files (subj))

       ;; might be a leak
       (call .net.readinherited_procfile_files (subj))

       (call .netifd.readwriteinherited_fifo_files (subj))
       (call .netifd.dontaudit_readwrite_netlink_kobject_uevent_sockets (subj))
       (call .netifd.dontaudit_readwrite_netlink_route_sockets (subj))

       (call .ntpdhotplug.use_fds (subj))

       (call .odhcp6c.use_fds (subj))

       (call .odhcpd.use_fds (subj))
       (call .odhcpd.dontaudit_readwrite_netlink_route_sockets (subj))

       (call .odhcpd.update.use_fds (subj))

       (call .pppd.use_fds (subj))
       (call .pppd.dontaudit_readwrite_packet_sockets (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .tmpfile.search_conftmpfile_dirs (subj))
       (call .tmpfile.search_runtimetmpfile_dirs (subj))
       (call .tmpfile.search_statetmpfile_dirs (subj))

       (call .ubusd.unix_stream_connect (subj))

       (call .wifi.use_fds (subj))

       (optional ubus_opt_initscript
                 (call .initscript.writeinherited_all_fifo_files (subj)))

       (optional ubus_opt_luci
                 (call .luci.cgi.writeinherited_fifo_files (subj)))

       (optional ubus_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj)))

       (optional ubus_opt_uhttpd
                 (call .uhttpd.readinherited_fifo_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .dnsmasq.subj_type_transition (subj)))

(in .file
    (call .dnsmasq.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .dnsmasq.obj_type_transition_conftmpfile (unconfined.subj_typeattr))
    (call .dnsmasq.obj_type_transition_datafile (unconfined.subj_typeattr))
    (call .dnsmasq.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .dnsmasq.obj_type_transition_miscfile (unconfined.subj_typeattr))
    (call .dnsmasq.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr))
    (call .dnsmasq.obj_type_transition_statetmpfile
          (unconfined.subj_typeattr))
    (call .dnsmasq.obj_type_transition_tmpfile
          (unconfined.subj_typeattr file "dhcp.leases"))
    (call .dnsmasq.obj_type_transition_tmpfile
          (unconfined.subj_typeattr dir "dnsmasq.d")))

(block dnsmasq

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/dnsmasq\.conf"
        file
        conffile_file_context)

       (filecon
        "/tmp/etc/dnsmasq\.conf"
        file
        conftmpfile_file_context)

       (filecon
        "/tmp/dhcp\.leases"
        file
        tmpfile_file_context)
       (filecon
        "/tmp/dnsmasq\.d"
        dir
        tmpfile_file_context)
       (filecon
        "/tmp/dnsmasq\.d/.*"
        any
        tmpfile_file_context)

       (filecon
        "/tmp/run/dnsmasq"
        dir
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/dnsmasq/.*"
        any
        runtimetmpfile_file_context)

       (filecon
        "/tmp/state/dnsmasqsec"
        file
        statetmpfile_file_context)

       (filecon
        "/usr/bin/dnsmasq"
        file
        execfile_file_context)

       (filecon
        "/usr/lib/dnsmasq"
        dir
        miscfile_file_context)
       (filecon
        "/usr/lib/dnsmasq/.*"
        any
        miscfile_file_context)

       (filecon
        "/usr/share/dnsmasq"
        dir
        datafile_file_context)
       (filecon
        "/usr/share/dnsmasq/.*"
        any
        datafile_file_context)

       ;;
       ;; Macros
       ;;

       (macro getattr_conffile_files ((type ARG1))
              (allow ARG1 conffile (file (getattr))))

       (macro getattr_datafile_files ((type ARG1))
              (allow ARG1 datafile (file (getattr))))

       (macro getattr_execfile_files ((type ARG1))
              (allow ARG1 execfile (file (getattr))))

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "dnsmasq.conf")))

       (macro obj_type_transition_conftmpfile ((type ARG1))
              (call .tmpfile.conftmpfile_obj_type_transition
                    (ARG1 conftmpfile file "dnsmasq.conf")))

       (macro obj_type_transition_datafile ((type ARG1))
              (call .file.datafile_obj_type_transition
                    (ARG1 datafile dir "dnsmasq")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "dnsmasq")))

       (macro obj_type_transition_miscfile ((type ARG1))
              (call .file.libfile_obj_type_transition
                    (ARG1 miscfile dir "dnsmasq")))

       (macro obj_type_transition_runtimetmpfile ((type ARG1))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile dir "dnsmasq")))

       (macro obj_type_transition_statetmpfile ((type ARG1))
              (call .tmpfile.statetmpfile_obj_type_transition
                    (ARG1 statetmpfile file "dnsmasqsec")))

       (macro obj_type_transition_tmpfile ((type ARG1)(class ARG2)(name ARG3))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile ARG2 ARG3)))

       (macro setattr_runtimetmpfile_dirs ((type ARG1))
              (allow ARG1 runtimetmpfile (dir (setattr))))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.conf.obj_template)
       (blockinherit .file.data.obj_template)
       (blockinherit .file.misc.obj_template)
       (blockinherit .tmpfile.conf.obj_template)
       (blockinherit .tmpfile.obj_template)
       (blockinherit .tmpfile.runtime.obj_template)
       (blockinherit .tmpfile.state.obj_template)

       (allow subj self (process (getcap setcap)))
       (allow subj self
              (capability (chown dac_override net_admin net_raw setgid
                                 setuid)))
       (allow subj self create_netlink_route_socket)
       (allow subj self create_rawip_socket)
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)
       (allow subj self create_unix_stream_socket)
       (allow subj self (netlink_route_socket (nlmsg_read)))

       (call read_conffile_files (subj))

       (call read_datafile_files (subj))
       (call search_datafile_dirs (subj))

       (call execute_miscfile_files (subj))
       (call search_miscfile_dirs (subj))

       (call manage_runtimetmpfile_dirs (subj))
       (call manage_runtimetmpfile_files (subj))
       (call obj_type_transition_runtimetmpfile (subj))

       (call manage_tmpfile_dirs (subj))
       (call manage_tmpfile_files (subj))
       (call obj_type_transition_tmpfile (subj file "*"))
       (call obj_type_transition_tmpfile (subj dir "dnsmasq.d"))

       (call .sys.readwriteinherited_fifo_files (subj))
       (call .sys.search_sysctlfile_dirs (subj))

       (call .dhcp.udp_bind_netports (subj))

       (call .dns.tcp_bind_netports (subj))
       (call .dns.udp_bind_netports (subj))

       (call .locale.read.subj_type (subj))

       (call .logd.unix_dgram_send (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .net.egress_netifs (subj))
       (call .net.port.unreserved.udp_bind_all_netports (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.tcp_bind_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .resolv.list_tmpfile_dirs (subj))
       (call .resolv.read.subj_type (subj))
       (call .resolv.watch_tmpfile_dirs (subj))

       (call .tmp.deletename_fs_dirs (subj))

       (call .tmpfile.hosts.read_all_files (subj))
       (call .tmpfile.list_hoststmpfile_dirs (subj))
       (call .tmpfile.read_conftmpfile_files (subj))
       (call .tmpfile.search_conftmpfile_dirs (subj))
       (call .tmpfile.search_statetmpfile_dirs (subj))

       (call .ubusd.unix_stream_connect (subj))

       (call .xattr.associate_filesystems (miscfile))

       (optional dnsmasq_opt_rcdnsmasq
                 (call .rcdnsmasq.writeinherited_fifo_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .devstatus.subj_type_transition (subj)))

(in .file
    (call .devstatus.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block devstatus

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/devstatus"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "devstatus")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (call .sys.writeinherited_fifo_files (subj))

       (call .jshn.subj_type_transition (subj))

       (call .libubox.read_datafile_files (subj))
       (call .libubox.search_datafile_dirs (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .ubus.subj_type_transition (subj))

       (optional devstatus_opt_rcdnsmasq
                 (call .rcdnsmasq.writeinherited_fifo_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .fwenv.subj_type_transition (subj)))

(in .file
    (call .fwenv.libfile_obj_type_transition_miscfile
          (unconfined.subj_typeattr))
    (call .fwenv.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .fwenv.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block fwenv

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/fw_env\.config"
        file
        conffile_file_context)
       (filecon
        "/etc/fw_env\.config\..*"
        file
        conffile_file_context)

       (filecon
        "/usr/bin/fw_printenv"
        file
        execfile_file_context)

       (filecon
        "/usr/lib/uboot-envtools\.sh"
        file
        miscfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro libfile_obj_type_transition_miscfile ((type ARG1))
              (call .file.libfile_obj_type_transition
                    (ARG1 miscfile file "uboot-envtools.sh")))

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "fw_env.config")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "fw_printenv")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.conf.obj_template)
       (blockinherit .file.misc.obj_template)

       (call read_conffile_files (subj))

       (call .sys.readwriteinherited_ptydev_chr_files (subj))
       (call .sys.writeinherited_fifo_files (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))
       (call .dev.stor.readwrite.subj_type (subj))

       (call .file.search_conffile_dirs (subj))

       (call .mtd.readwrite_stordev_chr_files (subj))

       ;; local customisation, should not be needed (netifd runs fw_printenv with a domain transition)
       (call .netifd.writeinherited_fifo_files (subj))

       (call .tmpfile.manage_locktmpfile_files (subj))
       (call .tmpfile.readwrite_locktmpfile_dirs (subj))

       (call .xattr.associate_filesystems (miscfile))

       (optional fwenv_opt_rcbootcount
                 (call .rcbootcount.writeinherited_fifo_files (subj)))

       (optional fwenv_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .logread.subj_type_transition (subj)))

(in .file
    (call .logread.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .logread.obj_type_transition_logtmpfile
          (unconfined.subj_typeattr file "system.log"))
    (call .logread.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr file "logread.1.pid")))

(block logread

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/log/system\.log"
        file
        logtmpfile_file_context)

       (filecon
        "/tmp/run/logread\.[0-9]+\.pid"
        file
        runtimetmpfile_file_context)

       (filecon
        "/usr/bin/logread"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "logread")))

       (macro obj_type_transition_logtmpfile ((type ARG1)(class ARG2)(name ARG3))
              (call .tmpfile.logtmpfile_obj_type_transition
                    (ARG1 logtmpfile ARG2 ARG3)))

       (macro obj_type_transition_runtimetmpfile ((type ARG1)(class ARG2)(name ARG3))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile ARG2 ARG3)))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .tmpfile.log.obj_template)
       (blockinherit .tmpfile.runtime.obj_template)

       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)
       (allow subj self create_unix_stream_socket)

       (call manage_logtmpfile_files (subj))
       (call obj_type_transition_logtmpfile (subj file "*"))

       (call manage_runtimetmpfile_files (subj))
       (call obj_type_transition_runtimetmpfile (subj file "*"))

       (call .sys.readwriteinherited_ptydev_chr_files (subj))
       (call .sys.writeinherited_fifo_files (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))

       (call .file.read_conffile_lnk_files (subj))

       (call .locale.read.subj_type (subj))

       (call .logd.unix_dgram_send (subj))
       (call .logd.readinherited_fifo_files (subj))

       (call .net.egress_netifs (subj))
       ;; support ncat -4 -l 5555
       (call .net.port.unreserved.tcp_connect_all_netports (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .syslog.tcp_connect_netports (subj))

       (call .resolv.read.subj_type (subj))

       (call .tmpfile.deletename_runtimetmpfile_dirs (subj))

       (call .ubusd.unix_stream_connect (subj))

       (optional logread_opt_luci
                 (call .luci.cgi.writeinherited_fifo_files (subj)))

       (optional logread_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj)))

       (optional logread_opt_uhttpd
                 (call .uhttpd.readinherited_fifo_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .fw3.subj_type_transition (subj)))

(in .file
    (call .fw3.obj_type_transition_datafile (unconfined.subj_typeattr))
    (call .fw3.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .fw3.obj_type_transition_runtimetmpfile (unconfined.subj_typeattr)))

(block fw3

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/run/fw3\.lock"
        file
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/fw3\.state"
        file
        runtimetmpfile_file_context)

       (filecon
        "/usr/bin/fw3"
        file
        execfile_file_context)

       (filecon
        "/usr/share/fw3"
        dir
        datafile_file_context)
       (filecon
        "/usr/share/fw3/.*"
        any
        datafile_file_context)

       ;;
       ;; Macros
       ;;

       (macro auditexecute_execfile_files ((type ARG1))
              (allow ARG1 execfile (file (getattr execute))))

       (macro obj_type_transition_datafile ((type ARG1))
              (call .file.datafile_obj_type_transition
                    (ARG1 datafile dir "fw3")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "fw3")))

       (macro obj_type_transition_runtimetmpfile ((type ARG1))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile file "fw3.lock"))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile file "fw3.state")))

       (macro dontaudit_writeinherited_runtimetmpfile_files ((type ARG1))
              (dontaudit ARG1 runtimetmpfile writeinherited_file))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.data.obj_template)
       (blockinherit .tmpfile.runtime.obj_template)

       (allow subj self (capability (dac_override net_admin net_raw)))
       (allow subj self create_netlink_route_socket)
       (allow subj self create_rawip_socket)
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)
       (allow subj self create_unix_stream_socket)
       (allow subj self (netlink_route_socket (nlmsg_read)))
       ;; this is due to it trying to create "contrack" file in /proc/net
       (dontaudit subj self (dir (add_name write)))
       (dontaudit subj self (file (create)))

       (call search_datafile_dirs (subj))
       (call read_datafile_files (subj))

       (call manage_runtimetmpfile_files (subj))
       (call obj_type_transition_runtimetmpfile (subj))

       (call .sys.loadkernelmodule.subj_type (subj))
       ;; support -q (QUIET)
       (call .sys.readwriteinherited_ptydev_chr_files (subj))
       (call .sys.requestmodule (subj))
       (call .sys.search_sysctlfile_dirs (subj))
       (call .sys.writeinherited_fifo_files (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))

       (call .firewall.read_conffile_files (subj))

       (call .functions.read_miscfile_files (subj))
       (call .functions.search_miscfile_dirs (subj))

       (call .hotplugcall.subj_type_transition (subj))
       (call .hotplugcall.use_fds (subj))

       (call .ipv4.search_sysctlfile_dirs (subj))
       (call .ipv4.write_sysctlfile_files (subj))

       (call .module.search_sysfile_dirs (subj))

       (call .net.read_procfile_lnk_files (subj))
       (call .net.readwrite_procfile_files (subj))
       (call .net.search_sysctlfile_dirs (subj))

       (call .netifd.search_miscfile_dirs (subj))
       (call .netifd.readwriteinherited_fifo_files (subj))
       (call .netifd.dontaudit_readwrite_netlink_kobject_uevent_sockets (subj))
       (call .netifd.dontaudit_readwrite_netlink_route_sockets (subj))

       (call .odhcp6c.writeinherited_fifo_files (subj))

       (call .pppd.writeinherited_fifo_files (subj))
       (call .pppd.dontaudit_readwrite_packet_sockets (subj))

       ;; this is due to it trying to create "contrack" file in /proc/net
       (call .proc.getattr_filesystems (subj))
       (call .proc.dontaudit_associate_filesystems (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .tmpfile.deletename_runtimetmpfile_dirs (subj))

       (call .ubusd.unix_stream_connect (subj))

       (call .uci.read_conffile_files (subj))
       (call .uci.read_tmpfile_files (subj))
       (call .uci.search_conffile_dirs (subj))
       (call .uci.search_tmpfile_dirs (subj))

       (call .xtables.manage_runtimetmpfile_files (subj))
       (call .xtables.obj_type_transition_runtimetmpfile (subj))
       ;; /etc/firewall.user
       (call .xtables.subj_type_transition (subj))

       (optional fw3_opt_rcfirewall
                 (call .rcfirewall.use_fds (subj)))

       (optional fw3_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .odhcp6c.subj_type_transition (subj)))

(in .file
    (call .odhcp6c.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .odhcp6c.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block odhcp6c

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/odhcp6c\.user"
        file
        conffile_file_context)
       (filecon
        "/etc/odhcp6c\.user\..*"
        file
        conffile_file_context)

       (filecon
        "/etc/odhcp6c\.user\.d"
        dir
        conffile_file_context)
       (filecon
        "/etc/odhcp6c\.user\.d/.*"
        any
        conffile_file_context)

       (filecon
        "/usr/bin/odhcp6c"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "odhcp6c.user.d"))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "odhcp6c.user")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "odhcp6c")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.conf.obj_template)

       (allow subj self (capability (net_raw)))
       (allow subj self create_netlink_route_socket)
       (allow subj self create_rawip_socket)
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)
       (allow subj self (netlink_route_socket (nlmsg_read)))

       (call list_conffile_dirs (subj))
       (call read_conffile_files (subj))

       (call .sys.requestmodule (subj))
       (call .sys.search_sysctlfile_dirs (subj))
       (call .sys.writeinherited_fifo_files (subj))

       (call .dhcp.udp_bind_netports (subj))

       (call .functions.read_miscfile_files (subj))
       (call .functions.search_miscfile_dirs (subj))

       (call .fw3.subj_type_transition (subj))

       (call .net.egress_netifs (subj))
       (call .net.search_sysctlfile_dirs (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .ipv6.readwrite_sysctlfile_files (subj))
       (call .ipv6.search_sysctlfile_dirs (subj))

       (call .jshn.subj_type_transition (subj))

       (call .libubox.read_datafile_files (subj))
       (call .libubox.search_datafile_dirs (subj))

       (call .logd.unix_dgram_send (subj))

       (call .netifd.execute_miscfile_files (subj))
       (call .netifd.search_miscfile_dirs (subj))
       (call .netifd.readwriteinherited_fifo_files (subj))
       (call .netifd.dontaudit_readwrite_netlink_kobject_uevent_sockets (subj))
       (call .netifd.dontaudit_readwrite_netlink_route_sockets (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .ubus.subj_type_transition (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .firstboot.subj_type_transition (subj)))

(in .file
    (call .firstboot.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block firstboot

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/firstboot"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/jffs2reset"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "firstboot"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "jffs2reset")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (allow subj self
              (capability (dac_override dac_read_search sys_admin sys_boot)))
       (allow subj self create_unix_dgram_socket)

       (call execute_execfile_files (subj))

       (call .sys.list_rootfile_dirs (subj))

       (call .cmdline.read_procfile_files (subj))

       (call .dev.getattr_all_chr_files (subj))
       (call .dev.stor.read.subj_type (subj))
       (call .dev.stor.read_all_blk_files (subj))
       (call .dev.stor.read_all_chr_files (subj))

       (call .devices.list_sysfile_dirs (subj))
       (call .devices.read_sysfile_files (subj))

       ;; the big hammer
       (call .file.delete_all (subj))

       (call .filesystems.read_procfile_files (subj))

       (call .logd.unix_dgram_send (subj))

       (call .overlay.manage_miscfile_lnk_files (subj))
       (call .overlay.readwrite_miscfile_dirs (subj))

       (call .pts.search_fs_dirs (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .tmp.list_fs_dirs (subj))

       (call .xattr.remount_filesystems (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .hotplugcall.subj_type_transition (subj)))

(in .file
    (call .hotplugcall.obj_type_transition_execfile
          (unconfined.subj_typeattr)))

(block hotplugcall

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/hotplug-call"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "hotplug-call")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (allow subj self create_unix_dgram_socket)

       (call .sys.list_rootfile_dirs (subj))
       ;; compat with genfs_seclabel_symlinks=0
       (call .sys.read_fs_lnk_files (subj))
       (call .sys.search_sysctlfile_dirs (subj))
       (call .sys.dontaudit_readwrite_udp_sockets (subj))

       (call .block.read_sysfile_lnk_files (subj))
       (call .block.search_sysfile_dirs (subj))

       (call .class.search_sysfile_dirs (subj))

       (call .cpuinfo.read_procfile_files (subj))

       (call .dev.stor.read.subj_type (subj))

       (call .devices.create_sysfile_files (subj))
       (call .devices.readwrite_sysfile_files (subj))
       (call .devices.addname_sysfile_dirs (subj))

       (call .file.initscript.execute_all_files (subj))
       (call .file.read_conffile_lnk_files (subj))
       (call .file.search_initscriptfile_dirs (subj))

       (call .firmware.addname_miscfile_dirs (subj))
       (call .firmware.create_miscfile_files (subj))
       (call .firmware.readwrite_miscfile_files (subj))

       (call .fw3.subj_type_transition (subj))
       (call .fw3.use_fds (subj))
       (call .fw3.writeinherited_runtimetmpfile_files (subj))

       (call .functions.read_miscfile_files (subj))
       (call .functions.search_miscfile_dirs (subj))

       (call .hotplug.list_conffile_dirs (subj))
       (call .hotplug.read_conffile_files (subj))

       (call .ifstatus.subj_type_transition (subj))

       (call .jshn.subj_type_transition (subj))

       (call .jsonfilter.subj_type_transition (subj))

       (call .libubox.read_datafile_files (subj))
       (call .libubox.search_datafile_dirs (subj))

       (call .locale.read.subj_type (subj))

       (call .logd.unix_dgram_send (subj))

       (call .mtd.read_procfile_files (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .netifd.readinherited_fifo_files (subj))
       (call .netifd.dontaudit_readwrite_netlink_kobject_uevent_sockets (subj))
       (call .netifd.dontaudit_readwrite_netlink_route_sockets (subj))

       (call .ntpdhotplug.use_fds (subj))

       (call .preinit.read_tmpfile_files (subj))
       (call .preinit.search_tmpfile_dirs (subj))

       (call .rccommon.read_conffile_files (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .sysctl.list_conffile_dirs (subj))
       (call .sysctl.read_conffile_files (subj))

       (call .tmp.list_fs_dirs (subj))

       (call .tmpfile.addname_locktmpfile_dirs (subj))
       (call .tmpfile.manage_locktmpfile_files (subj))
       (call .tmpfile.search_runtimetmpfile_dirs (subj))
       (call .tmpfile.search_statetmpfile_dirs (subj))

       (call .ubus.subj_type_transition (subj))

       (call .uci.read_conffile_files (subj))
       (call .uci.search_conffile_dirs (subj))
       (call .uci.subj_type_transition (subj))

       (call .wifi.subj_type_transition (subj))

       (optional hotplugcall_opt_blockmount
                 (call .blockmount.subj_type_transition (subj)))

       (optional hotplugcall_opt_dnsmasq
                 (call .dnsmasq.manage_statetmpfile_files (subj))
                 (call .dnsmasq.obj_type_transition_statetmpfile (subj)))

       (optional hotplugcall_opt_initscript
                 (call .initscript.use_all_fds (subj)))

       (optional hotplugcall_opt_mtdstordev
                 (call .mtd.read_stordev_chr_files (subj)))

       (optional hotplugcall_opt_rcunbound
                 (call .rcunbound.subj_type_transition (subj)))

       (optional hotplugcall_opt_unbound
                 ;; bad permissions on /tmp/lib/unbound
                 (allow subj self (capability (dac_override dac_read_search)))

                 (call .unbound.read_miscfile_files (subj))
                 (call .unbound.search_miscfile_dirs (subj))

                 (call .unbound.manage_statetmpfile_files (subj))
                 (call .unbound.readwrite_statetmpfile_dirs (subj)))

       (optional hotplugcall_opt_zramsysfile
                 (call .zram.create_sysfile_files (subj))
                 (call .zram.readwrite_sysfile_files (subj))
                 (call .zram.addname_sysfile_dirs (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .getrandom.subj_type_transition (subj)))

(in .file
    (call .getrandom.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block getrandom

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/getrandom"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "getrandom")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (call .sys.writeinherited_fifo_files (subj))

       (call .file.search_conffile_dirs (subj))

       (call .urandomseed.use_fds (subj))
       (call .urandomseed.writeinherited_miscfile_files (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .ifstatus.subj_type_transition (subj)))

(in .file
    (call .ifstatus.obj_type_transition_execfile (unconfined.subj_typeattr)))

(in .ubus
    (call .ifstatus.use_fds (subj)))

(block ifstatus

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/ifstatus"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ifstatus")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (call .sys.readwriteinherited_ptydev_chr_files (subj))
       (call .sys.writeinherited_fifo_files (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))

       (call .hotplugcall.writeinherited_fifo_files (subj))

       (call .netifd.readinherited_fifo_files (subj))
       (call .netifd.dontaudit_readwrite_netlink_kobject_uevent_sockets (subj))
       (call .netifd.dontaudit_readwrite_netlink_route_sockets (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .ubus.subj_type_transition (subj))

       (optional ifstatus_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .configgenerate.subj_type_transition (subj)))

(in .file
    (call .configgenerate.obj_type_transition_execfile
          (unconfined.subj_typeattr)))

(block configgenerate

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/config_generate"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "config_generate")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (call .sys.search_sysctlfile_dirs (subj))
       (call .sys.writeinherited_fifo_files (subj))

       (call .board.read_miscfile_files (subj))

       (call .boarddetect.subj_type_transition (subj))

       (call .ipv6.read_sysctlfile_files (subj))
       (call .ipv6.search_sysctlfile_dirs (subj))

       (call .jshn.subj_type_transition (subj))

       (call .libubox.read_datafile_files (subj))
       (call .libubox.search_datafile_dirs (subj))

       (call .net.search_sysctlfile_dirs (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .uci.manage_conffile_dirs (subj))
       (call .uci.manage_conffile_files (subj))
       (call .uci.obj_type_transition_conffile (subj))
       (call .uci.subj_type_transition (subj))

       (optional configgenerate_opt_rcboot
                 (call .rcboot.use_fds (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .mtd.subj_type_transition (subj)))

(in .file
    (call .mtd.obj_type_transition_execfile (unconfined.subj_typeattr)))

(in .mtd

    ;;
    ;; Contexts
    ;;

    (filecon
     "/usr/bin/mtd"
     file
     execfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_execfile ((type ARG1))
           (call .file.execfile_obj_type_transition
                 (ARG1 execfile file "mtd")))

    ;;
    ;; Policy
    ;;

    (blockinherit .agent.base_template)

    (call .sys.writeinherited_fifo_files (subj))

    (call .dev.stor.readwrite.subj_type (subj))

    (call .file.search_conffile_dirs (subj))

    (call .mtd.read_procfile_files (subj))
    (call .mtd.readwrite_stordev_chr_files (subj))

    (optional mtd_opt_rcbootcount
              (call .rcbootcount.use_fds (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .ip.subj_type_transition (subj)))

(in .file
    (call .ip.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .ip.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr dir "netns")))

(in .netifd
    (call .ip.subj_type_transition (subj)))

(block ip

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/run/netns"
        dir
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/netns/.*"
        any
        ())

       (filecon
        "/usr/bin/bridge"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/devlink"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/ip-full"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/ip-tiny"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/tc"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "bridge"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "devlink"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ip-full"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ip-tiny"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "tc")))

       (macro obj_type_transition_runtimetmpfile ((type ARG1)(class ARG2)(name ARG3))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile ARG2 ARG3)))

       (macro watch_runtimetmpfile_dirs ((type ARG1))
              (allow ARG1 runtimetmpfile (dir (watch))))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .tmpfile.runtime.obj_template)

       (allow subj self (capability (net_admin)))
       (allow subj self create_netlink_route_socket)
       (allow subj self create_netlink_xfrm_socket)
       (allow subj self create_unix_dgram_socket)
       (allow subj self (netlink_route_socket (nlmsg_read nlmsg_write)))

       (call manage_runtimetmpfile_dirs (subj))
       (call mounton_runtimetmpfile_dirs (subj))
       (call obj_type_transition_runtimetmpfile (subj dir "*"))
       (call watch_runtimetmpfile_dirs (subj))

       (call .sys.loadkernelmodule.subj_type (subj))
       (call .sys.readwriteinherited_ptydev_chr_files (subj))
       (call .sys.requestmodule (subj))
       (call .sys.writeinherited_fifo_files (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))

       (call .file.search_conffile_dirs (subj))

       (call .iproute2.list_conffile_dirs (subj))
       (call .iproute2.read_conffile_files (subj))

       (call .net.read_procfile_files (subj))
       (call .net.read_procfile_lnk_files (subj))

       (call .netifd.readwriteinherited_fifo_files (subj))
       (call .netifd.dontaudit_readwrite_netlink_kobject_uevent_sockets (subj))
       (call .netifd.dontaudit_readwrite_netlink_route_sockets (subj))

       (call .ns.read_fs_files (subj))

       (call .tmpfile.deletename_runtimetmpfile_dirs (subj))

       (call .watchdog.dontaudit_writeinherited_nodedev_chr_files (subj))

       (optional ip_opt_rcsqm
                 (call .rcsqm.use_fds (subj)))

       (optional ip_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .sysupgrade.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .sysupgrade.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .sysupgrade.obj_type_transition_tmpfile (unconfined.subj_typeattr)))

(block sysupgrade

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/sysupgrade\.conf"
        file
        conffile_file_context)

       (filecon
        "/tmp/sysupgrade\.conffiles"
        file
        tmpfile_file_context)

       (filecon
        "/usr/bin/sysupgrade"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "sysupgrade.conf")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "sysupgrade")))

       (macro obj_type_transition_tmpfile ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile file "sysupgrade.conffiles")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.conf.obj_template)
       (blockinherit .tmpfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .ifup.subj_type_transition (subj)))

(in .file
    (call .ifup.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block ifup

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/ifup"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ifup")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (call .sys.writeinherited_fifo_files (subj))

       (call .functions.read_miscfile_files (subj))
       (call .functions.search_miscfile_dirs (subj))

       (call .libubox.read_datafile_files (subj))
       (call .libubox.search_datafile_dirs (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .ubus.subj_type_transition (subj))

       (call .uci.read_conffile_files (subj))
       (call .uci.search_conffile_dirs (subj))
       (call .uci.subj_type_transition (subj))

       (call .wifi.subj_type_transition (subj))

       (optional ifup_opt_rcnetwork
                 (call .rcnetwork.use_fds (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .acme.subj_type_transition (subj)))

(in .file
    (call .acme.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .acme.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .acme.libfile_obj_type_transition_execfile
          (unconfined.subj_typeattr))
    (call .acme.obj_type_transition_runtimetmpfile (unconfined.subj_typeattr)))

(in .uci
    (call .acme.writeinherited_fifo_files (subj)))

(block acme

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/acme"
        dir
        conffile_file_context)
       (filecon
        "/etc/acme/.*"
        any
        conffile_file_context)

       (filecon
        "/tmp/run/acme_boot"
        file
        runtimetmpfile_file_context)

       (filecon
        "/usr/bin/acme_cleanup\.sh"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/acme_setup\.sh"
        file
        execfile_file_context)

       (filecon
        "/usr/lib/acme/acme\.sh"
        file
        execfile_file_context)
       (filecon
        "/usr/lib/acme/run-acme"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro getattr_conffile_files ((type ARG1))
              (allow ARG1 conffile (file (getattr))))

       (macro libfile_obj_type_transition_execfile ((type ARG1))
              (call .file.libfile_obj_type_transition
                    (ARG1 execfile file "acme.sh"))
              (call .file.libfile_obj_type_transition
                    (ARG1 execfile file "run-acme")))

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "acme")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "acme_cleanup.sh"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "acme_setup.sh")))

       (macro obj_type_transition_runtimetmpfile ((type ARG1))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile file "acme_boot")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.conf.obj_template)
       (blockinherit .tmpfile.runtime.obj_template)

       (allow subj self (capability (dac_read_search sys_ptrace)))
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)
       (allow subj self create_unix_stream_socket)
       (allow subj self (unix_dgram_socket (sendto)))

       (call manage_conffile_dirs (subj))
       (call manage_conffile_files (subj))

       (call execute_execfile_files (subj))

       (call delete_runtimetmpfile_files (subj))

       (call .sys.deletename_rootfile_dirs (subj))
       (call .sys.transition (subj))
       (call .sys.writeinherited_fifo_files (subj))
       (call .sys.dontaudit_noatsecure (subj))
       (call .sys.dontaudit_rlimitinh (subj))
       (call .sys.dontaudit_siginh (subj))

       (call .cron.addname_miscfile_dirs (subj))
       (call .cron.create_miscfile_files (subj))
       (call .cron.readwrite_miscfile_files (subj))

       (call .file.initscriptfile_subj_type_transition (subj .sys.subj))
       (call .file.mapexecute_initscriptfile_files (subj))
       (call .file.read_initscriptfile_files (subj))
       (call .file.search_initscriptfile_dirs (subj))

       (call .functions.read_miscfile_files (subj))
       (call .functions.search_miscfile_dirs (subj))

       (call .http.tcp_bind_netports (subj))
       (call .http.tcp_connect_netports (subj))

       (call .locale.read.subj_type (subj))

       (call .logd.unix_dgram_send (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .net.egress_netifs (subj))
       ;; support alternate (unreserved only) --tlsport=
       (call .net.port.unreserved.tcp_bind_all_netports (subj))
       (call .net.read_procfile_files (subj))
       (call .net.read_procfile_lnk_files (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.tcp_bind_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .openssl.execute_execfile_files (subj))

       (call .proc.list_fs_dirs (subj))

       ;; netstat
       (call .procfile.getattr_all_dirs (subj))
       (call .procfile.getattr_all_files (subj))
       (call .procfile.getattr_all_lnk_files (subj))

       (call .resolv.read.subj_type (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .socat.execute_execfile_files (subj))

       ;; netstat
       (call .subj.read_state_all (subj))

       (call .tmpfile.deletename_runtimetmpfile_dirs (subj))

       (call .uci.subj_type_transition (subj))

       (call .wget.execute_execfile_files (subj))
       (call .wget.manage_miscfile_files (subj))
       (call .wget.rootfile_obj_type_transition_miscfile (subj))

       (call .www.manage_miscfile_dirs (subj))
       (call .www.manage_miscfile_files (subj))

       (call .xtables.subj_type_transition (subj))

       (optional acme_opt_rccron
                 (call .rccron.subj_type_transition (subj)))

       (optional acme_opt_rcmurmur
                 (call .rcmurmur.subj_type_transition (subj)))

       (optional acme_opt_rcngircd
                 (call .rcngircd.subj_type_transition (subj)))

       (optional acme_opt_rcttyd
                 (call .rcttyd.subj_type_transition (subj)))

       (optional acme_opt_rcuhttpd
                 (call .rcuhttpd.subj_type_transition (subj)))

       (optional acme_opt_sandbox
                 (call .file.sandboxexception.obj_type (conffile)))

       (optional acme_opt_sslcertfile
                 (call .ssl.read.subj_type (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .udevtrigger.subj_type_transition (subj)))

(in .file
    (call .udevtrigger.obj_type_transition_execfile
          (unconfined.subj_typeattr)))

(block udevtrigger

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/udevtrigger"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "udevtrigger")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       ;; compat with genfs_seclabel_symlinks=0
       (call .sys.read_fs_lnk_files (subj))
       (call .sys.search_fs_dirs (subj))

       (call .bus.list_sysfile_dirs (subj))
       (call .bus.read_sysfile_lnk_files (subj))

       (call .devices.search_sysfile_dirs (subj))
       (call .devices.write_sysfile_files (subj))

       (call .file.search_conffile_dirs (subj))

       (call .sysfile.class.list_all_dirs (subj))
       (call .sysfile.class.read_all_lnk_files (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .urandomseed.subj_type_transition (subj)))

(in .file
    (call .urandomseed.conffile_obj_type_transition_miscfile
          (unconfined.subj_typeattr file "urandom.seed"))
    (call .urandomseed.obj_type_transition_execfile
          (unconfined.subj_typeattr)))

(block urandomseed

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/urandom\.seed"
        file
        miscfile_file_context)

       (filecon
        "/usr/bin/urandom_seed"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro conffile_obj_type_transition_miscfile ((type ARG1)(class ARG2)(name ARG3))
              (call .file.conffile_obj_type_transition
                    (ARG1 miscfile ARG2 ARG3)))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "urandom_seed")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.misc.obj_template)

       (call manage_miscfile_files (subj))
       (call conffile_obj_type_transition_miscfile (subj file "*"))

       (call .sys.list_rootfile_dirs (subj))
       (call .sys.writeinherited_fifo_files (subj))

       (call .file.deletename_conffile_dirs (subj))

       (call .getrandom.subj_type_transition (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .tmp.list_fs_dirs (subj))

       (call .uci.subj_type_transition (subj))

       (call .xattr.associate_filesystems (miscfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .ngircd.subj_type_transition (subj)))

(in .file
    (call .ngircd.conffile_obj_type_transition_certfile
          (unconfined.subj_typeattr))
    (call .ngircd.keyfiles.obj_type_transition_conffile
          (unconfined.subj_typeattr))
    (call .ngircd.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .ngircd.obj_type_transition_conffile (unconfined.subj_typeattr)))

(block ngircd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/ngircd\.pem"
        file
        certfile_file_context)
       (filecon
        "/etc/ngircd\.pem\..*"
        file
        certfile_file_context)

       (filecon
        "/etc/ngircd"
        dir
        conffile_file_context)
       (filecon
        "/etc/ngircd/.*"
        any
        conffile_file_context)
       (filecon
        "/etc/ngircd\.conf"
        file
        conffile_file_context)
       (filecon
        "/etc/ngircd\.conf\..*"
        file
        conffile_file_context)
       (filecon
        "/etc/ngircd\.motd"
        file
        conffile_file_context)
       (filecon
        "/etc/ngircd\.motd\..*"
        file
        conffile_file_context)

       (filecon
        "/usr/bin/ngircd"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro getattr_execfile_files ((type ARG1))
              (allow ARG1 execfile (file (getattr))))

       (macro conffile_obj_type_transition_certfile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 certfile file "ngircd.pem"))
              (call .file.conffile_obj_type_transition
                    (ARG1 certfile file "ngircd.pem.new")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ngircd")))

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "ngircd"))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "ngircd.conf"))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "ngircd.motd")))

       ;;
       ;; Policy
       ;;

       (blockinherit conf.obj_template)
       (blockinherit .agent.base_template)
       (blockinherit .file.cert.obj_template)

       (allow subj self (capability (setgid setuid)))
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)

       (call read_certfile_files (subj))

       (call read_conffile_files (subj))

       (call conf.list_all_dirs (subj))

       (call keyfiles.readwrite_conffile_files (subj))

       (call .sys.readwriteinherited_ptydev_chr_files (subj))
       (call .sys.writeinherited_fifo_files (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))

       (call .irc.tcp_bind_netports (subj))
       (call .irc.tcp_connect_netports (subj))

       (call .locale.read.subj_type (subj))

       (call .logd.unix_dgram_send (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .net.egress_netifs (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.tcp_bind_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .resolv.read.subj_type (subj))

       (optional ngircd_opt_acme
                 (call .acme.read_conffile_files (subj))
                 (call .acme.read_conffile_lnk_files (subj))
                 (call .acme.search_conffile_dirs (subj)))

       (optional ngircd_opt_rcngircd
                 (call .rcngircd.use_fds (subj)))

       (optional ngircd_opt_sslcertfile
                 (call .ssl.read.subj_type (subj)))

       (optional ngircd_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj)))

       (block conf

              ;;
              ;; Policy
              ;;

              (blockinherit .file.obj_all_macro_template)

              (call .file.conf.obj_type (obj_typeattr))

              ;;
              ;; Templates
              ;;

              (block obj_base_template

                     ;;
                     ;; Contexts
                     ;;

                     (context
                      conffile_file_context
                      (.u
                       .r
                       conffile
                       (systemlow
                        systemlow)))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_base_template)

                     (type
                      conffile)

                     (call .ngircd.conf.obj_type (conffile)))

              (block obj_macro_template

                     ;;
                     ;; Macros
                     ;;

                     (macro addname_conffile_dirs ((type ARG1))
                            (allow ARG1 conffile addname_dir))

                     (macro append_conffile_blk_files ((type ARG1))
                            (allow ARG1 conffile append_blk_file))

                     (macro append_conffile_chr_files ((type ARG1))
                            (allow ARG1 conffile append_chr_file))

                     (macro append_conffile_fifo_files ((type ARG1))
                            (allow ARG1 conffile append_fifo_file))

                     (macro append_conffile_files ((type ARG1))
                            (allow ARG1 conffile append_file))

                     (macro appendinherited_conffile_blk_files ((type ARG1))
                            (allow ARG1 conffile appendinherited_blk_file))

                     (macro appendinherited_conffile_chr_files ((type ARG1))
                            (allow ARG1 conffile appendinherited_chr_file))

                     (macro appendinherited_conffile_fifo_files ((type ARG1))
                            (allow ARG1 conffile appendinherited_fifo_file))

                     (macro appendinherited_conffile_files ((type ARG1))
                            (allow ARG1 conffile appendinherited_file))

                     (macro conffile_obj_type_transition
                            ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                            (typetransition ARG1 conffile ARG3 ARG4 ARG2)
                            (call addname_conffile_dirs (ARG1)))

                     (macro create_conffile ((type ARG1))
                            (allow ARG1 conffile (allfiles (create))))

                     (macro create_conffile_blk_files ((type ARG1))
                            (allow ARG1 conffile create_blk_file))

                     (macro create_conffile_chr_files ((type ARG1))
                            (allow ARG1 conffile create_chr_file))

                     (macro create_conffile_dirs ((type ARG1))
                            (allow ARG1 conffile create_dir))

                     (macro create_conffile_fifo_files ((type ARG1))
                            (allow ARG1 conffile create_fifo_file))

                     (macro create_conffile_files ((type ARG1))
                            (allow ARG1 conffile create_file))

                     (macro create_conffile_lnk_files ((type ARG1))
                            (allow ARG1 conffile create_lnk_file))

                     (macro create_conffile_sock_files ((type ARG1))
                            (allow ARG1 conffile create_sock_file))

                     (macro deletename_conffile_dirs ((type ARG1))
                            (allow ARG1 conffile deletename_dir))

                     (macro delete_conffile ((type ARG1))
                            (allow ARG1 conffile (allfiles (delete))))

                     (macro delete_conffile_blk_files ((type ARG1))
                            (allow ARG1 conffile delete_blk_file))

                     (macro delete_conffile_chr_files ((type ARG1))
                            (allow ARG1 conffile delete_chr_file))

                     (macro delete_conffile_dirs ((type ARG1))
                            (allow ARG1 conffile delete_dir))

                     (macro delete_conffile_fifo_files ((type ARG1))
                            (allow ARG1 conffile delete_fifo_file))

                     (macro delete_conffile_files ((type ARG1))
                            (allow ARG1 conffile delete_file))

                     (macro delete_conffile_lnk_files ((type ARG1))
                            (allow ARG1 conffile delete_lnk_file))

                     (macro delete_conffile_sock_files ((type ARG1))
                            (allow ARG1 conffile delete_sock_file))

                     (macro execute_conffile_files ((type ARG1))
                            (allow ARG1 conffile execute_file))

                     (macro list_conffile_dirs ((type ARG1))
                            (allow ARG1 conffile list_dir))

                     (macro listinherited_conffile_dirs ((type ARG1))
                            (allow ARG1 conffile listinherited_dir))

                     (macro manage_conffile ((type ARG1))
                            (allow ARG1 conffile (allfiles (manage))))

                     (macro manage_conffile_blk_files ((type ARG1))
                            (allow ARG1 conffile manage_blk_file))

                     (macro manage_conffile_chr_files ((type ARG1))
                            (allow ARG1 conffile manage_chr_file))

                     (macro manage_conffile_dirs ((type ARG1))
                            (allow ARG1 conffile manage_dir))

                     (macro manage_conffile_fifo_files ((type ARG1))
                            (allow ARG1 conffile manage_fifo_file))

                     (macro manage_conffile_files ((type ARG1))
                            (allow ARG1 conffile manage_file))

                     (macro manage_conffile_lnk_files ((type ARG1))
                            (allow ARG1 conffile manage_lnk_file))

                     (macro manage_conffile_sock_files ((type ARG1))
                            (allow ARG1 conffile manage_sock_file))

                     (macro mapexecute_conffile_chr_files ((type ARG1))
                            (allow ARG1 conffile mapexecute_chr_file))

                     (macro mapexecute_conffile_files ((type ARG1))
                            (allow ARG1 conffile mapexecute_file))

                     (macro mounton_conffile ((type ARG1))
                            (allow ARG1 conffile (allfiles (mounton))))

                     (macro mounton_conffile_blk_files ((type ARG1))
                            (allow ARG1 conffile mounton_blk_file))

                     (macro mounton_conffile_chr_files ((type ARG1))
                            (allow ARG1 conffile mounton_chr_file))

                     (macro mounton_conffile_dirs ((type ARG1))
                            (allow ARG1 conffile mounton_dir))

                     (macro mounton_conffile_fifo_files ((type ARG1))
                            (allow ARG1 conffile mounton_fifo_file))

                     (macro mounton_conffile_files ((type ARG1))
                            (allow ARG1 conffile mounton_file))

                     (macro mounton_conffile_lnk_files ((type ARG1))
                            (allow ARG1 conffile mounton_lnk_file))

                     (macro mounton_conffile_sock_files ((type ARG1))
                            (allow ARG1 conffile mounton_sock_file))

                     (macro read_conffile ((type ARG1))
                            (allow ARG1 conffile (allfiles (read))))

                     (macro read_conffile_blk_files ((type ARG1))
                            (allow ARG1 conffile read_blk_file))

                     (macro read_conffile_chr_files ((type ARG1))
                            (allow ARG1 conffile read_chr_file))

                     (macro read_conffile_fifo_files ((type ARG1))
                            (allow ARG1 conffile read_fifo_file))

                     (macro read_conffile_files ((type ARG1))
                            (allow ARG1 conffile read_file))

                     (macro readinherited_conffile_blk_files ((type ARG1))
                            (allow ARG1 conffile readinherited_blk_file))

                     (macro readinherited_conffile_chr_files ((type ARG1))
                            (allow ARG1 conffile readinherited_chr_file))

                     (macro readinherited_conffile_fifo_files ((type ARG1))
                            (allow ARG1 conffile readinherited_fifo_file))

                     (macro readinherited_conffile_files ((type ARG1))
                            (allow ARG1 conffile readinherited_file))

                     (macro readinherited_conffile_sock_files ((type ARG1))
                            (allow ARG1 conffile readinherited_sock_file))

                     (macro read_conffile_lnk_files ((type ARG1))
                            (allow ARG1 conffile read_lnk_file))

                     (macro read_conffile_sock_files ((type ARG1))
                            (allow ARG1 conffile read_sock_file))

                     (macro readwrite_conffile ((type ARG1))
                            (allow ARG1 conffile (allfiles (readwrite))))

                     (macro readwrite_conffile_blk_files ((type ARG1))
                            (allow ARG1 conffile readwrite_blk_file))

                     (macro readwrite_conffile_chr_files ((type ARG1))
                            (allow ARG1 conffile readwrite_chr_file))

                     (macro readwrite_conffile_dirs ((type ARG1))
                            (allow ARG1 conffile readwrite_dir))

                     (macro readwrite_conffile_fifo_files ((type ARG1))
                            (allow ARG1 conffile readwrite_fifo_file))

                     (macro readwrite_conffile_files ((type ARG1))
                            (allow ARG1 conffile readwrite_file))

                     (macro readwriteinherited_conffile_blk_files ((type ARG1))
                            (allow ARG1 conffile readwriteinherited_blk_file))

                     (macro readwriteinherited_conffile_chr_files ((type ARG1))
                            (allow ARG1 conffile readwriteinherited_chr_file))

                     (macro readwriteinherited_conffile_dirs ((type ARG1))
                            (allow ARG1 conffile readwriteinherited_dir))

                     (macro readwriteinherited_conffile_fifo_files ((type ARG1))
                            (allow ARG1 conffile readwriteinherited_fifo_file))

                     (macro readwriteinherited_conffile_files ((type ARG1))
                            (allow ARG1 conffile readwriteinherited_file))

                     (macro readwriteinherited_conffile_sock_files ((type ARG1))
                            (allow ARG1 conffile readwriteinherited_sock_file))

                     (macro readwrite_conffile_lnk_files ((type ARG1))
                            (allow ARG1 conffile readwrite_lnk_file))

                     (macro readwrite_conffile_sock_files ((type ARG1))
                            (allow ARG1 conffile readwrite_sock_file))

                     (macro relabel_conffile ((type ARG1))
                            (allow ARG1 conffile (allfiles (relabel))))

                     (macro relabel_conffile_blk_files ((type ARG1))
                            (allow ARG1 conffile relabel_blk_file))

                     (macro relabel_conffile_chr_files ((type ARG1))
                            (allow ARG1 conffile relabel_chr_file))

                     (macro relabel_conffile_dirs ((type ARG1))
                            (allow ARG1 conffile relabel_dir))

                     (macro relabel_conffile_fifo_files ((type ARG1))
                            (allow ARG1 conffile relabel_fifo_file))

                     (macro relabel_conffile_files ((type ARG1))
                            (allow ARG1 conffile relabel_file))

                     (macro relabel_conffile_lnk_files ((type ARG1))
                            (allow ARG1 conffile relabel_lnk_file))

                     (macro relabel_conffile_sock_files ((type ARG1))
                            (allow ARG1 conffile relabel_sock_file))

                     (macro relabelfrom_conffile ((type ARG1))
                            (allow ARG1 conffile (allfiles (relabelfrom))))

                     (macro relabelfrom_conffile_blk_files ((type ARG1))
                            (allow ARG1 conffile relabelfrom_blk_file))

                     (macro relabelfrom_conffile_chr_files ((type ARG1))
                            (allow ARG1 conffile relabelfrom_chr_file))

                     (macro relabelfrom_conffile_dirs ((type ARG1))
                            (allow ARG1 conffile relabelfrom_dir))

                     (macro relabelfrom_conffile_fifo_files ((type ARG1))
                            (allow ARG1 conffile relabelfrom_fifo_file))

                     (macro relabelfrom_conffile_files ((type ARG1))
                            (allow ARG1 conffile relabelfrom_file))

                     (macro relabelfrom_conffile_lnk_files ((type ARG1))
                            (allow ARG1 conffile relabelfrom_lnk_file))

                     (macro relabelfrom_conffile_sock_files ((type ARG1))
                            (allow ARG1 conffile relabelfrom_sock_file))

                     (macro relabelto_conffile ((type ARG1))
                            (allow ARG1 conffile (allfiles (relabelto))))

                     (macro relabelto_conffile_blk_files ((type ARG1))
                            (allow ARG1 conffile relabelto_blk_file))

                     (macro relabelto_conffile_chr_files ((type ARG1))
                            (allow ARG1 conffile relabelto_chr_file))

                     (macro relabelto_conffile_dirs ((type ARG1))
                            (allow ARG1 conffile relabelto_dir))

                     (macro relabelto_conffile_fifo_files ((type ARG1))
                            (allow ARG1 conffile relabelto_fifo_file))

                     (macro relabelto_conffile_files ((type ARG1))
                            (allow ARG1 conffile relabelto_file))

                     (macro relabelto_conffile_lnk_files ((type ARG1))
                            (allow ARG1 conffile relabelto_lnk_file))

                     (macro relabelto_conffile_sock_files ((type ARG1))
                            (allow ARG1 conffile relabelto_sock_file))

                     (macro rename_conffile ((type ARG1))
                            (allow ARG1 conffile (allfiles (rename))))

                     (macro rename_conffile_blk_files ((type ARG1))
                            (allow ARG1 conffile rename_blk_file))

                     (macro rename_conffile_chr_files ((type ARG1))
                            (allow ARG1 conffile rename_chr_file))

                     (macro rename_conffile_dirs ((type ARG1))
                            (allow ARG1 conffile rename_dir))

                     (macro rename_conffile_fifo_files ((type ARG1))
                            (allow ARG1 conffile rename_fifo_file))

                     (macro rename_conffile_files ((type ARG1))
                            (allow ARG1 conffile rename_file))

                     (macro rename_conffile_lnk_files ((type ARG1))
                            (allow ARG1 conffile rename_lnk_file))

                     (macro rename_conffile_sock_files ((type ARG1))
                            (allow ARG1 conffile rename_sock_file))

                     (macro search_conffile_dirs ((type ARG1))
                            (allow ARG1 conffile search_dir))

                     (macro write_conffile ((type ARG1))
                            (allow ARG1 conffile (allfiles (write))))

                     (macro write_conffile_blk_files ((type ARG1))
                            (allow ARG1 conffile write_blk_file))

                     (macro write_conffile_chr_files ((type ARG1))
                            (allow ARG1 conffile write_chr_file))

                     (macro write_conffile_dirs ((type ARG1))
                            (allow ARG1 conffile write_dir))

                     (macro write_conffile_fifo_files ((type ARG1))
                            (allow ARG1 conffile write_fifo_file))

                     (macro write_conffile_files ((type ARG1))
                            (allow ARG1 conffile write_file))

                     (macro writeinherited_conffile_blk_files ((type ARG1))
                            (allow ARG1 conffile writeinherited_blk_file))

                     (macro writeinherited_conffile_chr_files ((type ARG1))
                            (allow ARG1 conffile writeinherited_chr_file))

                     (macro writeinherited_conffile_dirs ((type ARG1))
                            (allow ARG1 conffile writeinherited_dir))

                     (macro writeinherited_conffile_fifo_files ((type ARG1))
                            (allow ARG1 conffile writeinherited_fifo_file))

                     (macro writeinherited_conffile_files ((type ARG1))
                            (allow ARG1 conffile writeinherited_file))

                     (macro writeinherited_conffile_sock_files ((type ARG1))
                            (allow ARG1 conffile writeinherited_sock_file))

                     (macro write_conffile_lnk_files ((type ARG1))
                            (allow ARG1 conffile write_lnk_file))

                     (macro write_conffile_sock_files ((type ARG1))
                            (allow ARG1 conffile write_sock_file))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_macro_template))

              (block obj_template

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_template)

                     (blockinherit .ngircd.conf.obj_base_template)
                     (blockinherit .ngircd.conf.obj_macro_template)))

       (block keyfiles

              ;;
              ;; Contexts
              ;;

              (filecon
               "/etc/ngircd/keyfiles"
               dir
               conffile_file_context)
              (filecon
               "/etc/ngircd/keyfiles/.*"
               any
               conffile_file_context)

              ;;
              ;; Macros
              ;;

              (macro obj_type_transition_conffile ((type ARG1))
                     (call .ngircd.conffile_obj_type_transition
                           (ARG1 conffile dir "keyfiles")))

              ;;
              ;; Policy
              ;;

              (blockinherit ngircd.conf.obj_template)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .fsck.subj_type_transition (subj)))

(in .file
    (call .fsck.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block fsck

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/fsck\..*"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "fsck.f2fs")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (allow subj self (capability (sys_rawio)))

       (call .sys.read_fs_lnk_files (subj))
       (call .sys.readwriteinherited_ptydev_chr_files (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))
       (call .dev.search_sysfile_dirs (subj))
       (call .dev.stor.readwrite.subj_type (subj))

       (call .devices.read_sysfile_files (subj))
       (call .devices.search_sysfile_dirs (subj))

       (call .file.read_conffile_lnk_file.subj_type (subj))

       (call .fs.search_sysfile_dirs (subj))

       (call .selinux.linked.subj_type (subj))

       (call .version.read_procfile_files (subj))

       (optional fsck_opt_dmstordev
                 (call .dm.readwrite_stordev_blk_files (subj)))

       (optional fsck_opt_hdstordev
                 (call .hd.readwrite_stordev_blk_files (subj)))

       (optional fsck_opt_mmcstordev
                 (call .mmc.readwrite_stordev_blk_files (subj)))

       (optional fsck_opt_nvmestordev
                 (call .nvme.readwrite_stordev_blk_files (subj)))

       (optional fsck_opt_sdstordev
                 (call .sd.readwrite_stordev_blk_files (subj)))

       (optional fsck_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj)))

       (optional fsck_opt_vdstordev
                 (call .vd.readwrite_stordev_blk_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .usbutil.subj_type_transition (subj)))

(in .file
    (call .usbutil.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block usbutil

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/lsusb"
        file
        execfile_file_context)
       (filecon
        "/usr/bin/usbreset"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "lsusb"))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "usbreset")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (allow subj self create_netlink_kobject_uevent_socket)

       (call .sys.getattr_filesystems (subj))
       (call .sys.read_fs_lnk_files (subj))
       (call .sys.readwriteinherited_ptydev_chr_files (subj))
       (call .sys.search_fs_dirs (subj))

       (call .bus.list_sysfile_dirs (subj))

       (call .debug.search_fs_dirs (subj))

       (call .dev.readwriteinherited_ttydev_chr_files (subj))

       (call .devices.read_sysfile_files (subj))
       (call .devices.search_sysfile_dirs (subj))

       (call .file.search_conffile_dirs (subj))

       (call .tmp.list_fs_dirs (subj))

       (call .usb.write_nodedev_chr_files (subj))

       (optional usbutil_opt_ttyd
                 (call .ttyd.readwriteinherited_ptydev_chr_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .wifi.subj_type_transition (subj)))

(in .file
    (call .wifi.libfile_obj_type_transition_miscfile
          (unconfined.subj_typeattr))
    (call .wifi.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block wifi

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/wifi"
        file
        execfile_file_context)

       (filecon
        "/usr/lib/wifi"
        dir
        miscfile_file_context)
       (filecon
        "/usr/lib/wifi/.*"
        any
        miscfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro libfile_obj_type_transition_miscfile ((type ARG1))
              (call .file.libfile_obj_type_transition
                    (ARG1 miscfile dir "wifi")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "wifi")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.misc.obj_template)

       (call list_miscfile_dirs (subj))
       (call read_miscfile_files (subj))

       ;; compat with genfs_seclabel_symlinks=0
       (call .sys.read_fs_lnk_files (subj))
       (call .sys.writeinherited_fifo_files (subj))

       (call .class.list_sysfile_dirs (subj))
       (call .class.read_sysfile_lnk_files (subj))

       (call .devices.list_sysfile_dirs (subj))
       (call .devices.read_sysfile_files (subj))
       (call .devices.read_sysfile_lnk_files (subj))

       (call .functions.read_miscfile_files (subj))
       (call .functions.search_miscfile_dirs (subj))

       (call .hotplugcall.use_fds (subj))

       (call .ifup.use_fds (subj))

       (call .iw.subj_type_transition (subj))

       (call .jshn.subj_type_transition (subj))

       (call .libubox.read_datafile_files (subj))
       (call .libubox.search_datafile_dirs (subj))

       (call .netifd.read_miscfile_files (subj))
       (call .netifd.search_miscfile_dirs (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .ubus.subj_type_transition (subj))

       (call .uci.addname_conffile_dirs (subj))
       (call .uci.create_conffile_files (subj))
       (call .uci.readwrite_conffile_files (subj))
       (call .uci.subj_type_transition (subj))

       (call .xattr.associate_filesystems (miscfile))

       (optional wifi_opt_rcnetwork
                 (call .rcnetwork.use_fds (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .mke2fs.subj_type_transition (subj)))

(in .file
    (call .mke2fs.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .mke2fs.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block mke2fs

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/e2fsck\.conf"
        file
        conffile_file_context)

       (filecon
        "/usr/bin/mke2fs"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "e2fsck.conf")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "mke2fs")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.conf.obj_template)

       (allow subj self create_unix_stream_socket)

       (call read_conffile_files (subj))

       (call .sys.read_fs_lnk_files (subj))
       (call .sys.search_fs_dirs (subj))
       (call .sys.writeinherited_fifo_files (subj))

       (call .dev.search_sysfile_dirs (subj))
       (call .dev.stor.readwrite.subj_type (subj))

       (call .devices.list_sysfile_dirs (subj))
       (call .devices.read_sysfile_files (subj))

       (call .ext4.read_sysfile_files (subj))
       (call .ext4.search_sysfile_dirs (subj))

       (call .file.search_conffile_dirs (subj))

       (call .fs.search_sysfile_dirs (subj))

       (call .random.read_nodedev_chr_files (subj))

       (optional mke2fs_opt_dmstordev
                 (call .dm.readwrite_stordev_blk_files (subj)))

       (optional mke2fs_opt_hdstordev
                 (call .hd.readwrite_stordev_blk_files (subj)))

       (optional mke2fs_opt_loopstordev
                 (call .loop.readwrite_stordev_blk_files (subj)))

       (optional mke2fs_opt_mmcstordev
                 (call .mmc.readwrite_stordev_blk_files (subj)))

       (optional mke2fs_opt_nvmestordev
                 (call .nvme.readwrite_stordev_blk_files (subj)))

       (optional mke2fs_opt_sdstordev
                 (call .sd.readwrite_stordev_blk_files (subj)))

       (optional mke2fs_opt_vdstordev
                 (call .vd.readwrite_stordev_blk_files (subj)))

       (optional mke2fs_opt_zramstordev
                 (call .zram.readwrite_stordev_blk_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .subj
    (call .ttyd.readwriteinherited_fifo_files (subj_typeattr)))

(in .sys
    (call .ttyd.subj_type_transition (subj)))

(in .file
    (call .ttyd.conffile_obj_type_transition_certfile
          (unconfined.subj_typeattr))
    (call .ttyd.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .ttyd.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr)))

(in ttyd

    ;;
    ;; Contexts
    ;;

    (filecon
     "/etc/ttyd\.crt"
     file
     certfile_file_context)
    (filecon
     "/etc/ttyd\.crt\..*"
     file
     certfile_file_context)
    (filecon
     "/etc/ttyd\.key"
     file
     certfile_file_context)
    (filecon
     "/etc/ttyd\.key\..*"
     file
     certfile_file_context)

    (filecon
     "/tmp/run/ttyd\.sock"
     socket
     runtimetmpfile_file_context)

    (filecon
     "/usr/bin/ttyd"
     file
     execfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro conffile_obj_type_transition_certfile ((type ARG1))
           (call .file.conffile_obj_type_transition
                 (ARG1 certfile file "ttyd.crt"))
           (call .file.conffile_obj_type_transition
                 (ARG1 certfile file "ttyd.key")))

    (macro obj_type_transition_execfile ((type ARG1))
           (call .file.execfile_obj_type_transition
                 (ARG1 execfile file "ttyd")))

    (macro obj_type_transition_ptydev ((type ARG1))
           (call .pts.fs_obj_type_transition
                 (ARG1 ptydev chr_file "*")))

    (macro obj_type_transition_runtimetmpfile ((type ARG1))
           (call .tmpfile.runtimetmpfile_obj_type_transition
                 (ARG1 runtimetmpfile sock_file "ttyd.sock")))

    (macro readwriteinherited_ptydev_chr_files ((type ARG1))
           (typeattributeset readwriteinherited_ptydev.subj_typeattr ARG1))

    (macro unix_stream_connect ((type ARG1))
           (call connectto_unix_stream_sockets (ARG1))
           (call write_runtimetmpfile_sock_files (ARG1)))

    (macro dontaudit_readwriteinherited_ptydev_chr_files ((type ARG1))
           (dontaudit ARG1 ptydev readwriteinherited_chr_file))

    ;;
    ;; Policy
    ;;

    (blockinherit .agent.base_template)
    (blockinherit .dev.pty.obj_template)
    (blockinherit .file.cert.obj_template)
    (blockinherit .tmpfile.runtime.obj_template)

    (allow subj self (capability (chown setgid setuid)))
    (allow subj self create_netlink_route_socket)
    (allow subj self create_unix_dgram_socket)
    (allow subj self create_unix_stream_socket)
    (allow subj self (netlink_route_socket (nlmsg_read)))
    (allow subj self (unix_stream_socket (accept listen)))

    (call read_certfile_files (subj))

    (call obj_type_transition_ptydev (subj))
    (call readwrite_ptydev_chr_files (subj))

    (call manage_runtimetmpfile_sock_files (subj))
    (call obj_type_transition_runtimetmpfile (subj))

    (call .sys.list_rootfile_dirs (subj))
    (call .sys.readwriteinherited_ptydev_chr_files (subj))
    (call .sys.readwriteinherited_fifo_files (subj))
    (call .sys.transition (subj))
    (call .sys.dontaudit_noatsecure (subj))
    (call .sys.dontaudit_rlimitinh (subj))
    (call .sys.dontaudit_siginh (subj))

    (call .dev.readwriteinherited_ttydev_chr_files (subj))

    (call .file.read_conffile_lnk_files (subj))

    (call .locale.read.subj_type (subj))

    (call .logd.unix_dgram_send (subj))

    (call .login.execute_execfile_files (subj))

    (call .nameservice.read_miscfile_files (subj))

    (call .net.egress_netifs (subj))
    ;; allow random port functionality
    (call .net.port.unreserved.tcp_bind_all_netports (subj))
    (call .net.sendto_netnodes (subj))
    (call .net.tcp_bind_netnodes (subj))

    (call .ptmx.readwrite_nodedev_chr_files (subj))

    (call .random.read_nodedev_chr_files (subj))

    (call .selinux.linked.subj_type (subj))

    ;; execute shell execfiles with an automatic transition to sys.subj by default
    (call .shell.execfile_subj_type_transition (subj .sys.subj))
    (call .shell.mapexecute_execfile_files (subj))
    (call .shell.read_execfile_files (subj))

    (call .subj.getpgid_all (subj))
    (call .subj.signal_all (subj))
    (call .subj.signull_all (subj))

    (call .tmpfile.deletename_runtimetmpfile_dirs (subj))

    (call .uci.execute_execfile_files (subj))
    (call .uci.read_conffile_files (subj))
    (call .uci.read_tmpfile_files (subj))
    (call .uci.search_conffile_dirs (subj))
    (call .uci.search_tmpfile_dirs (subj))

    (optional ttyd_opt_acme
              (call .acme.read_conffile_files (subj))
              (call .acme.read_conffile_lnk_files (subj))
              (call .acme.search_conffile_dirs (subj)))

    (optional ttyd_opt_sslcertfile
              (call .ssl.read.subj_type (subj)))

    (block readwriteinherited_ptydev

           ;;
           ;; Policy
           ;;

           (blockinherit .subj.subj_all_macro_template)

           (allowx subj_typeattr ptydev (ioctl chr_file (not (0x5412))))
           (allow subj_typeattr ptydev readwriteinherited_chr_file)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .jshn.subj_type_transition (subj)))

(in .file
    (call .jshn.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block jshn

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/jshn"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "jshn")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (call .sys.readwriteinherited_fifo_files (subj))
       (call .sys.dontaudit_readwrite_udp_sockets (subj))

       (call .board.manage_miscfile_files (subj))
       (call .board.conffile_obj_type_transition_miscfile (subj))
       (call .board.tmp_obj_type_transition_miscfile (subj))

       (call .boarddetect.writeinherited_fifo_files (subj))

       (call .configgenerate.writeinherited_fifo_files (subj))

       (call .devstatus.writeinherited_fifo_files (subj))

       (call .file.search_conffile_dirs (subj))

       (call .hotplugcall.writeinherited_fifo_files (subj))

       ;; might be a leak
       (call .net.readinherited_procfile_files (subj))

       (call .netifd.readwriteinherited_fifo_files (subj))
       (call .netifd.dontaudit_readwrite_netlink_kobject_uevent_sockets (subj))
       (call .netifd.dontaudit_readwrite_netlink_route_sockets (subj))

       (call .ntpdhotplug.writeinherited_fifo_files (subj))

       (call .odhcp6c.writeinherited_fifo_files (subj))

       (call .odhcpd.use_fds (subj))
       (call .odhcpd.dontaudit_readwrite_netlink_route_sockets (subj))

       (call .odhcpd.update.writeinherited_fifo_files (subj))

       (call .opkg.call.writeinherited_fifo_files (subj))
       (call .opkg.dontaudit_writeinherited_tmpfile_files (subj))

       (call .pppd.writeinherited_fifo_files (subj))
       (call .pppd.dontaudit_readwrite_packet_sockets (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .tmpfile.search_conftmpfile_dirs (subj))
       (call .tmpfile.search_statetmpfile_dirs (subj))

       (call .watchdog.dontaudit_writeinherited_nodedev_chr_files (subj))

       (call .wifi.writeinherited_fifo_files (subj))

       (optional jshn_opt_cgiio
                 (call .cgiio.writeinherited_fifo_files (subj)))

       (optional jshn_opt_initscript
                 (call .initscript.writeinherited_all_fifo_files (subj)))

       (optional jshn_opt_luci
                 (call .luci.cgi.writeinherited_fifo_files (subj)))

       (optional jshn_opt_uhttpd
                 (call .uhttpd.readinherited_fifo_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .netifd.subj_type_transition (subj)))

(in .file
    (call .netifd.libfile_obj_type_transition_miscfile
          (unconfined.subj_typeattr))
    (call .netifd.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .netifd.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block netifd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/udhcpc\.user"
        file
        conffile_file_context)
       (filecon
        "/etc/udhcpc\.user\..*"
        file
        conffile_file_context)
       (filecon
        "/etc/udhcpc\.user\.d"
        dir
        conffile_file_context)
       (filecon
        "/etc/udhcpc\.user\.d/.*"
        any
        conffile_file_context)

       (filecon
        "/tmp/run/hostapd-.*\.conf"
        file
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/hostapd-.*\.psk"
        file
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/hostapd-.*\.vlan"
        file
        runtimetmpfile_file_context)

       (filecon
        "/tmp/run/wifi-.*\.pid"
        file
        runtimetmpfile_file_context)

       (filecon
        "/tmp/run/udhcpc-.*\.pid"
        file
        runtimetmpfile_file_context)

       (filecon
        "/usr/bin/netifd"
        file
        execfile_file_context)

       (filecon
        "/usr/lib/netifd"
        dir
        miscfile_file_context)
       (filecon
        "/usr/lib/netifd/.*"
        any
        miscfile_file_context)

       ;;
       ;; Macro
       ;;

       (macro libfile_obj_type_transition_miscfile ((type ARG1))
              (call .file.libfile_obj_type_transition
                    (ARG1 miscfile dir "netifd")))

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "udhcpc.user.d"))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile file "udhcpc.user")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "netifd")))

       (macro obj_type_transition_runtimetmpfile ((type ARG1)(class ARG2)(name ARG3))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile ARG2 ARG3)))

       (macro dontaudit_readwrite_netlink_kobject_uevent_sockets ((type ARG1))
              (dontaudit ARG1 subj
                         (netlink_kobject_uevent_socket (read write))))

       (macro dontaudit_readwrite_netlink_route_sockets ((type ARG1))
              (dontaudit ARG1 subj (netlink_route_socket (read write))))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.conf.obj_template)
       (blockinherit .file.misc.obj_template)
       (blockinherit .tmpfile.runtime.obj_template)

       (allow subj self (capability (net_admin net_raw sys_ptrace)))
       (allow subj self create_netlink_kobject_uevent_socket)
       (allow subj self create_netlink_route_socket)
       (allow subj self create_packet_socket)
       (allow subj self create_rawip_socket)
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)
       (allow subj self create_unix_stream_socket)
       (allow subj self (netlink_route_socket (nlmsg_read nlmsg_write)))

       (call list_conffile_dirs (subj))
       (call read_conffile_files (subj))

       (call execute_miscfile_files (subj))
       (call list_miscfile_dirs (subj))

       (call manage_runtimetmpfile_files (subj))
       (call obj_type_transition_runtimetmpfile (subj file "*"))

       (call .sys.list_rootfile_dirs (subj))
       (call .sys.loadkernelmodule.subj_type (subj))
       ;; compat with genfs_seclabel_symlinks=0
       (call .sys.read_fs_lnk_files (subj))
       (call .sys.requestmodule (subj))
       (call .sys.search_sysctlfile_dirs (subj))

       (call .board.read_miscfile_files (subj))

       (call .class.list_sysfile_dirs (subj))
       (call .class.read_sysfile_lnk_files (subj))

       (call .devices.list_sysfile_dirs (subj))
       (call .devices.read_sysfile_lnk_files (subj))
       (call .devices.readwrite_sysfile_files (subj))

       (call .dhcp.udp_bind_netports (subj))

       (call .functions.read_miscfile_files (subj))
       (call .functions.search_miscfile_dirs (subj))

       (call .hotplugcall.subj_type_transition (subj))

       (call .ipcalc.subj_type_transition (subj))

       (call .ipv4.search_sysctlfile_dirs (subj))
       (call .ipv4.readwrite_sysctlfile_files (subj))
       (call .ipv6.search_sysctlfile_dirs (subj))
       (call .ipv6.readwrite_sysctlfile_files (subj))

       (call .iw.subj_type_transition (subj))

       (call .jshn.subj_type_transition (subj))

       (call .jsonfilter.subj_type_transition (subj))

       (call .kernel.read_sysctlfile_files (subj))
       (call .kernel.search_sysctlfile_dirs (subj))

       (call .kmodloader.subj_type_transition (subj))

       (call .libubox.read_datafile_files (subj))
       (call .libubox.search_datafile_dirs (subj))

       (call .logd.unix_dgram_send (subj))

       (call .net.egress_netifs (subj))
       (call .net.search_sysctlfile_dirs (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .odhcp6c.signal (subj))
       (call .odhcp6c.subj_type_transition (subj))

       (call .pppd.list_miscfile_dirs (subj))
       (call .pppd.read_miscfile_files (subj))
       (call .pppd.sigkill (subj))
       (call .pppd.signal (subj))
       (call .pppd.subj_type_transition (subj))

       (call .proc.list_fs_dirs (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .resolv.manage_tmpfile_dirs (subj))
       (call .resolv.manage_tmpfile_files (subj))
       (call .resolv.obj_type_transition_tmpfile (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .subj.read_state_all (subj))

       (call .sysfile.class.search_all_dirs (subj))

       (call .tmpfile.deletename_runtimetmpfile_dirs (subj))

       (call .ubus.subj_type_transition (subj))

       (call .ubusd.unix_stream_connect (subj))

       (call .uci.read_conffile_files (subj))
       (call .uci.read_tmpfile_files (subj))
       (call .uci.search_conffile_dirs (subj))
       (call .uci.search_tmpfile_dirs (subj))
       (call .uci.subj_type_transition (subj))

       (call .wpad.search_runtimetmpfile_dirs (subj))
       (call .wpad.signal (subj))
       (call .wpad.subj_type_transition (subj))

       (call .xattr.associate_filesystems (miscfile))

       (optional netifd_opt_fwenv
                 ;; local customisation, should not be needed
                 (call .fwenv.subj_type_transition (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .ipcalc.subj_type_transition (subj)))

(in .file
    (call .ipcalc.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block ipcalc

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/ipcalc\.sh"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "ipcalc.sh")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (call .sys.writeinherited_fifo_files (subj))

       (call .devstatus.use_fds (subj))

       (call .netifd.search_miscfile_dirs (subj))
       (call .netifd.readwriteinherited_fifo_files (subj))
       (call .netifd.dontaudit_readwrite_netlink_kobject_uevent_sockets (subj))
       (call .netifd.dontaudit_readwrite_netlink_route_sockets (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (optional ipcalc_opt_rcdnsmasq
                 (call .rcdnsmasq.writeinherited_fifo_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rpcd.subj_type_transition (subj)))

(in .file
    (call .rpcd.obj_type_transition_datafile (unconfined.subj_typeattr))
    (call .rpcd.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .rpcd.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr dir "rpcd")))

(block rpcd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/run/iwinfo.*"
        socket
        runtimetmpfile_file_context)

       (filecon
        "/tmp/run/rpcd"
        dir
        runtimetmpfile_file_context)
       (filecon
        "/tmp/run/rpcd/.*"
        any
        runtimetmpfile_file_context)

       (filecon
        "/usr/bin/rpcd"
        file
        execfile_file_context)

       (filecon
        "/usr/share/rpcd"
        dir
        datafile_file_context)
       (filecon
        "/usr/share/rpcd/.*"
        any
        datafile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_datafile ((type ARG1))
              (call .file.datafile_obj_type_transition
                    (ARG1 datafile dir "rpcd")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "rpcd")))

       (macro obj_type_transition_runtimetmpfile ((type ARG1)(class ARG2)(name ARG3))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile ARG2 ARG3)))

       (macro unix_dgram_send ((type ARG1))
              (call sendto_unix_dgram_sockets (ARG1))
              (call write_runtimetmpfile_sock_files (ARG1)))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.data.obj_template)
       (blockinherit .tmpfile.runtime.obj_template)

       (allow subj self (capability (kill net_admin net_raw setgid setuid)))
       (allow subj self create_netlink_generic_socket)
       (allow subj self create_netlink_route_socket)
       (allow subj self create_rawip_socket)
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)
       (allow subj self create_unix_stream_socket)
       (allow subj self (netlink_route_socket (nlmsg_read)))

       (call list_datafile_dirs (subj))
       (call read_datafile_files (subj))

       (call manage_runtimetmpfile_dirs (subj))
       (call manage_runtimetmpfile_files (subj))
       (call manage_runtimetmpfile_sock_files (subj))
       (call obj_type_transition_runtimetmpfile (subj dir "rpcd"))
       (call obj_type_transition_runtimetmpfile (subj sock_file "*"))

       (call .sys.loadkernelmodule.subj_type (subj))
       ;; compat with genfs_seclabel_symlinks=0
       (call .sys.read_fs_lnk_files (subj))
       (call .sys.requestmodule (subj))
       (call .sys.search_sysctlfile_dirs (subj))
       (call .sys.transition (subj))
       (call .sys.dontaudit_noatsecure (subj))
       (call .sys.dontaudit_rlimitinh (subj))
       (call .sys.dontaudit_siginh (subj))

       (call .board.read_miscfile_files (subj))

       (call .cgiio.delete_tmpfile_files (subj))
       (call .cgiio.read_tmpfile_files (subj))

       (call .class.read_sysfile_lnk_files (subj))
       (call .class.list_sysfile_dirs (subj))

       (call .cron.create_miscfile_files (subj))
       (call .cron.readwrite_miscfile_files (subj))
       (call .cron.addname_miscfile_dirs (subj))

       (call .devices.list_sysfile_dirs (subj))
       (call .devices.read_sysfile_files (subj))
       (call .devices.read_sysfile_lnk_files (subj))

       (call .dnsmasq.read_tmpfile_files (subj))

       (call .dropbear.addname_certfile_dirs (subj))
       (call .dropbear.create_certfile_files (subj))
       (call .dropbear.readwrite_certfile_files (subj))

       (call .file.list_execfile_dirs (subj))
       (call .file.search_initscriptfile_dirs (subj))

       (call .filesystems.read_procfile_files (subj))

       (call .firewall.readwrite_conffile_files (subj))

       (call .firstboot.subj_type_transition (subj))

       (call .fsck.subj_type_transition (subj))

       (call .ifup.subj_type_transition (subj))

       (call .iproute2.read_conffile_files (subj))
       (call .iproute2.search_conffile_dirs (subj))

       (call .kernel.read_sysctlfile_files (subj))
       (call .kernel.search_sysctlfile_dirs (subj))

       (call .libiwinfo.read_datafile_files (subj))
       (call .libiwinfo.search_datafile_dirs (subj))

       (call .logread.subj_type_transition (subj))

       (call .luci.subj_type_transition (subj))

       (call .mnt.search_miscfile_dirs (subj))

       (call .mtd.read_procfile_files (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .net.egress_netifs (subj))
       (call .net.read_procfile_files (subj))
       (call .net.read_procfile_lnk_files (subj))
       (call .net.search_sysctlfile_dirs (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.rawip_bind_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .netfilter.read_sysctlfile_files (subj))
       (call .netfilter.search_sysctlfile_dirs (subj))

       (call .netifd.read_runtimetmpfile_files (subj))

       (call .odhcpd.read_hoststmpfile_files (subj))

       (call .opkg.list_conffile_dirs (subj))
       (call .opkg.readwrite_conffile_files (subj))

       (call .partitions.read_procfile_files (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .rclocal.readwrite_conffile_files (subj))

       (call .resolv.read.subj_type (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shadow.read_authfile_files (subj))
       (call .shadow.read.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .subj.signal_all (subj))
       (call .subj.sigkill_all (subj))

       (call .sysupgrade.execfile_subj_type_transition (subj .sys.subj))
       (call .sysupgrade.mapexecute_execfile_files (subj))
       (call .sysupgrade.readwrite_conffile_files (subj))
       (call .sysupgrade.read_execfile_files (subj))

       (call .tmp.deletename_fs_dirs (subj))

       (call .tmpfile.deletename_runtimetmpfile_dirs (subj))
       (call .tmpfile.search_hoststmpfile_dirs (subj))

       (call .ubusd.unix_stream_connect (subj))

       (call .uci.readwrite_conffile_dirs (subj))
       (call .uci.list_tmpfile_dirs (subj))
       (call .uci.manage_conffile_files (subj))
       (call .uci.read_tmpfile_files (subj))

       (call .uhttpd.getattr_execfile_files (subj))

       (call .upgrade.read_miscfile_files (subj))
       (call .upgrade.search_miscfile_dirs (subj))

       (call .wifi.subj_type_transition (subj))

       (call .wpad.unix_dgram_send_runtimetmpfile (subj))

       (call .www.list_miscfile_dirs (subj))
       (call .www.read_miscfile_files (subj))

       (call .xattr.unmount_filesystems (subj))

       (call .xtables.subj_type_transition (subj))

       (optional rpcd_opt_blockmount
                 (call .blockmount.subj_type_transition (subj)))

       (optional rpcd_opt_ip
                 (call .ip.subj_type_transition (subj)))

       (optional rpcd_opt_rcfirewall
                 (call .rcfirewall.subj_type_transition (subj)))

       (optional rpcd_opt_sqm
                 (call .sqm.getattr_execfile_files (subj))
                 (call .sqm.getattr_runtimetmpfile_files (subj))
                 (call .sqm.list_runtimetmpfile_dirs (subj)))

       (optional rpcd_opt_wireguard
                 (call .wireguard.subj_type_transition (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .dropbear.subj_type_transition (subj)))

(in .file
    (call .dropbear.conffile_obj_type_transition_certfile
          (unconfined.subj_typeattr))
    (call .dropbear.tmp_obj_type_transition_certfile
          (unconfined.subj_typeattr dir "dropbear"))
    (call .dropbear.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .dropbear.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr file "dropbear.1.pid"))
    (call .dropbear.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr file "dropbear.2.pid"))
    (call .dropbear.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr file "dropbear.3.pid")))

(block dropbear

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/dropbear"
        dir
        certfile_file_context)
       (filecon
        "/etc/dropbear/.*"
        any
        certfile_file_context)

       (filecon
        "/tmp/dropbear"
        dir
        certfile_file_context)
       (filecon
        "/tmp/dropbear/.*"
        any
        certfile_file_context)

       (filecon
        "/tmp/run/dropbear\.[0-9]+\.pid"
        file
        runtimetmpfile_file_context)

       (filecon
        "/usr/bin/dropbear"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro auditexecute_execfile_files ((type ARG1))
              (allow ARG1 execfile (file (getattr execute))))

       (macro conffile_obj_type_transition_certfile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 certfile dir "dropbear")))

       (macro tmp_obj_type_transition_certfile
              ((type ARG1)(class ARG2)(name ARG3))
              (call .tmp.fs_obj_type_transition
                    (ARG1 certfile ARG2 ARG3)))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "dropbear")))

       (macro obj_type_transition_runtimetmpfile
              ((type ARG1)(class ARG2)(name ARG3))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile ARG2 ARG3)))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.cert.obj_template)
       (blockinherit .tmpfile.runtime.obj_template)

       (allow subj self (capability (setgid setuid)))
       (allow subj self (process (setrlimit)))
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)
       (allow subj self create_unix_stream_socket)

       (call manage_certfile_files (subj))
       (call readwrite_certfile_dirs (subj))
       (call tmp_obj_type_transition_certfile (subj file "*"))

       (call execute_execfile_files (subj))

       (call manage_runtimetmpfile_files (subj))
       (call obj_type_transition_runtimetmpfile (subj file "*"))

       (call .sys.obj_type_transition_ptydev (subj))
       (call .sys.readwrite_ptydev_chr_files (subj))
       (call .sys.search_sysctlfile_dirs (subj))
       (call .sys.setattr_ptydev_chr_files (subj))
       (call .sys.transition (subj))
       (call .sys.writeinherited_fifo_files (subj))
       (call .sys.dontaudit_noatsecure (subj))
       (call .sys.dontaudit_rlimitinh (subj))
       (call .sys.dontaudit_siginh (subj))

       (call .file.manage_homefile_dirs (subj))
       (call .file.manage_homefile_files (subj))
       (call .file.manage_homefile_lnk_files (subj))
       (call .file.search_conffile_dirs (subj))

       (call .interrupts.read_procfile_files (subj))

       (call .kernel.search_sysctlfile_dirs (subj))

       (call .loadavg.read_procfile_files (subj))

       (call .logd.unix_dgram_send (subj))

       (call .nameservice.read_miscfile_files (subj))

       (call .net.egress_netifs (subj))
       (call .net.port.unreserved.tcp_bind_all_netports (subj))
       (call .net.read_procfile_files (subj))
       (call .net.read_procfile_lnk_files (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.tcp_bind_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .ptmx.readwrite_nodedev_chr_files (subj))

       (call .random.read_sysctlfile_files (subj))
       (call .random.readwrite_nodedev_chr_files (subj))
       (call .random.search_sysctlfile_dirs (subj))

       (call .resolv.read.subj_type (subj))

       (call .shadow.read_authfile_files (subj))
       (call .shadow.read.subj_type (subj))

       (call .shell.execfile_subj_type_transition (subj .sys.subj))
       (call .shell.mapexecute_execfile_files (subj))
       (call .shell.read_execfile_files (subj))

       (call .shells.read_conffile_files (subj))

       (call .ssh.tcp_bind_netports (subj))
       (call .ssh.tcp_connect_netports (subj))

       (call .subj.interactivefd.subj_type (subj))

       (call .timerlist.read_procfile_files (subj))

       (call .tmp.associate_filesystems (certfile))
       (call .tmp.deletename_fs_dirs (subj))
       ;; scp tmpfs files created by sys.subj out
       (call .tmp.read_fs_files (subj))

       (call .tmpfile.deletename_runtimetmpfile_dirs (subj))

       (call .uci.read_conffile_files (subj))
       (call .uci.read_tmpfile_files (subj))
       (call .uci.search_conffile_dirs (subj))
       (call .uci.search_tmpfile_dirs (subj))

       (call .vmstat.read_procfile_files (subj))

       (optional dropbear_opt_rcdropbear
                 (call .rcdropbear.use_fds (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .jsonfilter.subj_type_transition (subj)))

(in .file
    (call .jsonfilter.obj_type_transition_execfile (unconfined.subj_typeattr)))

(block jsonfilter

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/jsonfilter"
        file
        execfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "jsonfilter")))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)

       (call .sys.readwriteinherited_fifo_files (subj))
       (call .sys.dontaudit_readwrite_udp_sockets (subj))

       (call .file.search_conffile_dirs (subj))

       (call .hotplugcall.writeinherited_fifo_files (subj))

       (call .netifd.readwriteinherited_fifo_files (subj))
       (call .netifd.dontaudit_readwrite_netlink_kobject_uevent_sockets (subj))
       (call .netifd.dontaudit_readwrite_netlink_route_sockets (subj))

       (call .random.read_nodedev_chr_files (subj))

       (optional jsonfilter_opt_initscript
                 (call .initscript.readwriteinherited_all_fifo_files (subj)))

       (optional jsonfilter_opt_luci
                 (call .luci.cgi.writeinherited_fifo_files (subj)))

       (optional jsonfilter_opt_uhttpd
                 (call .uhttpd.readinherited_fifo_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block debugfile

       ;;
       ;; Policy
       ;;

       (blockinherit .file.obj_all_macro_template)

       (call .file.obj_type (obj_typeattr))

       (call .debug.associate_filesystems (obj_typeattr))

       (optional debugfile_opt_sandbox
                 (call .file.sandboxexception.obj_type (obj_typeattr)))

       ;;
       ;; Templates
       ;;

       (block obj_base_template

              ;;
              ;; Contexts
              ;;

              (context
               debugfile_file_context
               (.u
                .r
                debugfile
                (systemlow
                 systemlow)))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_base_template)

              (type
               debugfile)

              (call .debugfile.obj_type (debugfile)))

       (block obj_macro_template

              ;;
              ;; Macros
              ;;

              (macro addname_debugfile_dirs ((type ARG1))
                     (allow ARG1 debugfile addname_dir))

              (macro append_debugfile_blk_files ((type ARG1))
                     (allow ARG1 debugfile append_blk_file))

              (macro append_debugfile_chr_files ((type ARG1))
                     (allow ARG1 debugfile append_chr_file))

              (macro append_debugfile_fifo_files ((type ARG1))
                     (allow ARG1 debugfile append_fifo_file))

              (macro append_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile append_file))

              (macro appendinherited_debugfile_blk_files ((type ARG1))
                     (allow ARG1 debugfile appendinherited_blk_file))

              (macro appendinherited_debugfile_chr_files ((type ARG1))
                     (allow ARG1 debugfile appendinherited_chr_file))

              (macro appendinherited_debugfile_fifo_files ((type ARG1))
                     (allow ARG1 debugfile appendinherited_fifo_file))

              (macro appendinherited_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile appendinherited_file))

              (macro create_debugfile ((type ARG1))
                     (allow ARG1 debugfile (allfiles (create))))

              (macro create_debugfile_blk_files ((type ARG1))
                     (allow ARG1 debugfile create_blk_file))

              (macro create_debugfile_chr_files ((type ARG1))
                     (allow ARG1 debugfile create_chr_file))

              (macro create_debugfile_dirs ((type ARG1))
                     (allow ARG1 debugfile create_dir))

              (macro create_debugfile_fifo_files ((type ARG1))
                     (allow ARG1 debugfile create_fifo_file))

              (macro create_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile create_file))

              (macro create_debugfile_lnk_files ((type ARG1))
                     (allow ARG1 debugfile create_lnk_file))

              (macro create_debugfile_sock_files ((type ARG1))
                     (allow ARG1 debugfile create_sock_file))

              (macro debugfile_obj_type_transition
                     ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                     (typetransition ARG1 debugfile ARG3 ARG4 ARG2)
                     (call addname_debugfile_dirs (ARG1)))

              (macro deletename_debugfile_dirs ((type ARG1))
                     (allow ARG1 debugfile deletename_dir))

              (macro delete_debugfile ((type ARG1))
                     (allow ARG1 debugfile (allfiles (delete))))

              (macro delete_debugfile_blk_files ((type ARG1))
                     (allow ARG1 debugfile delete_blk_file))

              (macro delete_debugfile_chr_files ((type ARG1))
                     (allow ARG1 debugfile delete_chr_file))

              (macro delete_debugfile_dirs ((type ARG1))
                     (allow ARG1 debugfile delete_dir))

              (macro delete_debugfile_fifo_files ((type ARG1))
                     (allow ARG1 debugfile delete_fifo_file))

              (macro delete_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile delete_file))

              (macro delete_debugfile_lnk_files ((type ARG1))
                     (allow ARG1 debugfile delete_lnk_file))

              (macro delete_debugfile_sock_files ((type ARG1))
                     (allow ARG1 debugfile delete_sock_file))

              (macro execute_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile execute_file))

              (macro list_debugfile_dirs ((type ARG1))
                     (allow ARG1 debugfile list_dir))

              (macro listinherited_debugfile_dirs ((type ARG1))
                     (allow ARG1 debugfile listinherited_dir))

              (macro manage_debugfile ((type ARG1))
                     (allow ARG1 debugfile (allfiles (manage))))

              (macro manage_debugfile_blk_files ((type ARG1))
                     (allow ARG1 debugfile manage_blk_file))

              (macro manage_debugfile_chr_files ((type ARG1))
                     (allow ARG1 debugfile manage_chr_file))

              (macro manage_debugfile_dirs ((type ARG1))
                     (allow ARG1 debugfile manage_dir))

              (macro manage_debugfile_fifo_files ((type ARG1))
                     (allow ARG1 debugfile manage_fifo_file))

              (macro manage_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile manage_file))

              (macro manage_debugfile_lnk_files ((type ARG1))
                     (allow ARG1 debugfile manage_lnk_file))

              (macro manage_debugfile_sock_files ((type ARG1))
                     (allow ARG1 debugfile manage_sock_file))

              (macro mapexecute_debugfile_chr_files ((type ARG1))
                     (allow ARG1 debugfile mapexecute_chr_file))

              (macro mapexecute_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile mapexecute_file))

              (macro mounton_debugfile ((type ARG1))
                     (allow ARG1 debugfile (allfiles (mounton))))

              (macro mounton_debugfile_blk_files ((type ARG1))
                     (allow ARG1 debugfile mounton_blk_file))

              (macro mounton_debugfile_chr_files ((type ARG1))
                     (allow ARG1 debugfile mounton_chr_file))

              (macro mounton_debugfile_dirs ((type ARG1))
                     (allow ARG1 debugfile mounton_dir))

              (macro mounton_debugfile_fifo_files ((type ARG1))
                     (allow ARG1 debugfile mounton_fifo_file))

              (macro mounton_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile mounton_file))

              (macro mounton_debugfile_lnk_files ((type ARG1))
                     (allow ARG1 debugfile mounton_lnk_file))

              (macro mounton_debugfile_sock_files ((type ARG1))
                     (allow ARG1 debugfile mounton_sock_file))

              (macro read_debugfile ((type ARG1))
                     (allow ARG1 debugfile (allfiles (read))))

              (macro read_debugfile_blk_files ((type ARG1))
                     (allow ARG1 debugfile read_blk_file))

              (macro read_debugfile_chr_files ((type ARG1))
                     (allow ARG1 debugfile read_chr_file))

              (macro read_debugfile_fifo_files ((type ARG1))
                     (allow ARG1 debugfile read_fifo_file))

              (macro read_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile read_file))

              (macro read_debugfile_lnk_files ((type ARG1))
                     (allow ARG1 debugfile read_lnk_file))

              (macro read_debugfile_sock_files ((type ARG1))
                     (allow ARG1 debugfile read_sock_file))

              (macro readinherited_debugfile_blk_files ((type ARG1))
                     (allow ARG1 debugfile readinherited_blk_file))

              (macro readinherited_debugfile_chr_files ((type ARG1))
                     (allow ARG1 debugfile readinherited_chr_file))

              (macro readinherited_debugfile_fifo_files ((type ARG1))
                     (allow ARG1 debugfile readinherited_fifo_file))

              (macro readinherited_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile readinherited_file))

              (macro readinherited_debugfile_sock_files ((type ARG1))
                     (allow ARG1 debugfile readinherited_sock_file))

              (macro readwrite_debugfile ((type ARG1))
                     (allow ARG1 debugfile (allfiles (readwrite))))

              (macro readwrite_debugfile_blk_files ((type ARG1))
                     (allow ARG1 debugfile readwrite_blk_file))

              (macro readwrite_debugfile_chr_files ((type ARG1))
                     (allow ARG1 debugfile readwrite_chr_file))

              (macro readwrite_debugfile_dirs ((type ARG1))
                     (allow ARG1 debugfile readwrite_dir))

              (macro readwrite_debugfile_fifo_files ((type ARG1))
                     (allow ARG1 debugfile readwrite_fifo_file))

              (macro readwrite_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile readwrite_file))

              (macro readwrite_debugfile_lnk_files ((type ARG1))
                     (allow ARG1 debugfile readwrite_lnk_file))

              (macro readwrite_debugfile_sock_files ((type ARG1))
                     (allow ARG1 debugfile readwrite_sock_file))

              (macro readwriteinherited_debugfile_blk_files ((type ARG1))
                     (allow ARG1 debugfile readwriteinherited_blk_file))

              (macro readwriteinherited_debugfile_chr_files ((type ARG1))
                     (allow ARG1 debugfile readwriteinherited_chr_file))

              (macro readwriteinherited_debugfile_dirs ((type ARG1))
                     (allow ARG1 debugfile readwriteinherited_dir))

              (macro readwriteinherited_debugfile_fifo_files ((type ARG1))
                     (allow ARG1 debugfile readwriteinherited_fifo_file))

              (macro readwriteinherited_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile readwriteinherited_file))

              (macro readwriteinherited_debugfile_sock_files ((type ARG1))
                     (allow ARG1 debugfile readwriteinherited_sock_file))

              (macro relabel_debugfile ((type ARG1))
                     (allow ARG1 debugfile (allfiles (relabel))))

              (macro relabel_debugfile_blk_files ((type ARG1))
                     (allow ARG1 debugfile relabel_blk_file))

              (macro relabel_debugfile_chr_files ((type ARG1))
                     (allow ARG1 debugfile relabel_chr_file))

              (macro relabel_debugfile_dirs ((type ARG1))
                     (allow ARG1 debugfile relabel_dir))

              (macro relabel_debugfile_fifo_files ((type ARG1))
                     (allow ARG1 debugfile relabel_fifo_file))

              (macro relabel_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile relabel_file))

              (macro relabel_debugfile_lnk_files ((type ARG1))
                     (allow ARG1 debugfile relabel_lnk_file))

              (macro relabel_debugfile_sock_files ((type ARG1))
                     (allow ARG1 debugfile relabel_sock_file))

              (macro relabelfrom_debugfile ((type ARG1))
                     (allow ARG1 debugfile (allfiles (relabelfrom))))

              (macro relabelfrom_debugfile_blk_files ((type ARG1))
                     (allow ARG1 debugfile relabelfrom_blk_file))

              (macro relabelfrom_debugfile_chr_files ((type ARG1))
                     (allow ARG1 debugfile relabelfrom_chr_file))

              (macro relabelfrom_debugfile_dirs ((type ARG1))
                     (allow ARG1 debugfile relabelfrom_dir))

              (macro relabelfrom_debugfile_fifo_files ((type ARG1))
                     (allow ARG1 debugfile relabelfrom_fifo_file))

              (macro relabelfrom_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile relabelfrom_file))

              (macro relabelfrom_debugfile_lnk_files ((type ARG1))
                     (allow ARG1 debugfile relabelfrom_lnk_file))

              (macro relabelfrom_debugfile_sock_files ((type ARG1))
                     (allow ARG1 debugfile relabelfrom_sock_file))

              (macro relabelto_debugfile ((type ARG1))
                     (allow ARG1 debugfile (allfiles (relabelto))))

              (macro relabelto_debugfile_blk_files ((type ARG1))
                     (allow ARG1 debugfile relabelto_blk_file))

              (macro relabelto_debugfile_chr_files ((type ARG1))
                     (allow ARG1 debugfile relabelto_chr_file))

              (macro relabelto_debugfile_dirs ((type ARG1))
                     (allow ARG1 debugfile relabelto_dir))

              (macro relabelto_debugfile_fifo_files ((type ARG1))
                     (allow ARG1 debugfile relabelto_fifo_file))

              (macro relabelto_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile relabelto_file))

              (macro relabelto_debugfile_lnk_files ((type ARG1))
                     (allow ARG1 debugfile relabelto_lnk_file))

              (macro relabelto_debugfile_sock_files ((type ARG1))
                     (allow ARG1 debugfile relabelto_sock_file))

              (macro rename_debugfile ((type ARG1))
                     (allow ARG1 debugfile (allfiles (rename))))

              (macro rename_debugfile_blk_files ((type ARG1))
                     (allow ARG1 debugfile rename_blk_file))

              (macro rename_debugfile_chr_files ((type ARG1))
                     (allow ARG1 debugfile rename_chr_file))

              (macro rename_debugfile_dirs ((type ARG1))
                     (allow ARG1 debugfile rename_dir))

              (macro rename_debugfile_fifo_files ((type ARG1))
                     (allow ARG1 debugfile rename_fifo_file))

              (macro rename_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile rename_file))

              (macro rename_debugfile_lnk_files ((type ARG1))
                     (allow ARG1 debugfile rename_lnk_file))

              (macro rename_debugfile_sock_files ((type ARG1))
                     (allow ARG1 debugfile rename_sock_file))

              (macro search_debugfile_dirs ((type ARG1))
                     (allow ARG1 debugfile search_dir))

              (macro write_debugfile ((type ARG1))
                     (allow ARG1 debugfile (allfiles (write))))

              (macro write_debugfile_blk_files ((type ARG1))
                     (allow ARG1 debugfile write_blk_file))

              (macro write_debugfile_chr_files ((type ARG1))
                     (allow ARG1 debugfile write_chr_file))

              (macro write_debugfile_dirs ((type ARG1))
                     (allow ARG1 debugfile write_dir))

              (macro write_debugfile_fifo_files ((type ARG1))
                     (allow ARG1 debugfile write_fifo_file))

              (macro write_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile write_file))

              (macro write_debugfile_lnk_files ((type ARG1))
                     (allow ARG1 debugfile write_lnk_file))

              (macro write_debugfile_sock_files ((type ARG1))
                     (allow ARG1 debugfile write_sock_file))

              (macro writeinherited_debugfile_blk_files ((type ARG1))
                     (allow ARG1 debugfile writeinherited_blk_file))

              (macro writeinherited_debugfile_chr_files ((type ARG1))
                     (allow ARG1 debugfile writeinherited_chr_file))

              (macro writeinherited_debugfile_dirs ((type ARG1))
                     (allow ARG1 debugfile writeinherited_dir))

              (macro writeinherited_debugfile_fifo_files ((type ARG1))
                     (allow ARG1 debugfile writeinherited_fifo_file))

              (macro writeinherited_debugfile_files ((type ARG1))
                     (allow ARG1 debugfile writeinherited_file))

              (macro writeinherited_debugfile_sock_files ((type ARG1))
                     (allow ARG1 debugfile writeinherited_sock_file))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_macro_template))

       (block obj_template

              ;;
              ;; Policy
              ;;

              (blockabstract obj_template)

              (blockinherit .debugfile.obj_base_template)
              (blockinherit .debugfile.obj_macro_template)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block unconfined

       ;;
       ;; Policy
       ;;

       (blockinherit .subj.subj_all_macro_template)

       (call .sys.unconfined.subj_type (subj_typeattr))
       (call .dev.unconfined.subj_type (subj_typeattr))
       (call .file.unconfined.subj_type (subj_typeattr))
       (call .fs.unconfined.subj_type (subj_typeattr))
       (call .net.unconfined.subj_type (subj_typeattr))
       (call .selinux.unconfined.subj_type (subj_typeattr))
       (call .subj.unconfined.subj_type (subj_typeattr)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block sysfile

       ;;
       ;; Policy
       ;;

       (blockinherit .file.obj_all_macro_template)

       (call .file.obj_type (obj_typeattr))

       (call .sys.associate_filesystems (obj_typeattr))

       ;;
       ;; Templates
       ;;

       (block obj_base_template

              ;;
              ;; Contexts
              ;;

              (context
               sysfile_file_context
               (.u
                .r
                sysfile
                (systemlow
                 systemlow)))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_base_template)

              (type
               sysfile)

              (call .sysfile.obj_type (sysfile)))

       (block obj_macro_template

              ;;
              ;; Macros
              ;;

              (macro addname_sysfile_dirs ((type ARG1))
                     (allow ARG1 sysfile addname_dir))

              (macro append_sysfile_blk_files ((type ARG1))
                     (allow ARG1 sysfile append_blk_file))

              (macro append_sysfile_chr_files ((type ARG1))
                     (allow ARG1 sysfile append_chr_file))

              (macro append_sysfile_fifo_files ((type ARG1))
                     (allow ARG1 sysfile append_fifo_file))

              (macro append_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile append_file))

              (macro appendinherited_sysfile_blk_files ((type ARG1))
                     (allow ARG1 sysfile appendinherited_blk_file))

              (macro appendinherited_sysfile_chr_files ((type ARG1))
                     (allow ARG1 sysfile appendinherited_chr_file))

              (macro appendinherited_sysfile_fifo_files ((type ARG1))
                     (allow ARG1 sysfile appendinherited_fifo_file))

              (macro appendinherited_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile appendinherited_file))

              (macro create_sysfile ((type ARG1))
                     (allow ARG1 sysfile (allfiles (create))))

              (macro create_sysfile_blk_files ((type ARG1))
                     (allow ARG1 sysfile create_blk_file))

              (macro create_sysfile_chr_files ((type ARG1))
                     (allow ARG1 sysfile create_chr_file))

              (macro create_sysfile_dirs ((type ARG1))
                     (allow ARG1 sysfile create_dir))

              (macro create_sysfile_fifo_files ((type ARG1))
                     (allow ARG1 sysfile create_fifo_file))

              (macro create_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile create_file))

              (macro create_sysfile_lnk_files ((type ARG1))
                     (allow ARG1 sysfile create_lnk_file))

              (macro create_sysfile_sock_files ((type ARG1))
                     (allow ARG1 sysfile create_sock_file))

              (macro deletename_sysfile_dirs ((type ARG1))
                     (allow ARG1 sysfile deletename_dir))

              (macro delete_sysfile ((type ARG1))
                     (allow ARG1 sysfile (allfiles (delete))))

              (macro delete_sysfile_blk_files ((type ARG1))
                     (allow ARG1 sysfile delete_blk_file))

              (macro delete_sysfile_chr_files ((type ARG1))
                     (allow ARG1 sysfile delete_chr_file))

              (macro delete_sysfile_dirs ((type ARG1))
                     (allow ARG1 sysfile delete_dir))

              (macro delete_sysfile_fifo_files ((type ARG1))
                     (allow ARG1 sysfile delete_fifo_file))

              (macro delete_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile delete_file))

              (macro delete_sysfile_lnk_files ((type ARG1))
                     (allow ARG1 sysfile delete_lnk_file))

              (macro delete_sysfile_sock_files ((type ARG1))
                     (allow ARG1 sysfile delete_sock_file))

              (macro execute_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile execute_file))

              (macro list_sysfile_dirs ((type ARG1))
                     (allow ARG1 sysfile list_dir))

              (macro listinherited_sysfile_dirs ((type ARG1))
                     (allow ARG1 sysfile listinherited_dir))

              (macro manage_sysfile ((type ARG1))
                     (allow ARG1 sysfile (allfiles (manage))))

              (macro manage_sysfile_blk_files ((type ARG1))
                     (allow ARG1 sysfile manage_blk_file))

              (macro manage_sysfile_chr_files ((type ARG1))
                     (allow ARG1 sysfile manage_chr_file))

              (macro manage_sysfile_dirs ((type ARG1))
                     (allow ARG1 sysfile manage_dir))

              (macro manage_sysfile_fifo_files ((type ARG1))
                     (allow ARG1 sysfile manage_fifo_file))

              (macro manage_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile manage_file))

              (macro manage_sysfile_lnk_files ((type ARG1))
                     (allow ARG1 sysfile manage_lnk_file))

              (macro manage_sysfile_sock_files ((type ARG1))
                     (allow ARG1 sysfile manage_sock_file))

              (macro mapexecute_sysfile_chr_files ((type ARG1))
                     (allow ARG1 sysfile mapexecute_chr_file))

              (macro mapexecute_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile mapexecute_file))

              (macro mounton_sysfile ((type ARG1))
                     (allow ARG1 sysfile (allfiles (mounton))))

              (macro mounton_sysfile_blk_files ((type ARG1))
                     (allow ARG1 sysfile mounton_blk_file))

              (macro mounton_sysfile_chr_files ((type ARG1))
                     (allow ARG1 sysfile mounton_chr_file))

              (macro mounton_sysfile_dirs ((type ARG1))
                     (allow ARG1 sysfile mounton_dir))

              (macro mounton_sysfile_fifo_files ((type ARG1))
                     (allow ARG1 sysfile mounton_fifo_file))

              (macro mounton_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile mounton_file))

              (macro mounton_sysfile_lnk_files ((type ARG1))
                     (allow ARG1 sysfile mounton_lnk_file))

              (macro mounton_sysfile_sock_files ((type ARG1))
                     (allow ARG1 sysfile mounton_sock_file))

              (macro read_sysfile ((type ARG1))
                     (allow ARG1 sysfile (allfiles (read))))

              (macro read_sysfile_blk_files ((type ARG1))
                     (allow ARG1 sysfile read_blk_file))

              (macro read_sysfile_chr_files ((type ARG1))
                     (allow ARG1 sysfile read_chr_file))

              (macro read_sysfile_fifo_files ((type ARG1))
                     (allow ARG1 sysfile read_fifo_file))

              (macro read_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile read_file))

              (macro read_sysfile_lnk_files ((type ARG1))
                     (allow ARG1 sysfile read_lnk_file))

              (macro read_sysfile_sock_files ((type ARG1))
                     (allow ARG1 sysfile read_sock_file))

              (macro readinherited_sysfile_blk_files ((type ARG1))
                     (allow ARG1 sysfile readinherited_blk_file))

              (macro readinherited_sysfile_chr_files ((type ARG1))
                     (allow ARG1 sysfile readinherited_chr_file))

              (macro readinherited_sysfile_fifo_files ((type ARG1))
                     (allow ARG1 sysfile readinherited_fifo_file))

              (macro readinherited_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile readinherited_file))

              (macro readinherited_sysfile_sock_files ((type ARG1))
                     (allow ARG1 sysfile readinherited_sock_file))

              (macro readwrite_sysfile ((type ARG1))
                     (allow ARG1 sysfile (allfiles (readwrite))))

              (macro readwrite_sysfile_blk_files ((type ARG1))
                     (allow ARG1 sysfile readwrite_blk_file))

              (macro readwrite_sysfile_chr_files ((type ARG1))
                     (allow ARG1 sysfile readwrite_chr_file))

              (macro readwrite_sysfile_dirs ((type ARG1))
                     (allow ARG1 sysfile readwrite_dir))

              (macro readwrite_sysfile_fifo_files ((type ARG1))
                     (allow ARG1 sysfile readwrite_fifo_file))

              (macro readwrite_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile readwrite_file))

              (macro readwrite_sysfile_lnk_files ((type ARG1))
                     (allow ARG1 sysfile readwrite_lnk_file))

              (macro readwrite_sysfile_sock_files ((type ARG1))
                     (allow ARG1 sysfile readwrite_sock_file))

              (macro readwriteinherited_sysfile_blk_files ((type ARG1))
                     (allow ARG1 sysfile readwriteinherited_blk_file))

              (macro readwriteinherited_sysfile_chr_files ((type ARG1))
                     (allow ARG1 sysfile readwriteinherited_chr_file))

              (macro readwriteinherited_sysfile_dirs ((type ARG1))
                     (allow ARG1 sysfile readwriteinherited_dir))

              (macro readwriteinherited_sysfile_fifo_files ((type ARG1))
                     (allow ARG1 sysfile readwriteinherited_fifo_file))

              (macro readwriteinherited_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile readwriteinherited_file))

              (macro readwriteinherited_sysfile_sock_files ((type ARG1))
                     (allow ARG1 sysfile readwriteinherited_sock_file))

              (macro relabel_sysfile ((type ARG1))
                     (allow ARG1 sysfile (allfiles (relabel))))

              (macro relabel_sysfile_blk_files ((type ARG1))
                     (allow ARG1 sysfile relabel_blk_file))

              (macro relabel_sysfile_chr_files ((type ARG1))
                     (allow ARG1 sysfile relabel_chr_file))

              (macro relabel_sysfile_dirs ((type ARG1))
                     (allow ARG1 sysfile relabel_dir))

              (macro relabel_sysfile_fifo_files ((type ARG1))
                     (allow ARG1 sysfile relabel_fifo_file))

              (macro relabel_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile relabel_file))

              (macro relabel_sysfile_lnk_files ((type ARG1))
                     (allow ARG1 sysfile relabel_lnk_file))

              (macro relabel_sysfile_sock_files ((type ARG1))
                     (allow ARG1 sysfile relabel_sock_file))

              (macro relabelfrom_sysfile ((type ARG1))
                     (allow ARG1 sysfile (allfiles (relabelfrom))))

              (macro relabelfrom_sysfile_blk_files ((type ARG1))
                     (allow ARG1 sysfile relabelfrom_blk_file))

              (macro relabelfrom_sysfile_chr_files ((type ARG1))
                     (allow ARG1 sysfile relabelfrom_chr_file))

              (macro relabelfrom_sysfile_dirs ((type ARG1))
                     (allow ARG1 sysfile relabelfrom_dir))

              (macro relabelfrom_sysfile_fifo_files ((type ARG1))
                     (allow ARG1 sysfile relabelfrom_fifo_file))

              (macro relabelfrom_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile relabelfrom_file))

              (macro relabelfrom_sysfile_lnk_files ((type ARG1))
                     (allow ARG1 sysfile relabelfrom_lnk_file))

              (macro relabelfrom_sysfile_sock_files ((type ARG1))
                     (allow ARG1 sysfile relabelfrom_sock_file))

              (macro relabelto_sysfile ((type ARG1))
                     (allow ARG1 sysfile (allfiles (relabelto))))

              (macro relabelto_sysfile_blk_files ((type ARG1))
                     (allow ARG1 sysfile relabelto_blk_file))

              (macro relabelto_sysfile_chr_files ((type ARG1))
                     (allow ARG1 sysfile relabelto_chr_file))

              (macro relabelto_sysfile_dirs ((type ARG1))
                     (allow ARG1 sysfile relabelto_dir))

              (macro relabelto_sysfile_fifo_files ((type ARG1))
                     (allow ARG1 sysfile relabelto_fifo_file))

              (macro relabelto_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile relabelto_file))

              (macro relabelto_sysfile_lnk_files ((type ARG1))
                     (allow ARG1 sysfile relabelto_lnk_file))

              (macro relabelto_sysfile_sock_files ((type ARG1))
                     (allow ARG1 sysfile relabelto_sock_file))

              (macro rename_sysfile ((type ARG1))
                     (allow ARG1 sysfile (allfiles (rename))))

              (macro rename_sysfile_blk_files ((type ARG1))
                     (allow ARG1 sysfile rename_blk_file))

              (macro rename_sysfile_chr_files ((type ARG1))
                     (allow ARG1 sysfile rename_chr_file))

              (macro rename_sysfile_dirs ((type ARG1))
                     (allow ARG1 sysfile rename_dir))

              (macro rename_sysfile_fifo_files ((type ARG1))
                     (allow ARG1 sysfile rename_fifo_file))

              (macro rename_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile rename_file))

              (macro rename_sysfile_lnk_files ((type ARG1))
                     (allow ARG1 sysfile rename_lnk_file))

              (macro rename_sysfile_sock_files ((type ARG1))
                     (allow ARG1 sysfile rename_sock_file))

              (macro search_sysfile_dirs ((type ARG1))
                     (allow ARG1 sysfile search_dir))

              (macro sysfile_obj_type_transition
                     ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                     (typetransition ARG1 sysfile ARG3 ARG4 ARG2)
                     (call addname_sysfile_dirs (ARG1)))

              (macro write_sysfile ((type ARG1))
                     (allow ARG1 sysfile (allfiles (write))))

              (macro write_sysfile_blk_files ((type ARG1))
                     (allow ARG1 sysfile write_blk_file))

              (macro write_sysfile_chr_files ((type ARG1))
                     (allow ARG1 sysfile write_chr_file))

              (macro write_sysfile_dirs ((type ARG1))
                     (allow ARG1 sysfile write_dir))

              (macro write_sysfile_fifo_files ((type ARG1))
                     (allow ARG1 sysfile write_fifo_file))

              (macro write_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile write_file))

              (macro write_sysfile_lnk_files ((type ARG1))
                     (allow ARG1 sysfile write_lnk_file))

              (macro write_sysfile_sock_files ((type ARG1))
                     (allow ARG1 sysfile write_sock_file))

              (macro writeinherited_sysfile_blk_files ((type ARG1))
                     (allow ARG1 sysfile writeinherited_blk_file))

              (macro writeinherited_sysfile_chr_files ((type ARG1))
                     (allow ARG1 sysfile writeinherited_chr_file))

              (macro writeinherited_sysfile_dirs ((type ARG1))
                     (allow ARG1 sysfile writeinherited_dir))

              (macro writeinherited_sysfile_fifo_files ((type ARG1))
                     (allow ARG1 sysfile writeinherited_fifo_file))

              (macro writeinherited_sysfile_files ((type ARG1))
                     (allow ARG1 sysfile writeinherited_file))

              (macro writeinherited_sysfile_sock_files ((type ARG1))
                     (allow ARG1 sysfile writeinherited_sock_file))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_macro_template))

       (block obj_template

              ;;
              ;; Policy
              ;;

              (blockabstract obj_template)

              (blockinherit .sysfile.obj_base_template)
              (blockinherit .sysfile.obj_macro_template)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block class

       ;;
       ;; Contexts
       ;;

       (genfscon
        "sysfs"
        "/class"
        sysfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysfile.class.obj_template))

(in .sysfile

    (block class

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysfile.obj_base_template)

                  (call .sysfile.class.obj_type (sysfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysfile.class.obj_base_template)
                  (blockinherit .sysfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block f2fs

       ;;
       ;; Contexts
       ;;

       (genfscon
        "sysfs"
        "/fs/f2fs"
        sysfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysfile.fs.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in fuse

    ;;
    ;; Contexts
    ;;

    (genfscon
     "sysfs"
     "/fs/fuse"
     sysfile_file_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .sysfile.fs.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block btrfs

       ;;
       ;; Contexts
       ;;

       (genfscon
        "sysfs"
        "/fs/btrfs"
        sysfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysfile.fs.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block ext4

       ;;
       ;; Contexts
       ;;

       (genfscon
        "sysfs"
        "/fs/ext4"
        sysfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysfile.fs.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .kernel

    ;;
    ;; Contexts
    ;;

    (genfscon
     "sysfs"
     "/kernel"
     sysfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro mounton_sysfile_dirs ((type ARG1))
           (allow ARG1 sysfile (dir (getattr mounton))))

    ;;
    ;; Policy
    ;;

    (blockinherit .sysfile.kernel.obj_template)

    (call .sys.mountpoint.obj_type (sysfile)))

(in .sysfile

    (block kernel

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysfile.obj_base_template)

                  (call .sysfile.kernel.obj_type (sysfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysfile.kernel.obj_base_template)
                  (blockinherit .sysfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev

    ;;
    ;; Contexts
    ;;

    (genfscon
     "sysfs"
     "/dev"
     sysfile_file_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .sysfile.dev.obj_template))

(in .sysfile

    (block dev

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysfile.obj_base_template)

                  (call .sysfile.dev.obj_type (sysfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysfile.dev.obj_base_template)
                  (blockinherit .sysfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block power

       ;;
       ;; Contexts
       ;;

       (genfscon
        "sysfs"
        "/power"
        sysfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysfile.power.obj_template))

(in .sysfile

    (block power

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysfile.obj_base_template)

                  (call .sysfile.power.obj_type (sysfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysfile.power.obj_base_template)
                  (blockinherit .sysfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .gpio

    ;;
    ;; Contexts
    ;;

    (genfscon
     "sysfs"
     "/class/gpio"
     sysfile_file_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .sysfile.class.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block leds

       ;;
       ;; Contexts
       ;;

       (genfscon
        "sysfs"
        "/class/leds"
        sysfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysfile.class.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block zramctl

       ;;
       ;; Contexts
       ;;

       (genfscon
        "sysfs"
        "/class/zram-control"
        sysfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysfile.class.obj_template)

       (optional zramctl_opt_sandbox
                 (call .file.sandboxexception.obj_type (sysfile))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block hypervisor

       ;;
       ;; Contexts
       ;;

       (genfscon
        "sysfs"
        "/hypervisor"
        sysfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysfile.hypervisor.obj_template))

(in .sysfile

    (block hypervisor

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysfile.obj_base_template)

                  (call .sysfile.hypervisor.obj_type (sysfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysfile.hypervisor.obj_base_template)
                  (blockinherit .sysfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in zram

    ;;
    ;; Contexts
    ;;

    (genfscon
     "sysfs"
     "/devices/virtual/block/zram0"
     sysfile_file_context)
    (genfscon
     "sysfs"
     "/devices/virtual/block/zram1"
     sysfile_file_context)
    (genfscon
     "sysfs"
     "/devices/virtual/block/zram2"
     sysfile_file_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .sysfile.block.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block module

       ;;
       ;; Contexts
       ;;

       (genfscon
        "sysfs"
        "/module"
        sysfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysfile.module.obj_template))

(in .sysfile

    (block module

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysfile.obj_base_template)

                  (call .sysfile.module.obj_type (sysfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysfile.module.obj_base_template)
                  (blockinherit .sysfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .devices

    ;;
    ;; Contexts
    ;;

    (genfscon
     "sysfs"
     "/devices"
     sysfile_file_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .sysfile.devices.obj_template))

(in .sysfile

    (block devices

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysfile.obj_base_template)

                  (call .sysfile.devices.obj_type (sysfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysfile.devices.obj_base_template)
                  (blockinherit .sysfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .bus

    ;;
    ;; Contexts
    ;;

    (genfscon
     "sysfs"
     "/bus"
     sysfile_file_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .sysfile.bus.obj_template))

(in .sysfile

    (block bus

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysfile.obj_base_template)

                  (call .sysfile.bus.obj_type (sysfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysfile.bus.obj_base_template)
                  (blockinherit .sysfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .fs

    ;;
    ;; Contexts
    ;;

    (genfscon
     "sysfs"
     "/fs"
     sysfile_file_context)

    ;;
    ;; Macro
    ;;

    (macro mounton_sysfile_dirs ((type ARG1))
           (allow ARG1 sysfile (dir (getattr mounton))))

    ;;
    ;; Policy
    ;;

    (blockinherit .sysfile.fs.obj_template)

    (call .sys.mountpoint.obj_type (sysfile)))

(in .sysfile

    (block fs

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysfile.obj_base_template)

                  (call .sysfile.fs.obj_type (sysfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysfile.fs.obj_base_template)
                  (blockinherit .sysfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block block

       ;;
       ;; Contexts
       ;;

       (genfscon
        "sysfs"
        "/block"
        sysfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysfile.block.obj_template))

(in .sysfile

    (block block

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysfile.obj_base_template)

                  (call .sysfile.block.obj_type (sysfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysfile.block.obj_base_template)
                  (blockinherit .sysfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block firmware

       ;;
       ;; Contexts
       ;;

       (genfscon
        "sysfs"
        "/firmware"
        sysfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysfile.firmware.obj_template)

       (call .sys.mountpoint.obj_type (sysfile)))

(in .sysfile

    (block firmware

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysfile.obj_base_template)

                  (call .sysfile.firmware.obj_type (sysfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysfile.firmware.obj_base_template)
                  (blockinherit .sysfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block fs

       ;;
       ;; Policy
       ;;

       (blockinherit obj_all_macro_template)

       (call .sys.type (obj_typeattr))

       ;;
       ;; Templates
       ;;

       (block obj_all_macro_template

              ;;
              ;; Macros
              ;;

              (blockinherit .file.obj_all_macro_template)

              (macro associate_all_filesystems ((type ARG1))
                     (allow ARG1 obj_typeattr (filesystem (associate))))

              (macro getattr_all_filesystems ((type ARG1))
                     (allow ARG1 obj_typeattr (filesystem (getattr))))

              (macro mount_all_filesystems ((type ARG1))
                     (allow ARG1 obj_typeattr (filesystem (mount))))

              (macro quotaget_all_filesystems ((type ARG1))
                     (allow ARG1 obj_typeattr (filesystem (quotaget))))

              (macro quotamod_all_filesystems ((type ARG1))
                     (allow ARG1 obj_typeattr (filesystem (quotamod))))

              (macro relabel_all_filesystems ((type ARG1))
                     (allow ARG1 obj_typeattr
                            (filesystem (relabelfrom relabelto))))

              (macro relabelfrom_all_filesystems ((type ARG1))
                     (allow ARG1 obj_typeattr (filesystem (relabelfrom))))

              (macro relabelto_all_filesystems ((type ARG1))
                     (allow ARG1 obj_typeattr (filesystem (relabelto))))

              (macro remount_all_filesystems ((type ARG1))
                     (allow ARG1 obj_typeattr (filesystem (remount))))

              (macro unmount_all_filesystems ((type ARG1))
                     (allow ARG1 obj_typeattr (filesystem (unmount))))

              (macro watch_all_filesystems ((type ARG1))
                     (allow ARG1 obj_typeattr (filesystem (watch))))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_all_macro_template))

       (block obj_base_template

              ;;
              ;; Contexts
              ;;

              (context
               fs_context
               (.u
                .r
                fs
                (systemlow
                 systemlow)))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_base_template)

              (type
               fs)

              (call .fs.obj_type (fs)))

       (block obj_file_macro_template

              ;;
              ;; Macros
              ;;

              (macro addname_fs_dirs ((type ARG1))
                     (allow ARG1 fs addname_dir))

              (macro append_fs_blk_files ((type ARG1))
                     (allow ARG1 fs append_blk_file))

              (macro append_fs_chr_files ((type ARG1))
                     (allow ARG1 fs append_chr_file))

              (macro append_fs_fifo_files ((type ARG1))
                     (allow ARG1 fs append_fifo_file))

              (macro append_fs_files ((type ARG1))
                     (allow ARG1 fs append_file))

              (macro appendinherited_fs_blk_files ((type ARG1))
                     (allow ARG1 fs appendinherited_blk_file))

              (macro appendinherited_fs_chr_files ((type ARG1))
                     (allow ARG1 fs appendinherited_chr_file))

              (macro appendinherited_fs_fifo_files ((type ARG1))
                     (allow ARG1 fs appendinherited_fifo_file))

              (macro appendinherited_fs_files ((type ARG1))
                     (allow ARG1 fs appendinherited_file))

              (macro create_fs ((type ARG1))
                     (allow ARG1 fs (allfiles (create))))

              (macro create_fs_blk_files ((type ARG1))
                     (allow ARG1 fs create_blk_file))

              (macro create_fs_chr_files ((type ARG1))
                     (allow ARG1 fs create_chr_file))

              (macro create_fs_dirs ((type ARG1))
                     (allow ARG1 fs create_dir))

              (macro create_fs_fifo_files ((type ARG1))
                     (allow ARG1 fs create_fifo_file))

              (macro create_fs_files ((type ARG1))
                     (allow ARG1 fs create_file))

              (macro create_fs_lnk_files ((type ARG1))
                     (allow ARG1 fs create_lnk_file))

              (macro create_fs_sock_files ((type ARG1))
                     (allow ARG1 fs create_sock_file))

              (macro deletename_fs_dirs ((type ARG1))
                     (allow ARG1 fs deletename_dir))

              (macro delete_fs ((type ARG1))
                     (allow ARG1 fs (allfiles (delete))))

              (macro delete_fs_blk_files ((type ARG1))
                     (allow ARG1 fs delete_blk_file))

              (macro delete_fs_chr_files ((type ARG1))
                     (allow ARG1 fs delete_chr_file))

              (macro delete_fs_dirs ((type ARG1))
                     (allow ARG1 fs delete_dir))

              (macro delete_fs_fifo_files ((type ARG1))
                     (allow ARG1 fs delete_fifo_file))

              (macro delete_fs_files ((type ARG1))
                     (allow ARG1 fs delete_file))

              (macro delete_fs_lnk_files ((type ARG1))
                     (allow ARG1 fs delete_lnk_file))

              (macro delete_fs_sock_files ((type ARG1))
                     (allow ARG1 fs delete_sock_file))

              (macro execute_fs_files ((type ARG1))
                     (allow ARG1 fs execute_file))

              (macro fs_obj_type_transition
                     ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                     (typetransition ARG1 fs ARG3 ARG4 ARG2)
                     (call addname_fs_dirs (ARG1)))

              (macro list_fs_dirs ((type ARG1))
                     (allow ARG1 fs list_dir))

              (macro listinherited_fs_dirs ((type ARG1))
                     (allow ARG1 fs listinherited_dir))

              (macro manage_fs ((type ARG1))
                     (allow ARG1 fs (allfiles (manage))))

              (macro manage_fs_blk_files ((type ARG1))
                     (allow ARG1 fs manage_blk_file))

              (macro manage_fs_chr_files ((type ARG1))
                     (allow ARG1 fs manage_chr_file))

              (macro manage_fs_dirs ((type ARG1))
                     (allow ARG1 fs manage_dir))

              (macro manage_fs_fifo_files ((type ARG1))
                     (allow ARG1 fs manage_fifo_file))

              (macro manage_fs_files ((type ARG1))
                     (allow ARG1 fs manage_file))

              (macro manage_fs_lnk_files ((type ARG1))
                     (allow ARG1 fs manage_lnk_file))

              (macro manage_fs_sock_files ((type ARG1))
                     (allow ARG1 fs manage_sock_file))

              (macro mapexecute_fs_chr_files ((type ARG1))
                     (allow ARG1 fs mapexecute_chr_file))

              (macro mapexecute_fs_files ((type ARG1))
                     (allow ARG1 fs mapexecute_file))

              (macro mounton_fs ((type ARG1))
                     (allow ARG1 fs (allfiles (mounton))))

              (macro mounton_fs_blk_files ((type ARG1))
                     (allow ARG1 fs mounton_blk_file))

              (macro mounton_fs_chr_files ((type ARG1))
                     (allow ARG1 fs mounton_chr_file))

              (macro mounton_fs_dirs ((type ARG1))
                     (allow ARG1 fs mounton_dir))

              (macro mounton_fs_fifo_files ((type ARG1))
                     (allow ARG1 fs mounton_fifo_file))

              (macro mounton_fs_files ((type ARG1))
                     (allow ARG1 fs mounton_file))

              (macro mounton_fs_lnk_files ((type ARG1))
                     (allow ARG1 fs mounton_lnk_file))

              (macro mounton_fs_sock_files ((type ARG1))
                     (allow ARG1 fs mounton_sock_file))

              (macro read_fs ((type ARG1))
                     (allow ARG1 fs (allfiles (read))))

              (macro read_fs_blk_files ((type ARG1))
                     (allow ARG1 fs read_blk_file))

              (macro read_fs_chr_files ((type ARG1))
                     (allow ARG1 fs read_chr_file))

              (macro read_fs_fifo_files ((type ARG1))
                     (allow ARG1 fs read_fifo_file))

              (macro read_fs_files ((type ARG1))
                     (allow ARG1 fs read_file))

              (macro readinherited_fs_blk_files ((type ARG1))
                     (allow ARG1 fs readinherited_blk_file))

              (macro readinherited_fs_chr_files ((type ARG1))
                     (allow ARG1 fs readinherited_chr_file))

              (macro readinherited_fs_fifo_files ((type ARG1))
                     (allow ARG1 fs readinherited_fifo_file))

              (macro readinherited_fs_files ((type ARG1))
                     (allow ARG1 fs readinherited_file))

              (macro readinherited_fs_sock_files ((type ARG1))
                     (allow ARG1 fs readinherited_sock_file))

              (macro read_fs_lnk_files ((type ARG1))
                     (allow ARG1 fs read_lnk_file))

              (macro read_fs_sock_files ((type ARG1))
                     (allow ARG1 fs read_sock_file))

              (macro readwrite_fs ((type ARG1))
                     (allow ARG1 fs (allfiles (readwrite))))

              (macro readwrite_fs_blk_files ((type ARG1))
                     (allow ARG1 fs readwrite_blk_file))

              (macro readwrite_fs_chr_files ((type ARG1))
                     (allow ARG1 fs readwrite_chr_file))

              (macro readwrite_fs_dirs ((type ARG1))
                     (allow ARG1 fs readwrite_dir))

              (macro readwrite_fs_fifo_files ((type ARG1))
                     (allow ARG1 fs readwrite_fifo_file))

              (macro readwrite_fs_files ((type ARG1))
                     (allow ARG1 fs readwrite_file))

              (macro readwriteinherited_fs_blk_files ((type ARG1))
                     (allow ARG1 fs readwriteinherited_blk_file))

              (macro readwriteinherited_fs_chr_files ((type ARG1))
                     (allow ARG1 fs readwriteinherited_chr_file))

              (macro readwriteinherited_fs_dirs ((type ARG1))
                     (allow ARG1 fs readwriteinherited_dir))

              (macro readwriteinherited_fs_fifo_files ((type ARG1))
                     (allow ARG1 fs readwriteinherited_fifo_file))

              (macro readwriteinherited_fs_files ((type ARG1))
                     (allow ARG1 fs readwriteinherited_file))

              (macro readwriteinherited_fs_sock_files ((type ARG1))
                     (allow ARG1 fs readwriteinherited_sock_file))

              (macro readwrite_fs_lnk_files ((type ARG1))
                     (allow ARG1 fs readwrite_lnk_file))

              (macro readwrite_fs_sock_files ((type ARG1))
                     (allow ARG1 fs readwrite_sock_file))

              (macro relabel_fs ((type ARG1))
                     (allow ARG1 fs (allfiles (relabel))))

              (macro relabel_fs_blk_files ((type ARG1))
                     (allow ARG1 fs relabel_blk_file))

              (macro relabel_fs_chr_files ((type ARG1))
                     (allow ARG1 fs relabel_chr_file))

              (macro relabel_fs_dirs ((type ARG1))
                     (allow ARG1 fs relabel_dir))

              (macro relabel_fs_fifo_files ((type ARG1))
                     (allow ARG1 fs relabel_fifo_file))

              (macro relabel_fs_files ((type ARG1))
                     (allow ARG1 fs relabel_file))

              (macro relabel_fs_lnk_files ((type ARG1))
                     (allow ARG1 fs relabel_lnk_file))

              (macro relabel_fs_sock_files ((type ARG1))
                     (allow ARG1 fs relabel_sock_file))

              (macro relabelfrom_fs ((type ARG1))
                     (allow ARG1 fs (allfiles (relabelfrom))))

              (macro relabelfrom_fs_blk_files ((type ARG1))
                     (allow ARG1 fs relabelfrom_blk_file))

              (macro relabelfrom_fs_chr_files ((type ARG1))
                     (allow ARG1 fs relabelfrom_chr_file))

              (macro relabelfrom_fs_dirs ((type ARG1))
                     (allow ARG1 fs relabelfrom_dir))

              (macro relabelfrom_fs_fifo_files ((type ARG1))
                     (allow ARG1 fs relabelfrom_fifo_file))

              (macro relabelfrom_fs_files ((type ARG1))
                     (allow ARG1 fs relabelfrom_file))

              (macro relabelfrom_fs_lnk_files ((type ARG1))
                     (allow ARG1 fs relabelfrom_lnk_file))

              (macro relabelfrom_fs_sock_files ((type ARG1))
                     (allow ARG1 fs relabelfrom_sock_file))

              (macro relabelto_fs ((type ARG1))
                     (allow ARG1 fs (allfiles (relabelto))))

              (macro relabelto_fs_blk_files ((type ARG1))
                     (allow ARG1 fs relabelto_blk_file))

              (macro relabelto_fs_chr_files ((type ARG1))
                     (allow ARG1 fs relabelto_chr_file))

              (macro relabelto_fs_dirs ((type ARG1))
                     (allow ARG1 fs relabelto_dir))

              (macro relabelto_fs_fifo_files ((type ARG1))
                     (allow ARG1 fs relabelto_fifo_file))

              (macro relabelto_fs_files ((type ARG1))
                     (allow ARG1 fs relabelto_file))

              (macro relabelto_fs_lnk_files ((type ARG1))
                     (allow ARG1 fs relabelto_lnk_file))

              (macro relabelto_fs_sock_files ((type ARG1))
                     (allow ARG1 fs relabelto_sock_file))

              (macro rename_fs ((type ARG1))
                     (allow ARG1 fs (allfiles (rename))))

              (macro rename_fs_blk_files ((type ARG1))
                     (allow ARG1 fs rename_blk_file))

              (macro rename_fs_chr_files ((type ARG1))
                     (allow ARG1 fs rename_chr_file))

              (macro rename_fs_dirs ((type ARG1))
                     (allow ARG1 fs rename_dir))

              (macro rename_fs_fifo_files ((type ARG1))
                     (allow ARG1 fs rename_fifo_file))

              (macro rename_fs_files ((type ARG1))
                     (allow ARG1 fs rename_file))

              (macro rename_fs_lnk_files ((type ARG1))
                     (allow ARG1 fs rename_lnk_file))

              (macro rename_fs_sock_files ((type ARG1))
                     (allow ARG1 fs rename_sock_file))

              (macro search_fs_dirs ((type ARG1))
                     (allow ARG1 fs search_dir))

              (macro write_fs ((type ARG1))
                     (allow ARG1 fs (allfiles (write))))

              (macro write_fs_blk_files ((type ARG1))
                     (allow ARG1 fs write_blk_file))

              (macro write_fs_chr_files ((type ARG1))
                     (allow ARG1 fs write_chr_file))

              (macro write_fs_dirs ((type ARG1))
                     (allow ARG1 fs write_dir))

              (macro write_fs_fifo_files ((type ARG1))
                     (allow ARG1 fs write_fifo_file))

              (macro write_fs_files ((type ARG1))
                     (allow ARG1 fs write_file))

              (macro writeinherited_fs_blk_files ((type ARG1))
                     (allow ARG1 fs writeinherited_blk_file))

              (macro writeinherited_fs_chr_files ((type ARG1))
                     (allow ARG1 fs writeinherited_chr_file))

              (macro writeinherited_fs_dirs ((type ARG1))
                     (allow ARG1 fs writeinherited_dir))

              (macro writeinherited_fs_fifo_files ((type ARG1))
                     (allow ARG1 fs writeinherited_fifo_file))

              (macro writeinherited_fs_files ((type ARG1))
                     (allow ARG1 fs writeinherited_file))

              (macro writeinherited_fs_sock_files ((type ARG1))
                     (allow ARG1 fs writeinherited_sock_file))

              (macro write_fs_lnk_files ((type ARG1))
                     (allow ARG1 fs write_lnk_file))

              (macro write_fs_sock_files ((type ARG1))
                     (allow ARG1 fs write_sock_file))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_file_macro_template))

       (block obj_macro_template

              ;;
              ;; Macros
              ;;

              (macro associate_filesystems ((type ARG1))
                     (allow ARG1 fs (filesystem (associate))))

              (macro getattr_filesystems ((type ARG1))
                     (allow ARG1 fs (filesystem (getattr))))

              (macro mount_filesystems ((type ARG1))
                     (allow ARG1 fs (filesystem (mount))))

              (macro quotaget_filesystems ((type ARG1))
                     (allow ARG1 fs (filesystem (quotaget))))

              (macro quotamod_filesystems ((type ARG1))
                     (allow ARG1 fs (filesystem (quotamod))))

              (macro relabel_filesystems ((type ARG1))
                     (allow ARG1 fs (filesystem (relabelfrom relabelto))))

              (macro relabelfrom_filesystems ((type ARG1))
                     (allow ARG1 fs (filesystem (relabelfrom))))

              (macro relabelto_filesystems ((type ARG1))
                     (allow ARG1 fs (filesystem (relabelto))))

              (macro remount_filesystems ((type ARG1))
                     (allow ARG1 fs (filesystem (remount))))

              (macro unmount_filesystems ((type ARG1))
                     (allow ARG1 fs (filesystem (unmount))))

              (macro watch_filesystems ((type ARG1))
                     (allow ARG1 fs (filesystem (watch))))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_macro_template))

       (block unconfined

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (allow subj_typeattr obj_typeattr
                     (blk_file (not (execmod map mounton))))
              (allow subj_typeattr obj_typeattr
                     (chr_file (not (execmod mounton))))
              (allow subj_typeattr obj_typeattr (dir (not execmod)))
              (allow subj_typeattr obj_typeattr
                     (fifo_file (not (execmod map mounton))))
              (allow subj_typeattr obj_typeattr
                     (file (not (entrypoint execmod))))
              (allow subj_typeattr obj_typeattr
                     (lnk_file (not (execmod map mounton))))
              (allow subj_typeattr obj_typeattr
                     (sock_file (not (execmod map mounton))))

              (allow subj_typeattr obj_typeattr (filesystem (not associate)))

              (call .getattr_invalid_filesystems (subj_typeattr))
              (call .mount_invalid_filesystems (subj_typeattr))
              (call .quotaget_invalid_filesystems (subj_typeattr))
              (call .quotamod_invalid_filesystems (subj_typeattr))
              (call .relabel_invalid_filesystems (subj_typeattr))
              (call .remount_invalid_filesystems (subj_typeattr))
              (call .unmount_invalid_filesystems (subj_typeattr))
              (call .watch_invalid_filesystems (subj_typeattr))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block procfile

       ;;
       ;; Macros
       ;;

       (macro getattr_all_dirs ((type ARG1))
              (allow ARG1 obj_typeattr (dir (getattr))))

       (macro getattr_all_files ((type ARG1))
              (allow ARG1 obj_typeattr (file (getattr))))

       (macro getattr_all_lnk_files ((type ARG1))
              (allow ARG1 obj_typeattr (lnk_file (getattr))))

       ;;
       ;; Policy
       ;;

       (blockinherit .file.obj_all_macro_template)

       (call .file.obj_type (obj_typeattr))

       (call .proc.associate_filesystems (obj_typeattr))

       ;;
       ;; Templates
       ;;

       (block obj_all_macro_template

              ;;
              ;; Macros
              ;;

              (macro addname_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr addname_dir))

              (macro append_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr append_blk_file))

              (macro append_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr append_chr_file))

              (macro append_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr append_fifo_file))

              (macro append_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr append_file))

              (macro appendinherited_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr appendinherited_blk_file))

              (macro appendinherited_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr appendinherited_chr_file))

              (macro appendinherited_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr appendinherited_fifo_file))

              (macro appendinherited_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr appendinherited_file))

              (macro create_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (create))))

              (macro create_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typattr create_blk_file))

              (macro create_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr create_chr_file))

              (macro create_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr create_dir))

              (macro create_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr create_fifo_file))

              (macro create_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr create_file))

              (macro create_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr create_lnk_file))

              (macro create_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr create_sock_file))

              (macro deletename_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr deletename_dir))

              (macro delete_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (delete))))

              (macro delete_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr delete_blk_file))

              (macro delete_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr delete_chr_file))

              (macro delete_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr delete_dir))

              (macro delete_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr delete_fifo_file))

              (macro delete_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr delete_file))

              (macro delete_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr delete_lnk_file))

              (macro delete_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr delete_sock_file))

              (macro execute_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr execute_file))

              (macro list_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr list_dir))

              (macro listinherited_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr listinherited_dir))

              (macro manage_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (manage))))

              (macro manage_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr manage_blk_file))

              (macro manage_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr manage_chr_file))

              (macro manage_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr manage_dir))

              (macro manage_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr manage_fifo_file))

              (macro manage_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr manage_file))

              (macro manage_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr manage_lnk_file))

              (macro manage_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr manage_sock_file))

              (macro mapexecute_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr mapexecute_chr_file))

              (macro mapexecute_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr mapexecute_file))

              (macro mounton_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (mounton))))

              (macro mounton_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr mounton_blk_file))

              (macro mounton_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr mounton_chr_file))

              (macro mounton_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr mounton_dir))

              (macro mounton_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr mounton_fifo_file))

              (macro mounton_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr mounton_file))

              (macro mounton_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr mounton_lnk_file))

              (macro mounton_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr mounton_sock_file))

              (macro obj_type ((type ARG1))
                     (typeattributeset obj_typeattr ARG1))

              (macro read_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (read))))

              (macro read_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr read_blk_file))

              (macro read_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr read_chr_file))

              (macro read_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr read_fifo_file))

              (macro read_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr read_file))

              (macro readinherited_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr readinherited_blk_file))

              (macro readinherited_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr readinherited_chr_file))

              (macro readinherited_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr readinherited_fifo_file))

              (macro readinherited_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr readinherited_file))

              (macro readinherited_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr readinherited_sock_file))

              (macro read_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr read_lnk_file))

              (macro read_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr read_sock_file))

              (macro readwrite_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (readwrite))))

              (macro readwrite_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwrite_blk_file))

              (macro readwrite_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwrite_chr_file))

              (macro readwrite_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr readwrite_dir))

              (macro readwrite_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwrite_fifo_file))

              (macro readwrite_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwrite_file))

              (macro readwriteinherited_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwriteinherited_blk_file))

              (macro readwriteinherited_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwriteinherited_chr_file))

              (macro readwriteinherited_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr readwriteinherited_dir))

              (macro readwriteinherited_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwriteinherited_fifo_file))

              (macro readwriteinherited_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwriteinherited_file))

              (macro readwriteinherited_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwriteinherited_sock_file))

              (macro readwrite_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwrite_lnk_file))

              (macro readwrite_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwrite_sock_file))

              (macro relabel_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (relabel))))

              (macro relabel_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabel_blk_file))

              (macro relabel_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabel_chr_file))

              (macro relabel_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr relabel_dir))

              (macro relabel_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabel_fifo_file))

              (macro relabel_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabel_file))

              (macro relabel_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabel_lnk_file))

              (macro relabel_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabel_sock_file))

              (macro relabelfrom_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (relabelfrom))))

              (macro relabelfrom_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelfrom_blk_file))

              (macro relabelfrom_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelfrom_chr_file))

              (macro relabelfrom_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr relabelfrom_dir))

              (macro relabelfrom_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelfrom_fifo_file))

              (macro relabelfrom_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelfrom_file))

              (macro relabelfrom_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelfrom_lnk_file))

              (macro relabelfrom_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelfrom_sock_file))

              (macro relabelto_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (relabelto))))

              (macro relabelto_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelto_blk_file))

              (macro relabelto_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelto_chr_file))

              (macro relabelto_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr relabelto_dir))

              (macro relabelto_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelto_fifo_file))

              (macro relabelto_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelto_file))

              (macro relabelto_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelto_lnk_file))

              (macro relabelto_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelto_sock_file))

              (macro rename_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (rename))))

              (macro rename_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr rename_blk_file))

              (macro rename_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr rename_chr_file))

              (macro rename_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr rename_dir))

              (macro rename_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr rename_fifo_file))

              (macro rename_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr rename_file))

              (macro rename_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr rename_lnk_file))

              (macro rename_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr rename_sock_file))

              (macro search_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr search_dir))

              (macro write_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (write))))

              (macro write_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr write_blk_file))

              (macro write_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr write_chr_file))

              (macro write_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr write_dir))

              (macro write_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr write_fifo_file))

              (macro write_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr write_file))

              (macro writeinherited_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr writeinherited_blk_file))

              (macro writeinherited_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr writeinherited_chr_file))

              (macro writeinherited_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr writeinherited_dir))

              (macro writeinherited_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr writeinherited_fifo_file))

              (macro writeinherited_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr writeinherited_file))

              (macro writeinherited_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr writeinherited_sock_file))

              (macro write_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr write_lnk_file))

              (macro write_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr write_sock_file))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_all_macro_template)

              (typeattribute
               obj_typeattr))

       (block obj_base_template

              ;;
              ;; Contexts
              ;;

              (context
               procfile_file_context
               (.u
                .r
                procfile
                (systemlow
                 systemlow)))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_base_template)

              (type
               procfile)

              (call .procfile.obj_type (procfile)))

       (block obj_macro_template

              ;;
              ;; Macros
              ;;

              (macro addname_procfile_dirs ((type ARG1))
                     (allow ARG1 procfile addname_dir))

              (macro append_procfile_blk_files ((type ARG1))
                     (allow ARG1 procfile append_blk_file))

              (macro append_procfile_chr_files ((type ARG1))
                     (allow ARG1 procfile append_chr_file))

              (macro append_procfile_fifo_files ((type ARG1))
                     (allow ARG1 procfile append_fifo_file))

              (macro append_procfile_files ((type ARG1))
                     (allow ARG1 procfile append_file))

              (macro appendinherited_procfile_blk_files ((type ARG1))
                     (allow ARG1 procfile appendinherited_blk_file))

              (macro appendinherited_procfile_chr_files ((type ARG1))
                     (allow ARG1 procfile appendinherited_chr_file))

              (macro appendinherited_procfile_fifo_files ((type ARG1))
                     (allow ARG1 procfile appendinherited_fifo_file))

              (macro appendinherited_procfile_files ((type ARG1))
                     (allow ARG1 procfile appendinherited_file))

              (macro create_procfile ((type ARG1))
                     (allow ARG1 procfile (allfiles (create))))

              (macro create_procfile_blk_files ((type ARG1))
                     (allow ARG1 procfile create_blk_file))

              (macro create_procfile_chr_files ((type ARG1))
                     (allow ARG1 procfile create_chr_file))

              (macro create_procfile_dirs ((type ARG1))
                     (allow ARG1 procfile create_dir))

              (macro create_procfile_fifo_files ((type ARG1))
                     (allow ARG1 procfile create_fifo_file))

              (macro create_procfile_files ((type ARG1))
                     (allow ARG1 procfile create_file))

              (macro create_procfile_lnk_files ((type ARG1))
                     (allow ARG1 procfile create_lnk_file))

              (macro create_procfile_sock_files ((type ARG1))
                     (allow ARG1 procfile create_sock_file))

              (macro deletename_procfile_dirs ((type ARG1))
                     (allow ARG1 procfile deletename_dir))

              (macro delete_procfile ((type ARG1))
                     (allow ARG1 procfile (allfiles (delete))))

              (macro delete_procfile_blk_files ((type ARG1))
                     (allow ARG1 procfile delete_blk_file))

              (macro delete_procfile_chr_files ((type ARG1))
                     (allow ARG1 procfile delete_chr_file))

              (macro delete_procfile_dirs ((type ARG1))
                     (allow ARG1 procfile delete_dir))

              (macro delete_procfile_fifo_files ((type ARG1))
                     (allow ARG1 procfile delete_fifo_file))

              (macro delete_procfile_files ((type ARG1))
                     (allow ARG1 procfile delete_file))

              (macro delete_procfile_lnk_files ((type ARG1))
                     (allow ARG1 procfile delete_lnk_file))

              (macro delete_procfile_sock_files ((type ARG1))
                     (allow ARG1 procfile delete_sock_file))

              (macro execute_procfile_files ((type ARG1))
                     (allow ARG1 procfile execute_file))

              (macro list_procfile_dirs ((type ARG1))
                     (allow ARG1 procfile list_dir))

              (macro listinherited_procfile_dirs ((type ARG1))
                     (allow ARG1 procfile listinherited_dir))

              (macro manage_procfile ((type ARG1))
                     (allow ARG1 procfile (allfiles (manage))))

              (macro manage_procfile_blk_files ((type ARG1))
                     (allow ARG1 procfile manage_blk_file))

              (macro manage_procfile_chr_files ((type ARG1))
                     (allow ARG1 procfile manage_chr_file))

              (macro manage_procfile_dirs ((type ARG1))
                     (allow ARG1 procfile manage_dir))

              (macro manage_procfile_fifo_files ((type ARG1))
                     (allow ARG1 procfile manage_fifo_file))

              (macro manage_procfile_files ((type ARG1))
                     (allow ARG1 procfile manage_file))

              (macro manage_procfile_lnk_files ((type ARG1))
                     (allow ARG1 procfile manage_lnk_file))

              (macro manage_procfile_sock_files ((type ARG1))
                     (allow ARG1 procfile manage_sock_file))

              (macro mapexecute_procfile_chr_files ((type ARG1))
                     (allow ARG1 procfile mapexecute_chr_file))

              (macro mapexecute_procfile_files ((type ARG1))
                     (allow ARG1 procfile mapexecute_file))

              (macro mounton_procfile ((type ARG1))
                     (allow ARG1 procfile (allfiles (mounton))))

              (macro mounton_procfile_blk_files ((type ARG1))
                     (allow ARG1 procfile mounton_blk_file))

              (macro mounton_procfile_chr_files ((type ARG1))
                     (allow ARG1 procfile mounton_chr_file))

              (macro mounton_procfile_dirs ((type ARG1))
                     (allow ARG1 procfile mounton_dir))

              (macro mounton_procfile_fifo_files ((type ARG1))
                     (allow ARG1 procfile mounton_fifo_file))

              (macro mounton_procfile_files ((type ARG1))
                     (allow ARG1 procfile mounton_file))

              (macro mounton_procfile_lnk_files ((type ARG1))
                     (allow ARG1 procfile mounton_lnk_file))

              (macro mounton_procfile_sock_files ((type ARG1))
                     (allow ARG1 procfile mounton_sock_file))

              (macro procfile_obj_type_transition
                     ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                     (typetransition ARG1 procfile ARG3 ARG4 ARG2)
                     (call addname_procfile_dirs (ARG1)))

              (macro read_procfile ((type ARG1))
                     (allow ARG1 procfile (allfiles (read))))

              (macro read_procfile_blk_files ((type ARG1))
                     (allow ARG1 procfile read_blk_file))

              (macro read_procfile_chr_files ((type ARG1))
                     (allow ARG1 procfile read_chr_file))

              (macro read_procfile_fifo_files ((type ARG1))
                     (allow ARG1 procfile read_fifo_file))

              (macro read_procfile_files ((type ARG1))
                     (allow ARG1 procfile read_file))

              (macro readinherited_procfile_blk_files ((type ARG1))
                     (allow ARG1 procfile readinherited_blk_file))

              (macro readinherited_procfile_chr_files ((type ARG1))
                     (allow ARG1 procfile readinherited_chr_file))

              (macro readinherited_procfile_fifo_files ((type ARG1))
                     (allow ARG1 procfile readinherited_fifo_file))

              (macro readinherited_procfile_files ((type ARG1))
                     (allow ARG1 procfile readinherited_file))

              (macro readinherited_procfile_sock_files ((type ARG1))
                     (allow ARG1 procfile readinherited_sock_file))

              (macro read_procfile_lnk_files ((type ARG1))
                     (allow ARG1 procfile read_lnk_file))

              (macro read_procfile_sock_files ((type ARG1))
                     (allow ARG1 procfile read_sock_file))

              (macro readwrite_procfile ((type ARG1))
                     (allow ARG1 procfile (allfiles (readwrite))))

              (macro readwrite_procfile_blk_files ((type ARG1))
                     (allow ARG1 procfile readwrite_blk_file))

              (macro readwrite_procfile_chr_files ((type ARG1))
                     (allow ARG1 procfile readwrite_chr_file))

              (macro readwrite_procfile_dirs ((type ARG1))
                     (allow ARG1 procfile readwrite_dir))

              (macro readwrite_procfile_fifo_files ((type ARG1))
                     (allow ARG1 procfile readwrite_fifo_file))

              (macro readwrite_procfile_files ((type ARG1))
                     (allow ARG1 procfile readwrite_file))

              (macro readwriteinherited_procfile_blk_files ((type ARG1))
                     (allow ARG1 procfile readwriteinherited_blk_file))

              (macro readwriteinherited_procfile_chr_files ((type ARG1))
                     (allow ARG1 procfile readwriteinherited_chr_file))

              (macro readwriteinherited_procfile_dirs ((type ARG1))
                     (allow ARG1 procfile readwriteinherited_dir))

              (macro readwriteinherited_procfile_fifo_files ((type ARG1))
                     (allow ARG1 procfile readwriteinherited_fifo_file))

              (macro readwriteinherited_procfile_files ((type ARG1))
                     (allow ARG1 procfile readwriteinherited_file))

              (macro readwriteinherited_procfile_sock_files ((type ARG1))
                     (allow ARG1 procfile readwriteinherited_sock_file))

              (macro readwrite_procfile_lnk_files ((type ARG1))
                     (allow ARG1 procfile readwrite_lnk_file))

              (macro readwrite_procfile_sock_files ((type ARG1))
                     (allow ARG1 procfile readwrite_sock_file))

              (macro relabel_procfile ((type ARG1))
                     (allow ARG1 procfile (allfiles (relabel))))

              (macro relabel_procfile_blk_files ((type ARG1))
                     (allow ARG1 procfile relabel_blk_file))

              (macro relabel_procfile_chr_files ((type ARG1))
                     (allow ARG1 procfile relabel_chr_file))

              (macro relabel_procfile_dirs ((type ARG1))
                     (allow ARG1 procfile relabel_dir))

              (macro relabel_procfile_fifo_files ((type ARG1))
                     (allow ARG1 procfile relabel_fifo_file))

              (macro relabel_procfile_files ((type ARG1))
                     (allow ARG1 procfile relabel_file))

              (macro relabel_procfile_lnk_files ((type ARG1))
                     (allow ARG1 procfile relabel_lnk_file))

              (macro relabel_procfile_sock_files ((type ARG1))
                     (allow ARG1 procfile relabel_sock_file))

              (macro relabelfrom_procfile ((type ARG1))
                     (allow ARG1 procfile (allfiles (relabelfrom))))

              (macro relabelfrom_procfile_blk_files ((type ARG1))
                     (allow ARG1 procfile relabelfrom_blk_file))

              (macro relabelfrom_procfile_chr_files ((type ARG1))
                     (allow ARG1 procfile relabelfrom_chr_file))

              (macro relabelfrom_procfile_dirs ((type ARG1))
                     (allow ARG1 procfile relabelfrom_dir))

              (macro relabelfrom_procfile_fifo_files ((type ARG1))
                     (allow ARG1 procfile relabelfrom_fifo_file))

              (macro relabelfrom_procfile_files ((type ARG1))
                     (allow ARG1 procfile relabelfrom_file))

              (macro relabelfrom_procfile_lnk_files ((type ARG1))
                     (allow ARG1 procfile relabelfrom_lnk_file))

              (macro relabelfrom_procfile_sock_files ((type ARG1))
                     (allow ARG1 procfile relabelfrom_sock_file))

              (macro relabelto_procfile ((type ARG1))
                     (allow ARG1 procfile (allfiles (relabelto))))

              (macro relabelto_procfile_blk_files ((type ARG1))
                     (allow ARG1 procfile relabelto_blk_file))

              (macro relabelto_procfile_chr_files ((type ARG1))
                     (allow ARG1 procfile relabelto_chr_file))

              (macro relabelto_procfile_dirs ((type ARG1))
                     (allow ARG1 procfile relabelto_dir))

              (macro relabelto_procfile_fifo_files ((type ARG1))
                     (allow ARG1 procfile relabelto_fifo_file))

              (macro relabelto_procfile_files ((type ARG1))
                     (allow ARG1 procfile relabelto_file))

              (macro relabelto_procfile_lnk_files ((type ARG1))
                     (allow ARG1 procfile relabelto_lnk_file))

              (macro relabelto_procfile_sock_files ((type ARG1))
                     (allow ARG1 procfile relabelto_sock_file))

              (macro rename_procfile ((type ARG1))
                     (allow ARG1 procfile (allfiles (rename))))

              (macro rename_procfile_blk_files ((type ARG1))
                     (allow ARG1 procfile rename_blk_file))

              (macro rename_procfile_chr_files ((type ARG1))
                     (allow ARG1 procfile rename_chr_file))

              (macro rename_procfile_dirs ((type ARG1))
                     (allow ARG1 procfile rename_dir))

              (macro rename_procfile_fifo_files ((type ARG1))
                     (allow ARG1 procfile rename_fifo_file))

              (macro rename_procfile_files ((type ARG1))
                     (allow ARG1 procfile rename_file))

              (macro rename_procfile_lnk_files ((type ARG1))
                     (allow ARG1 procfile rename_lnk_file))

              (macro rename_procfile_sock_files ((type ARG1))
                     (allow ARG1 procfile rename_sock_file))

              (macro search_procfile_dirs ((type ARG1))
                     (allow ARG1 procfile search_dir))

              (macro write_procfile ((type ARG1))
                     (allow ARG1 procfile (allfiles (write))))

              (macro write_procfile_blk_files ((type ARG1))
                     (allow ARG1 procfile write_blk_file))

              (macro write_procfile_chr_files ((type ARG1))
                     (allow ARG1 procfile write_chr_file))

              (macro write_procfile_dirs ((type ARG1))
                     (allow ARG1 procfile write_dir))

              (macro write_procfile_fifo_files ((type ARG1))
                     (allow ARG1 procfile write_fifo_file))

              (macro write_procfile_files ((type ARG1))
                     (allow ARG1 procfile write_file))

              (macro writeinherited_procfile_blk_files ((type ARG1))
                     (allow ARG1 procfile writeinherited_blk_file))

              (macro writeinherited_procfile_chr_files ((type ARG1))
                     (allow ARG1 procfile writeinherited_chr_file))

              (macro writeinherited_procfile_dirs ((type ARG1))
                     (allow ARG1 procfile writeinherited_dir))

              (macro writeinherited_procfile_fifo_files ((type ARG1))
                     (allow ARG1 procfile writeinherited_fifo_file))

              (macro writeinherited_procfile_files ((type ARG1))
                     (allow ARG1 procfile writeinherited_file))

              (macro writeinherited_procfile_sock_files ((type ARG1))
                     (allow ARG1 procfile writeinherited_sock_file))

              (macro write_procfile_lnk_files ((type ARG1))
                     (allow ARG1 procfile write_lnk_file))

              (macro write_procfile_sock_files ((type ARG1))
                     (allow ARG1 procfile write_sock_file))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_macro_template))

       (block obj_template

              ;;
              ;; Policy
              ;;

              (blockabstract obj_template)

              (blockinherit .procfile.obj_base_template)
              (blockinherit .procfile.obj_macro_template)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block cgroupfile

       ;;
       ;; Policy
       ;;

       (blockinherit .file.obj_all_macro_template)

       (call .file.obj_type (obj_typeattr))

       (call .cgroup.associate_filesystems (obj_typeattr))

       ;;
       ;; Templates
       ;;

       (block obj_base_template

              ;;
              ;; Contexts
              ;;

              (context
               cgroupfile_file_context
               (.u
                .r
                cgroupfile
                (systemlow
                 systemlow)))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_base_template)

              (type
               cgroupfile)

              (call .cgroupfile.obj_type (cgroupfile)))

       (block obj_macro_template

              ;;
              ;; Macros
              ;;

              (macro addname_cgroupfile_dirs ((type ARG1))
                     (allow ARG1 cgroupfile addname_dir))

              (macro append_cgroupfile_blk_files ((type ARG1))
                     (allow ARG1 cgroupfile append_blk_file))

              (macro append_cgroupfile_chr_files ((type ARG1))
                     (allow ARG1 cgroupfile append_chr_file))

              (macro append_cgroupfile_fifo_files ((type ARG1))
                     (allow ARG1 cgroupfile append_fifo_file))

              (macro append_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile append_file))

              (macro appendinherited_cgroupfile_blk_files ((type ARG1))
                     (allow ARG1 cgroupfile appendinherited_blk_file))

              (macro appendinherited_cgroupfile_chr_files ((type ARG1))
                     (allow ARG1 cgroupfile appendinherited_chr_file))

              (macro appendinherited_cgroupfile_fifo_files ((type ARG1))
                     (allow ARG1 cgroupfile appendinherited_fifo_file))

              (macro appendinherited_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile appendinherited_file))

              (macro cgroupfile_obj_type_transition
                     ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                     (typetransition ARG1 cgroupfile ARG3 ARG4 ARG2)
                     (call addname_cgroupfile_dirs (ARG1)))

              (macro create_cgroupfile ((type ARG1))
                     (allow ARG1 cgroupfile (allfiles (create))))

              (macro create_cgroupfile_blk_files ((type ARG1))
                     (allow ARG1 cgroupfile create_blk_file))

              (macro create_cgroupfile_chr_files ((type ARG1))
                     (allow ARG1 cgroupfile create_chr_file))

              (macro create_cgroupfile_dirs ((type ARG1))
                     (allow ARG1 cgroupfile create_dir))

              (macro create_cgroupfile_fifo_files ((type ARG1))
                     (allow ARG1 cgroupfile create_fifo_file))

              (macro create_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile create_file))

              (macro create_cgroupfile_lnk_files ((type ARG1))
                     (allow ARG1 cgroupfile create_lnk_file))

              (macro create_cgroupfile_sock_files ((type ARG1))
                     (allow ARG1 cgroupfile create_sock_file))

              (macro deletename_cgroupfile_dirs ((type ARG1))
                     (allow ARG1 cgroupfile deletename_dir))

              (macro delete_cgroupfile ((type ARG1))
                     (allow ARG1 cgroupfile (allfiles (delete))))

              (macro delete_cgroupfile_blk_files ((type ARG1))
                     (allow ARG1 cgroupfile delete_blk_file))

              (macro delete_cgroupfile_chr_files ((type ARG1))
                     (allow ARG1 cgroupfile delete_chr_file))

              (macro delete_cgroupfile_dirs ((type ARG1))
                     (allow ARG1 cgroupfile delete_dir))

              (macro delete_cgroupfile_fifo_files ((type ARG1))
                     (allow ARG1 cgroupfile delete_fifo_file))

              (macro delete_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile delete_file))

              (macro delete_cgroupfile_lnk_files ((type ARG1))
                     (allow ARG1 cgroupfile delete_lnk_file))

              (macro delete_cgroupfile_sock_files ((type ARG1))
                     (allow ARG1 cgroupfile delete_sock_file))

              (macro execute_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile execute_file))

              (macro list_cgroupfile_dirs ((type ARG1))
                     (allow ARG1 cgroupfile list_dir))

              (macro listinherited_cgroupfile_dirs ((type ARG1))
                     (allow ARG1 cgroupfile listinherited_dir))

              (macro manage_cgroupfile ((type ARG1))
                     (allow ARG1 cgroupfile (allfiles (manage))))

              (macro manage_cgroupfile_blk_files ((type ARG1))
                     (allow ARG1 cgroupfile manage_blk_file))

              (macro manage_cgroupfile_chr_files ((type ARG1))
                     (allow ARG1 cgroupfile manage_chr_file))

              (macro manage_cgroupfile_dirs ((type ARG1))
                     (allow ARG1 cgroupfile manage_dir))

              (macro manage_cgroupfile_fifo_files ((type ARG1))
                     (allow ARG1 cgroupfile manage_fifo_file))

              (macro manage_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile manage_file))

              (macro manage_cgroupfile_lnk_files ((type ARG1))
                     (allow ARG1 cgroupfile manage_lnk_file))

              (macro manage_cgroupfile_sock_files ((type ARG1))
                     (allow ARG1 cgroupfile manage_sock_file))

              (macro mapexecute_cgroupfile_chr_files ((type ARG1))
                     (allow ARG1 cgroupfile mapexecute_chr_file))

              (macro mapexecute_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile mapexecute_file))

              (macro mounton_cgroupfile ((type ARG1))
                     (allow ARG1 cgroupfile (allfiles (mounton))))

              (macro mounton_cgroupfile_blk_files ((type ARG1))
                     (allow ARG1 cgroupfile mounton_blk_file))

              (macro mounton_cgroupfile_chr_files ((type ARG1))
                     (allow ARG1 cgroupfile mounton_chr_file))

              (macro mounton_cgroupfile_dirs ((type ARG1))
                     (allow ARG1 cgroupfile mounton_dir))

              (macro mounton_cgroupfile_fifo_files ((type ARG1))
                     (allow ARG1 cgroupfile mounton_fifo_file))

              (macro mounton_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile mounton_file))

              (macro mounton_cgroupfile_lnk_files ((type ARG1))
                     (allow ARG1 cgroupfile mounton_lnk_file))

              (macro mounton_cgroupfile_sock_files ((type ARG1))
                     (allow ARG1 cgroupfile mounton_sock_file))

              (macro read_cgroupfile ((type ARG1))
                     (allow ARG1 cgroupfile (allfiles (read))))

              (macro read_cgroupfile_blk_files ((type ARG1))
                     (allow ARG1 cgroupfile read_blk_file))

              (macro read_cgroupfile_chr_files ((type ARG1))
                     (allow ARG1 cgroupfile read_chr_file))

              (macro read_cgroupfile_fifo_files ((type ARG1))
                     (allow ARG1 cgroupfile read_fifo_file))

              (macro read_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile read_file))

              (macro read_cgroupfile_lnk_files ((type ARG1))
                     (allow ARG1 cgroupfile read_lnk_file))

              (macro read_cgroupfile_sock_files ((type ARG1))
                     (allow ARG1 cgroupfile read_sock_file))

              (macro readinherited_cgroupfile_blk_files ((type ARG1))
                     (allow ARG1 cgroupfile readinherited_blk_file))

              (macro readinherited_cgroupfile_chr_files ((type ARG1))
                     (allow ARG1 cgroupfile readinherited_chr_file))

              (macro readinherited_cgroupfile_fifo_files ((type ARG1))
                     (allow ARG1 cgroupfile readinherited_fifo_file))

              (macro readinherited_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile readinherited_file))

              (macro readinherited_cgroupfile_sock_files ((type ARG1))
                     (allow ARG1 cgroupfile readinherited_sock_file))

              (macro readwrite_cgroupfile ((type ARG1))
                     (allow ARG1 cgroupfile (allfiles (readwrite))))

              (macro readwrite_cgroupfile_blk_files ((type ARG1))
                     (allow ARG1 cgroupfile readwrite_blk_file))

              (macro readwrite_cgroupfile_chr_files ((type ARG1))
                     (allow ARG1 cgroupfile readwrite_chr_file))

              (macro readwrite_cgroupfile_dirs ((type ARG1))
                     (allow ARG1 cgroupfile readwrite_dir))

              (macro readwrite_cgroupfile_fifo_files ((type ARG1))
                     (allow ARG1 cgroupfile readwrite_fifo_file))

              (macro readwrite_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile readwrite_file))

              (macro readwrite_cgroupfile_lnk_files ((type ARG1))
                     (allow ARG1 cgroupfile readwrite_lnk_file))

              (macro readwrite_cgroupfile_sock_files ((type ARG1))
                     (allow ARG1 cgroupfile readwrite_sock_file))

              (macro readwriteinherited_cgroupfile_blk_files ((type ARG1))
                     (allow ARG1 cgroupfile readwriteinherited_blk_file))

              (macro readwriteinherited_cgroupfile_chr_files ((type ARG1))
                     (allow ARG1 cgroupfile readwriteinherited_chr_file))

              (macro readwriteinherited_cgroupfile_dirs ((type ARG1))
                     (allow ARG1 cgroupfile readwriteinherited_dir))

              (macro readwriteinherited_cgroupfile_fifo_files ((type ARG1))
                     (allow ARG1 cgroupfile readwriteinherited_fifo_file))

              (macro readwriteinherited_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile readwriteinherited_file))

              (macro readwriteinherited_cgroupfile_sock_files ((type ARG1))
                     (allow ARG1 cgroupfile readwriteinherited_sock_file))

              (macro relabel_cgroupfile ((type ARG1))
                     (allow ARG1 cgroupfile (allfiles (relabel))))

              (macro relabel_cgroupfile_blk_files ((type ARG1))
                     (allow ARG1 cgroupfile relabel_blk_file))

              (macro relabel_cgroupfile_chr_files ((type ARG1))
                     (allow ARG1 cgroupfile relabel_chr_file))

              (macro relabel_cgroupfile_dirs ((type ARG1))
                     (allow ARG1 cgroupfile relabel_dir))

              (macro relabel_cgroupfile_fifo_files ((type ARG1))
                     (allow ARG1 cgroupfile relabel_fifo_file))

              (macro relabel_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile relabel_file))

              (macro relabel_cgroupfile_lnk_files ((type ARG1))
                     (allow ARG1 cgroupfile relabel_lnk_file))

              (macro relabel_cgroupfile_sock_files ((type ARG1))
                     (allow ARG1 cgroupfile relabel_sock_file))

              (macro relabelfrom_cgroupfile ((type ARG1))
                     (allow ARG1 cgroupfile (allfiles (relabelfrom))))

              (macro relabelfrom_cgroupfile_blk_files ((type ARG1))
                     (allow ARG1 cgroupfile relabelfrom_blk_file))

              (macro relabelfrom_cgroupfile_chr_files ((type ARG1))
                     (allow ARG1 cgroupfile relabelfrom_chr_file))

              (macro relabelfrom_cgroupfile_dirs ((type ARG1))
                     (allow ARG1 cgroupfile relabelfrom_dir))

              (macro relabelfrom_cgroupfile_fifo_files ((type ARG1))
                     (allow ARG1 cgroupfile relabelfrom_fifo_file))

              (macro relabelfrom_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile relabelfrom_file))

              (macro relabelfrom_cgroupfile_lnk_files ((type ARG1))
                     (allow ARG1 cgroupfile relabelfrom_lnk_file))

              (macro relabelfrom_cgroupfile_sock_files ((type ARG1))
                     (allow ARG1 cgroupfile relabelfrom_sock_file))

              (macro relabelto_cgroupfile ((type ARG1))
                     (allow ARG1 cgroupfile (allfiles (relabelto))))

              (macro relabelto_cgroupfile_blk_files ((type ARG1))
                     (allow ARG1 cgroupfile relabelto_blk_file))

              (macro relabelto_cgroupfile_chr_files ((type ARG1))
                     (allow ARG1 cgroupfile relabelto_chr_file))

              (macro relabelto_cgroupfile_dirs ((type ARG1))
                     (allow ARG1 cgroupfile relabelto_dir))

              (macro relabelto_cgroupfile_fifo_files ((type ARG1))
                     (allow ARG1 cgroupfile relabelto_fifo_file))

              (macro relabelto_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile relabelto_file))

              (macro relabelto_cgroupfile_lnk_files ((type ARG1))
                     (allow ARG1 cgroupfile relabelto_lnk_file))

              (macro relabelto_cgroupfile_sock_files ((type ARG1))
                     (allow ARG1 cgroupfile relabelto_sock_file))

              (macro rename_cgroupfile ((type ARG1))
                     (allow ARG1 cgroupfile (allfiles (rename))))

              (macro rename_cgroupfile_blk_files ((type ARG1))
                     (allow ARG1 cgroupfile rename_blk_file))

              (macro rename_cgroupfile_chr_files ((type ARG1))
                     (allow ARG1 cgroupfile rename_chr_file))

              (macro rename_cgroupfile_dirs ((type ARG1))
                     (allow ARG1 cgroupfile rename_dir))

              (macro rename_cgroupfile_fifo_files ((type ARG1))
                     (allow ARG1 cgroupfile rename_fifo_file))

              (macro rename_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile rename_file))

              (macro rename_cgroupfile_lnk_files ((type ARG1))
                     (allow ARG1 cgroupfile rename_lnk_file))

              (macro rename_cgroupfile_sock_files ((type ARG1))
                     (allow ARG1 cgroupfile rename_sock_file))

              (macro search_cgroupfile_dirs ((type ARG1))
                     (allow ARG1 cgroupfile search_dir))

              (macro write_cgroupfile ((type ARG1))
                     (allow ARG1 cgroupfile (allfiles (write))))

              (macro write_cgroupfile_blk_files ((type ARG1))
                     (allow ARG1 cgroupfile write_blk_file))

              (macro write_cgroupfile_chr_files ((type ARG1))
                     (allow ARG1 cgroupfile write_chr_file))

              (macro write_cgroupfile_dirs ((type ARG1))
                     (allow ARG1 cgroupfile write_dir))

              (macro write_cgroupfile_fifo_files ((type ARG1))
                     (allow ARG1 cgroupfile write_fifo_file))

              (macro write_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile write_file))

              (macro write_cgroupfile_lnk_files ((type ARG1))
                     (allow ARG1 cgroupfile write_lnk_file))

              (macro write_cgroupfile_sock_files ((type ARG1))
                     (allow ARG1 cgroupfile write_sock_file))

              (macro writeinherited_cgroupfile_blk_files ((type ARG1))
                     (allow ARG1 cgroupfile writeinherited_blk_file))

              (macro writeinherited_cgroupfile_chr_files ((type ARG1))
                     (allow ARG1 cgroupfile writeinherited_chr_file))

              (macro writeinherited_cgroupfile_dirs ((type ARG1))
                     (allow ARG1 cgroupfile writeinherited_dir))

              (macro writeinherited_cgroupfile_fifo_files ((type ARG1))
                     (allow ARG1 cgroupfile writeinherited_fifo_file))

              (macro writeinherited_cgroupfile_files ((type ARG1))
                     (allow ARG1 cgroupfile writeinherited_file))

              (macro writeinherited_cgroupfile_sock_files ((type ARG1))
                     (allow ARG1 cgroupfile writeinherited_sock_file))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_macro_template))

       (block obj_template

              ;;
              ;; Policy
              ;;

              (blockabstract obj_template)

              (blockinherit .cgroupfile.obj_base_template)
              (blockinherit .cgroupfile.obj_macro_template)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block dev

       ;;
       ;; Macros
       ;;

       (macro getattr_all_chr_files ((type ARG1))
              (allow ARG1 obj_typeattr (chr_file (getattr))))

       ;;
       ;; Policy
       ;;

       (blockinherit .file.obj_all_macro_template)

       (call .sys.type (obj_typeattr))

       (call tmp.associate_filesystems (obj_typeattr))

       (block unconfined

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (allow subj_typeattr obj_typeattr
                     (blk_file (not (execmod map mounton))))
              (allow subj_typeattr obj_typeattr (chr_file (not execmod)))
              (allow subj_typeattr obj_typeattr
                     (dir (not (execmod map mounton))))
              (allow subj_typeattr obj_typeattr
                     (fifo_file (not (execmod map mounton))))
              (allow subj_typeattr obj_typeattr
                     (file (not (entrypoint execmod mounton))))
              (allow subj_typeattr obj_typeattr
                     (lnk_file (not (execmod map mounton))))
              (allow subj_typeattr obj_typeattr
                     (sock_file (not (execmod map mounton))))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .cgiio.subj_type_transition (subj)))

(in .file
    (call .cgiio.execfile_obj_type_transition_cgiscriptfile
          (unconfined.subj_typeattr)))

(in .fw3
    (call .cgiio.writeinherited_fifo_files (subj)))

(in .logread
    (call .cgiio.writeinherited_fifo_files (subj)))

(in .xtables
    (call .cgiio.writeinherited_fifo_files (subj)))

(block cgiio

       ;;
       ;; Contexts
       ;;

       (filecon
        "/usr/bin/cgi-io"
        file
        cgiscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro execfile_obj_type_transition_cgiscriptfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 cgiscriptfile file "cgi-io")))

       (macro obj_type_transition_tmpfile ((type ARG1)(class ARG2)(name ARG3))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile ARG2 ARG3)))

       ;;
       ;; Policy
       ;;

       (blockinherit .cgiscript.base_template)
       (blockinherit .tmpfile.obj_template)

       (allow subj self (capability2 (syslog)))
       (allow subj self create_unix_stream_socket)

       (call manage_tmpfile_files (subj))
       (call obj_type_transition_tmpfile (subj file "*"))

       (call .sys.readringbuffer (subj))
       (call .sys.transition (subj))
       (call .sys.writeinherited_fifo_files (subj))
       (call .sys.dontaudit_noatsecure (subj))
       (call .sys.dontaudit_rlimitinh (subj))
       (call .sys.dontaudit_siginh (subj))

       (call .file.read_conffile_lnk_files (subj))
       (call .file.search_initscriptfile_dirs (subj))

       (call .locale.read.subj_type (subj))

       (call .logread.subj_type_transition (subj))

       (call .opkg.call.subj_type_transition (subj))

       (call .selinux.linked.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .sysupgrade.execfile_subj_type_transition (subj .sys.subj))
       (call .sysupgrade.mapexecute_execfile_files (subj))
       (call .sysupgrade.read_execfile_files (subj))

       (call .tmpfile.search_runtimetmpfile_dirs (subj))

       (call .ubusd.unix_stream_connect (subj))

       (call .uhttpd.readwriteinherited_fifo_files (subj))

       (call .xtables.subj_type_transition (subj))

       (optional cgiio_opt_mtdstordev
                 ;; save mtdblock contents
                 (call .dev.stor.read.subj_type (subj))
                 (call .mtd.read_stordev_blk_files (subj)))

       (optional cgiio_opt_rcfirewall
                 (call .rcfirewall.subj_type_transition (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block bpffile

       ;;
       ;; Policy
       ;;

       (blockinherit .file.obj_all_macro_template)

       (call .file.obj_type (obj_typeattr))

       (call .bpf.associate_filesystems (obj_typeattr))

       ;;
       ;; Templates
       ;;

       (block obj_base_template

              ;;
              ;; Contexts
              ;;

              (context
               bpffile_file_context
               (.u
                .r
                bpffile
                (systemlow
                 systemlow)))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_base_template)

              (type
               bpffile)

              (call .bpffile.obj_type (bpffile)))

       (block obj_macro_template

              ;;
              ;; Macros
              ;;

              (macro addname_bpffile_dirs ((type ARG1))
                     (allow ARG1 bpffile addname_dir))

              (macro append_bpffile_blk_files ((type ARG1))
                     (allow ARG1 bpffile append_blk_file))

              (macro append_bpffile_chr_files ((type ARG1))
                     (allow ARG1 bpffile append_chr_file))

              (macro append_bpffile_fifo_files ((type ARG1))
                     (allow ARG1 bpffile append_fifo_file))

              (macro append_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile append_file))

              (macro appendinherited_bpffile_blk_files ((type ARG1))
                     (allow ARG1 bpffile appendinherited_blk_file))

              (macro appendinherited_bpffile_chr_files ((type ARG1))
                     (allow ARG1 bpffile appendinherited_chr_file))

              (macro appendinherited_bpffile_fifo_files ((type ARG1))
                     (allow ARG1 bpffile appendinherited_fifo_file))

              (macro appendinherited_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile appendinherited_file))

              (macro bpffile_obj_type_transition
                     ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                     (typetransition ARG1 bpffile ARG3 ARG4 ARG2)
                     (call addname_bpffile_dirs (ARG1)))

              (macro create_bpffile ((type ARG1))
                     (allow ARG1 bpffile (allfiles (create))))

              (macro create_bpffile_blk_files ((type ARG1))
                     (allow ARG1 bpffile create_blk_file))

              (macro create_bpffile_chr_files ((type ARG1))
                     (allow ARG1 bpffile create_chr_file))

              (macro create_bpffile_dirs ((type ARG1))
                     (allow ARG1 bpffile create_dir))

              (macro create_bpffile_fifo_files ((type ARG1))
                     (allow ARG1 bpffile create_fifo_file))

              (macro create_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile create_file))

              (macro create_bpffile_lnk_files ((type ARG1))
                     (allow ARG1 bpffile create_lnk_file))

              (macro create_bpffile_sock_files ((type ARG1))
                     (allow ARG1 bpffile create_sock_file))

              (macro deletename_bpffile_dirs ((type ARG1))
                     (allow ARG1 bpffile deletename_dir))

              (macro delete_bpffile ((type ARG1))
                     (allow ARG1 bpffile (allfiles (delete))))

              (macro delete_bpffile_blk_files ((type ARG1))
                     (allow ARG1 bpffile delete_blk_file))

              (macro delete_bpffile_chr_files ((type ARG1))
                     (allow ARG1 bpffile delete_chr_file))

              (macro delete_bpffile_dirs ((type ARG1))
                     (allow ARG1 bpffile delete_dir))

              (macro delete_bpffile_fifo_files ((type ARG1))
                     (allow ARG1 bpffile delete_fifo_file))

              (macro delete_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile delete_file))

              (macro delete_bpffile_lnk_files ((type ARG1))
                     (allow ARG1 bpffile delete_lnk_file))

              (macro delete_bpffile_sock_files ((type ARG1))
                     (allow ARG1 bpffile delete_sock_file))

              (macro execute_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile execute_file))

              (macro list_bpffile_dirs ((type ARG1))
                     (allow ARG1 bpffile list_dir))

              (macro listinherited_bpffile_dirs ((type ARG1))
                     (allow ARG1 bpffile listinherited_dir))

              (macro manage_bpffile ((type ARG1))
                     (allow ARG1 bpffile (allfiles (manage))))

              (macro manage_bpffile_blk_files ((type ARG1))
                     (allow ARG1 bpffile manage_blk_file))

              (macro manage_bpffile_chr_files ((type ARG1))
                     (allow ARG1 bpffile manage_chr_file))

              (macro manage_bpffile_dirs ((type ARG1))
                     (allow ARG1 bpffile manage_dir))

              (macro manage_bpffile_fifo_files ((type ARG1))
                     (allow ARG1 bpffile manage_fifo_file))

              (macro manage_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile manage_file))

              (macro manage_bpffile_lnk_files ((type ARG1))
                     (allow ARG1 bpffile manage_lnk_file))

              (macro manage_bpffile_sock_files ((type ARG1))
                     (allow ARG1 bpffile manage_sock_file))

              (macro mapexecute_bpffile_chr_files ((type ARG1))
                     (allow ARG1 bpffile mapexecute_chr_file))

              (macro mapexecute_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile mapexecute_file))

              (macro mounton_bpffile ((type ARG1))
                     (allow ARG1 bpffile (allfiles (mounton))))

              (macro mounton_bpffile_blk_files ((type ARG1))
                     (allow ARG1 bpffile mounton_blk_file))

              (macro mounton_bpffile_chr_files ((type ARG1))
                     (allow ARG1 bpffile mounton_chr_file))

              (macro mounton_bpffile_dirs ((type ARG1))
                     (allow ARG1 bpffile mounton_dir))

              (macro mounton_bpffile_fifo_files ((type ARG1))
                     (allow ARG1 bpffile mounton_fifo_file))

              (macro mounton_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile mounton_file))

              (macro mounton_bpffile_lnk_files ((type ARG1))
                     (allow ARG1 bpffile mounton_lnk_file))

              (macro mounton_bpffile_sock_files ((type ARG1))
                     (allow ARG1 bpffile mounton_sock_file))

              (macro read_bpffile ((type ARG1))
                     (allow ARG1 bpffile (allfiles (read))))

              (macro read_bpffile_blk_files ((type ARG1))
                     (allow ARG1 bpffile read_blk_file))

              (macro read_bpffile_chr_files ((type ARG1))
                     (allow ARG1 bpffile read_chr_file))

              (macro read_bpffile_fifo_files ((type ARG1))
                     (allow ARG1 bpffile read_fifo_file))

              (macro read_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile read_file))

              (macro read_bpffile_lnk_files ((type ARG1))
                     (allow ARG1 bpffile read_lnk_file))

              (macro read_bpffile_sock_files ((type ARG1))
                     (allow ARG1 bpffile read_sock_file))

              (macro readinherited_bpffile_blk_files ((type ARG1))
                     (allow ARG1 bpffile readinherited_blk_file))

              (macro readinherited_bpffile_chr_files ((type ARG1))
                     (allow ARG1 bpffile readinherited_chr_file))

              (macro readinherited_bpffile_fifo_files ((type ARG1))
                     (allow ARG1 bpffile readinherited_fifo_file))

              (macro readinherited_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile readinherited_file))

              (macro readinherited_bpffile_sock_files ((type ARG1))
                     (allow ARG1 bpffile readinherited_sock_file))

              (macro readwrite_bpffile ((type ARG1))
                     (allow ARG1 bpffile (allfiles (readwrite))))

              (macro readwrite_bpffile_blk_files ((type ARG1))
                     (allow ARG1 bpffile readwrite_blk_file))

              (macro readwrite_bpffile_chr_files ((type ARG1))
                     (allow ARG1 bpffile readwrite_chr_file))

              (macro readwrite_bpffile_dirs ((type ARG1))
                     (allow ARG1 bpffile readwrite_dir))

              (macro readwrite_bpffile_fifo_files ((type ARG1))
                     (allow ARG1 bpffile readwrite_fifo_file))

              (macro readwrite_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile readwrite_file))

              (macro readwrite_bpffile_lnk_files ((type ARG1))
                     (allow ARG1 bpffile readwrite_lnk_file))

              (macro readwrite_bpffile_sock_files ((type ARG1))
                     (allow ARG1 bpffile readwrite_sock_file))

              (macro readwriteinherited_bpffile_blk_files ((type ARG1))
                     (allow ARG1 bpffile readwriteinherited_blk_file))

              (macro readwriteinherited_bpffile_chr_files ((type ARG1))
                     (allow ARG1 bpffile readwriteinherited_chr_file))

              (macro readwriteinherited_bpffile_dirs ((type ARG1))
                     (allow ARG1 bpffile readwriteinherited_dir))

              (macro readwriteinherited_bpffile_fifo_files ((type ARG1))
                     (allow ARG1 bpffile readwriteinherited_fifo_file))

              (macro readwriteinherited_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile readwriteinherited_file))

              (macro readwriteinherited_bpffile_sock_files ((type ARG1))
                     (allow ARG1 bpffile readwriteinherited_sock_file))

              (macro relabel_bpffile ((type ARG1))
                     (allow ARG1 bpffile (allfiles (relabel))))

              (macro relabel_bpffile_blk_files ((type ARG1))
                     (allow ARG1 bpffile relabel_blk_file))

              (macro relabel_bpffile_chr_files ((type ARG1))
                     (allow ARG1 bpffile relabel_chr_file))

              (macro relabel_bpffile_dirs ((type ARG1))
                     (allow ARG1 bpffile relabel_dir))

              (macro relabel_bpffile_fifo_files ((type ARG1))
                     (allow ARG1 bpffile relabel_fifo_file))

              (macro relabel_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile relabel_file))

              (macro relabel_bpffile_lnk_files ((type ARG1))
                     (allow ARG1 bpffile relabel_lnk_file))

              (macro relabel_bpffile_sock_files ((type ARG1))
                     (allow ARG1 bpffile relabel_sock_file))

              (macro relabelfrom_bpffile ((type ARG1))
                     (allow ARG1 bpffile (allfiles (relabelfrom))))

              (macro relabelfrom_bpffile_blk_files ((type ARG1))
                     (allow ARG1 bpffile relabelfrom_blk_file))

              (macro relabelfrom_bpffile_chr_files ((type ARG1))
                     (allow ARG1 bpffile relabelfrom_chr_file))

              (macro relabelfrom_bpffile_dirs ((type ARG1))
                     (allow ARG1 bpffile relabelfrom_dir))

              (macro relabelfrom_bpffile_fifo_files ((type ARG1))
                     (allow ARG1 bpffile relabelfrom_fifo_file))

              (macro relabelfrom_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile relabelfrom_file))

              (macro relabelfrom_bpffile_lnk_files ((type ARG1))
                     (allow ARG1 bpffile relabelfrom_lnk_file))

              (macro relabelfrom_bpffile_sock_files ((type ARG1))
                     (allow ARG1 bpffile relabelfrom_sock_file))

              (macro relabelto_bpffile ((type ARG1))
                     (allow ARG1 bpffile (allfiles (relabelto))))

              (macro relabelto_bpffile_blk_files ((type ARG1))
                     (allow ARG1 bpffile relabelto_blk_file))

              (macro relabelto_bpffile_chr_files ((type ARG1))
                     (allow ARG1 bpffile relabelto_chr_file))

              (macro relabelto_bpffile_dirs ((type ARG1))
                     (allow ARG1 bpffile relabelto_dir))

              (macro relabelto_bpffile_fifo_files ((type ARG1))
                     (allow ARG1 bpffile relabelto_fifo_file))

              (macro relabelto_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile relabelto_file))

              (macro relabelto_bpffile_lnk_files ((type ARG1))
                     (allow ARG1 bpffile relabelto_lnk_file))

              (macro relabelto_bpffile_sock_files ((type ARG1))
                     (allow ARG1 bpffile relabelto_sock_file))

              (macro rename_bpffile ((type ARG1))
                     (allow ARG1 bpffile (allfiles (rename))))

              (macro rename_bpffile_blk_files ((type ARG1))
                     (allow ARG1 bpffile rename_blk_file))

              (macro rename_bpffile_chr_files ((type ARG1))
                     (allow ARG1 bpffile rename_chr_file))

              (macro rename_bpffile_dirs ((type ARG1))
                     (allow ARG1 bpffile rename_dir))

              (macro rename_bpffile_fifo_files ((type ARG1))
                     (allow ARG1 bpffile rename_fifo_file))

              (macro rename_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile rename_file))

              (macro rename_bpffile_lnk_files ((type ARG1))
                     (allow ARG1 bpffile rename_lnk_file))

              (macro rename_bpffile_sock_files ((type ARG1))
                     (allow ARG1 bpffile rename_sock_file))

              (macro search_bpffile_dirs ((type ARG1))
                     (allow ARG1 bpffile search_dir))

              (macro write_bpffile ((type ARG1))
                     (allow ARG1 bpffile (allfiles (write))))

              (macro write_bpffile_blk_files ((type ARG1))
                     (allow ARG1 bpffile write_blk_file))

              (macro write_bpffile_chr_files ((type ARG1))
                     (allow ARG1 bpffile write_chr_file))

              (macro write_bpffile_dirs ((type ARG1))
                     (allow ARG1 bpffile write_dir))

              (macro write_bpffile_fifo_files ((type ARG1))
                     (allow ARG1 bpffile write_fifo_file))

              (macro write_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile write_file))

              (macro write_bpffile_lnk_files ((type ARG1))
                     (allow ARG1 bpffile write_lnk_file))

              (macro write_bpffile_sock_files ((type ARG1))
                     (allow ARG1 bpffile write_sock_file))

              (macro writeinherited_bpffile_blk_files ((type ARG1))
                     (allow ARG1 bpffile writeinherited_blk_file))

              (macro writeinherited_bpffile_chr_files ((type ARG1))
                     (allow ARG1 bpffile writeinherited_chr_file))

              (macro writeinherited_bpffile_dirs ((type ARG1))
                     (allow ARG1 bpffile writeinherited_dir))

              (macro writeinherited_bpffile_fifo_files ((type ARG1))
                     (allow ARG1 bpffile writeinherited_fifo_file))

              (macro writeinherited_bpffile_files ((type ARG1))
                     (allow ARG1 bpffile writeinherited_file))

              (macro writeinherited_bpffile_sock_files ((type ARG1))
                     (allow ARG1 bpffile writeinherited_sock_file))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_macro_template))

       (block obj_template

              ;;
              ;; Policy
              ;;

              (blockabstract obj_template)

              (blockinherit .bpffile.obj_base_template)
              (blockinherit .bpffile.obj_macro_template)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(category
 c0)
(categoryorder
 (c0))

(sensitivity
 s0)
(sensitivityorder
 (s0))

(sensitivitycategory
 s0
 (range
  c0
  c0))

(level
 systemlow
 (s0))
(level
 systemhigh
 (s0
  (range
   c0
   c0)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .fs

    (block noseclabel

           ;;
           ;; Policy
           ;;

           (blockinherit obj_all_macro_template)

           (allow obj_typeattr self (filesystem (associate)))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .fs.obj_base_template)

                  (call .fs.noseclabel.obj_type (fs)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .fs.noseclabel.obj_base_template)
                  (blockinherit .fs.obj_file_macro_template)
                  (blockinherit .fs.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in fuse

    ;;
    ;; Contexts
    ;;

    (genfscon
     "fuse"
     "/"
     fs_context)
    (genfscon
     "fusectl"
     "/"
     fs_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .fs.noseclabel.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block iso9660

       ;;
       ;; Contexts
       ;;

       (genfscon
        "iso9660"
        "/"
        fs_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .fs.noseclabel.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block ns

       ;;
       ;; Contexts
       ;;

       (genfscon
        "nsfs"
        "/"
        fs_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .fs.noseclabel.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .selinux

    ;;
    ;; Contexts
    ;;

    (filecon
     "/sys/fs/selinux(/.*)?"
     any
     ())

    (genfscon
     "selinuxfs"
     "/"
     fs_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .fs.noseclabel.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block removable

       ;;
       ;; Policy
       ;;

       (blockinherit .fs.noseclabel.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block auto

       ;;
       ;; Contexts
       ;;

       (genfscon
        "autofs"
        "/"
        fs_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .fs.noseclabel.obj_template)

       (call .sys.mountpoint.obj_type (fs)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .dos.obj_type_transition_fs (unconfined.subj_typeattr)))

(block dos

       ;;
       ;; Contexts
       ;;

       (filecon
        "/boot"
        dir
        fs_context)
       (filecon
        "/boot/.*"
        any
        fs_context)

       (genfscon
        "exfat"
        "/"
        fs_context)
       (genfscon
        "ntfs-3g"
        "/"
        fs_context)
       (genfscon
        "vfat"
        "/"
        fs_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_fs ((type ARG1))
              (call .sys.rootfile_obj_type_transition
                    (ARG1 fs dir "boot")))

       (macro setattr_fs_dirs ((type ARG1))
              (allow ARG1 fs (dir (setattr))))

       ;;
       ;; Policy
       ;;

       (blockinherit .fs.noseclabel.obj_template)

       (call .sys.mountpoint.obj_type (fs))

       (call .xattr.associate_filesystems (fs)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .fs
    (call .proc.obj_type_transition_fs (unconfined.subj_typeattr)))

(block proc

       ;;
       ;; Contexts
       ;;

       (filecon
        "/proc"
        dir
        fs_context)
       (filecon
        "/proc/.*"
        any
        ())

       (genfscon
        "proc"
        "/"
        fs_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_fs ((type ARG1))
              (call .sys.rootfile_obj_type_transition
                    (ARG1 fs dir "proc")))

       (macro dontaudit_associate_filesystems ((type ARG1))
              (dontaudit ARG1 fs (filesystem (associate))))

       ;;
       ;; Policy
       ;;

       (blockinherit .fs.noseclabel.obj_template)

       (call .sys.mountpoint.obj_type (fs))

       (call .xattr.associate_filesystems (fs)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block bpf

       ;;
       ;; Contexts
       ;;

       (genfscon
        "bpf"
        "/"
        fs_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .fs.obj_file_macro_template)
       (blockinherit .fs.seclabel.obj_template)

       (allow fs self (filesystem (associate))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .fs
    (call .tmp.rootfile_obj_type_transition_fs (unconfined.subj_typeattr)))

(block tmp

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev"
        dir
        fs_context)
       (filecon
        "/dev/.*"
        any
        ())

       (filecon
        "/tmp"
        dir
        fs_context)
       (filecon
        "/tmp/.*"
        any
        ())

       ;; compatibility
       (fsuse
        trans
        "devtmpfs"
        fs_context)
       (fsuse
        trans
        "ramfs"
        fs_context)
       (fsuse
        trans
        "tmpfs"
        fs_context)

       ;;
       ;; Macros
       ;;

       (macro rootfile_obj_type_transition_fs ((type ARG1))
              (call .sys.rootfile_obj_type_transition
                    (ARG1 fs dir "dev"))
              (call .sys.rootfile_obj_type_transition
                    (ARG1 fs dir "tmp")))

       (macro dontaudit_getattr_fs_chr_files ((type ARG1))
              (dontaudit ARG1 fs (chr_file (getattr))))

       ;;
       ;; Policy
       ;;

       (blockinherit .fs.obj_file_macro_template)
       (blockinherit .fs.seclabel.obj_template)

       (allow fs self (filesystem (associate)))

       (call .sys.mountpoint.obj_type (fs))

       (call .xattr.associate_filesystems (fs)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block pts

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/pts(/.*)?"
        any
        ())

       (fsuse
        trans
        "devpts"
        fs_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .fs.obj_file_macro_template)
       (blockinherit .fs.seclabel.obj_template)

       (allow fs self (filesystem (associate))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block debug

       ;;
       ;; Contexts
       ;;

       (genfscon
        "debugfs"
        "/"
        fs_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .fs.obj_file_macro_template)
       (blockinherit .fs.seclabel.obj_template)

       (allow fs self (filesystem (associate)))

       (optional debugseclabelfs_opt_sandbox
                 (call .fs.sandboxexception.obj_type (fs))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block root

       ;;
       ;; Contexts
       ;;

       (genfscon
        "rootfs"
        "/"
        fs_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .fs.obj_file_macro_template)
       (blockinherit .fs.seclabel.obj_template)

       (allow fs self (filesystem (associate))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block pstore

       ;;
       ;; Contexts
       ;;

       (genfscon
        "pstore"
        "/"
        fs_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .fs.obj_file_macro_template)
       (blockinherit .fs.seclabel.obj_template)

       (allow fs self (filesystem (associate))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block xattr

       ;;
       ;; Contexts
       ;;

       (fsuse
        task
        "pipefs"
        fs_context)
       (fsuse
        task
        "sockfs"
        fs_context)

       (fsuse
        xattr
        "btrfs"
        fs_context)
       (fsuse
        xattr
        "ext2"
        fs_context)
       (fsuse
        xattr
        "ext3"
        fs_context)
       (fsuse
        xattr
        "ext4"
        fs_context)
       (fsuse
        xattr
        "f2fs"
        fs_context)
       (fsuse
        xattr
        "jffs2"
        fs_context)
       (fsuse
        xattr
        "overlay"
        fs_context)
       (fsuse
        xattr
        "squashfs"
        fs_context)
       (fsuse
        xattr
        "ubifs"
        fs_context)
       (fsuse
        xattr
        "xfs"
        fs_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .fs.seclabel.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .fs
    (call .sys.obj_type_transition_fs (unconfined.subj_typeattr)))

(in .sys

    ;;
    ;; Contexts
    ;;

    (filecon
     "/sys"
     dir
     fs_context)
    (filecon
     "/sys/.*"
     any
     ())

    (genfscon
     "sysfs"
     "/"
     fs_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_fs ((type ARG1))
           (call .sys.rootfile_obj_type_transition
                 (ARG1 fs dir "sys")))

    ;;
    ;; Policy
    ;;

    (blockinherit .fs.obj_file_macro_template)
    (blockinherit .fs.seclabel.obj_template)

    (allow fs self (filesystem (associate)))

    (call .sys.mountpoint.obj_type (fs))

    (call .xattr.associate_filesystems (fs)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block cgroup

       ;;
       ;; Contexts
       ;;

       (genfscon
        "cgroup2"
        "/"
        fs_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .fs.obj_file_macro_template)
       (blockinherit .fs.seclabel.obj_template)

       (allow fs self (filesystem (associate))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .fs

    (block seclabel

           ;;
           ;; Policy
           ;;

           (blockinherit obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .fs.obj_base_template)

                  (call .fs.seclabel.obj_type (fs)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .fs.obj_macro_template)
                  (blockinherit .fs.seclabel.obj_base_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

;;
;; Classmaps
;;

(classmap
 allfiles
 (create delete manage mounton read readwrite relabel relabelfrom relabelto
         rename write))

(classmap
 blkfiles
 (append create delete manage mounton read readwrite relabel relabelfrom
         relabelto rename write))
(classmap
 chrfiles
 (append create delete manage mapexecute mounton read readwrite relabel
         relabelfrom relabelto rename write))
(classmap
 dirs
 (create delete list manage mounton readwrite relabel relabelfrom relabelto
         rename write))
(classmap
 fifofiles
 (append create delete manage mounton read readwrite relabel relabelfrom
         relabelto rename write))
(classmap
 files
 (append create delete execute manage mapexecute mounton read readwrite relabel
         relabelfrom relabelto rename write))
(classmap
 lnkfiles
 (create delete manage mounton read readwrite relabel relabelfrom relabelto
         rename write))
(classmap
 sockfiles
 (create delete manage mounton read readwrite relabel relabelfrom relabelto
         rename write))

(classmapping
 allfiles
 create
 addname_dir)
(classmapping
 allfiles
 create
 create_blk_file)
(classmapping
 allfiles
 create
 create_chr_file)
(classmapping
 allfiles
 create
 create_dir)
(classmapping
 allfiles
 create
 create_fifo_file)
(classmapping
 allfiles
 create
 create_file)
(classmapping
 allfiles
 create
 create_lnk_file)
(classmapping
 allfiles
 create
 create_sock_file)
(classmapping
 allfiles
 create
 read_lnk_file)

(classmapping
 allfiles
 delete
 deletename_dir)
(classmapping
 allfiles
 delete
 delete_blk_file)
(classmapping
 allfiles
 delete
 delete_chr_file)
(classmapping
 allfiles
 delete
 delete_dir)
(classmapping
 allfiles
 delete
 delete_fifo_file)
(classmapping
 allfiles
 delete
 delete_file)
(classmapping
 allfiles
 delete
 delete_lnk_file)
(classmapping
 allfiles
 delete
 delete_sock_file)
(classmapping
 allfiles
 delete
 read_lnk_file)

(classmapping
 allfiles
 manage
 manage_blk_file)
(classmapping
 allfiles
 manage
 manage_chr_file)
(classmapping
 allfiles
 manage
 manage_dir)
(classmapping
 allfiles
 manage
 manage_fifo_file)
(classmapping
 allfiles
 manage
 manage_file)
(classmapping
 allfiles
 manage
 manage_lnk_file)
(classmapping
 allfiles
 manage
 manage_sock_file)
(classmapping
 allfiles
 manage
 read_lnk_file)

(classmapping
 allfiles
 mounton
 mounton_blk_file)
(classmapping
 allfiles
 mounton
 mounton_chr_file)
(classmapping
 allfiles
 mounton
 mounton_dir)
(classmapping
 allfiles
 mounton
 mounton_fifo_file)
(classmapping
 allfiles
 mounton
 mounton_file)
(classmapping
 allfiles
 mounton
 mounton_lnk_file)
(classmapping
 allfiles
 mounton
 mounton_sock_file)
(classmapping
 allfiles
 mounton
 read_lnk_file)
(classmapping
 allfiles
 mounton
 search_dir)

(classmapping
 allfiles
 read
 list_dir)
(classmapping
 allfiles
 read
 read_blk_file)
(classmapping
 allfiles
 read
 read_chr_file)
(classmapping
 allfiles
 read
 read_fifo_file)
(classmapping
 allfiles
 read
 read_file)
(classmapping
 allfiles
 read
 read_lnk_file)
(classmapping
 allfiles
 read
 read_sock_file)

(classmapping
 allfiles
 readwrite
 readwrite_blk_file)
(classmapping
 allfiles
 readwrite
 readwrite_chr_file)
(classmapping
 allfiles
 readwrite
 readwrite_dir)
(classmapping
 allfiles
 readwrite
 readwrite_fifo_file)
(classmapping
 allfiles
 readwrite
 readwrite_file)
(classmapping
 allfiles
 readwrite
 readwrite_lnk_file)
(classmapping
 allfiles
 readwrite
 readwrite_sock_file)

(classmapping
 allfiles
 relabel
 relabel_blk_file)
(classmapping
 allfiles
 relabel
 relabel_chr_file)
(classmapping
 allfiles
 relabel
 relabel_dir)
(classmapping
 allfiles
 relabel
 relabel_fifo_file)
(classmapping
 allfiles
 relabel
 relabel_file)
(classmapping
 allfiles
 relabel
 relabel_lnk_file)
(classmapping
 allfiles
 relabel
 relabel_sock_file)
(classmapping
 allfiles
 relabel
 read_lnk_file)
(classmapping
 allfiles
 relabel
 search_dir)

(classmapping
 allfiles
 relabelfrom
 relabelfrom_blk_file)
(classmapping
 allfiles
 relabelfrom
 relabelfrom_chr_file)
(classmapping
 allfiles
 relabelfrom
 relabelfrom_dir)
(classmapping
 allfiles
 relabelfrom
 relabelfrom_fifo_file)
(classmapping
 allfiles
 relabelfrom
 relabelfrom_file)
(classmapping
 allfiles
 relabelfrom
 relabelfrom_lnk_file)
(classmapping
 allfiles
 relabelfrom
 relabelfrom_sock_file)
(classmapping
 allfiles
 relabelfrom
 read_lnk_file)
(classmapping
 allfiles
 relabelfrom
 search_dir)

(classmapping
 allfiles
 relabelto
 relabelto_blk_file)
(classmapping
 allfiles
 relabelto
 relabelto_chr_file)
(classmapping
 allfiles
 relabelto
 relabelto_dir)
(classmapping
 allfiles
 relabelto
 relabelto_fifo_file)
(classmapping
 allfiles
 relabelto
 relabelto_file)
(classmapping
 allfiles
 relabelto
 relabelto_lnk_file)
(classmapping
 allfiles
 relabelto
 relabelto_sock_file)
(classmapping
 allfiles
 relabelto
 read_lnk_file)
(classmapping
 allfiles
 relabelto
 search_dir)

(classmapping
 allfiles
 rename
 rename_blk_file)
(classmapping
 allfiles
 rename
 rename_chr_file)
(classmapping
 allfiles
 rename
 rename_dir)
(classmapping
 allfiles
 rename
 rename_fifo_file)
(classmapping
 allfiles
 rename
 rename_file)
(classmapping
 allfiles
 rename
 rename_lnk_file)
(classmapping
 allfiles
 rename
 rename_sock_file)
(classmapping
 allfiles
 rename
 read_lnk_file)
(classmapping
 allfiles
 rename
 readwrite_dir)

(classmapping
 allfiles
 write
 write_blk_file)
(classmapping
 allfiles
 write
 write_chr_file)
(classmapping
 allfiles
 write
 write_dir)
(classmapping
 allfiles
 write
 write_fifo_file)
(classmapping
 allfiles
 write
 write_file)
(classmapping
 allfiles
 write
 write_lnk_file)
(classmapping
 allfiles
 write
 write_sock_file)
(classmapping
 allfiles
 write
 read_lnk_file)

(classmapping
 blkfiles
 append
 append_blk_file)
(classmapping
 blkfiles
 append
 read_lnk_file)
(classmapping
 blkfiles
 append
 search_dir)

(classmapping
 blkfiles
 create
 addname_dir)
(classmapping
 blkfiles
 create
 create_blk_file)
(classmapping
 blkfiles
 create
 read_lnk_file)

(classmapping
 blkfiles
 delete
 deletename_dir)
(classmapping
 blkfiles
 delete
 delete_blk_file)
(classmapping
 blkfiles
 delete
 read_lnk_file)

(classmapping
 blkfiles
 manage
 readwrite_dir)
(classmapping
 blkfiles
 manage
 manage_blk_file)
(classmapping
 blkfiles
 manage
 read_lnk_file)

(classmapping
 blkfiles
 mounton
 mounton_blk_file)
(classmapping
 blkfiles
 mounton
 read_lnk_file)
(classmapping
 blkfiles
 mounton
 search_dir)

(classmapping
 blkfiles
 read
 read_blk_file)
(classmapping
 blkfiles
 read
 read_lnk_file)
(classmapping
 blkfiles
 read
 search_dir)

(classmapping
 blkfiles
 readwrite
 readwrite_blk_file)
(classmapping
 blkfiles
 readwrite
 read_lnk_file)
(classmapping
 blkfiles
 readwrite
 search_dir)

(classmapping
 blkfiles
 relabel
 relabel_blk_file)
(classmapping
 blkfiles
 relabel
 read_lnk_file)
(classmapping
 blkfiles
 relabel
 search_dir)

(classmapping
 blkfiles
 relabelfrom
 relabelfrom_blk_file)
(classmapping
 blkfiles
 relabelfrom
 read_lnk_file)
(classmapping
 blkfiles
 relabelfrom
 search_dir)

(classmapping
 blkfiles
 relabelto
 relabelto_blk_file)
(classmapping
 blkfiles
 relabelto
 read_lnk_file)
(classmapping
 blkfiles
 relabelto
 search_dir)

(classmapping
 blkfiles
 rename
 rename_blk_file)
(classmapping
 blkfiles
 rename
 read_lnk_file)
(classmapping
 blkfiles
 rename
 readwrite_dir)

(classmapping
 blkfiles
 write
 write_blk_file)
(classmapping
 blkfiles
 write
 read_lnk_file)
(classmapping
 blkfiles
 write
 search_dir)

(classmapping
 chrfiles
 append
 append_chr_file)
(classmapping
 chrfiles
 append
 read_lnk_file)
(classmapping
 chrfiles
 append
 search_dir)

(classmapping
 chrfiles
 create
 addname_dir)
(classmapping
 chrfiles
 create
 create_chr_file)
(classmapping
 chrfiles
 create
 read_lnk_file)

(classmapping
 chrfiles
 delete
 deletename_dir)
(classmapping
 chrfiles
 delete
 delete_chr_file)
(classmapping
 chrfiles
 delete
 read_lnk_file)

(classmapping
 chrfiles
 manage
 readwrite_dir)
(classmapping
 chrfiles
 manage
 manage_chr_file)
(classmapping
 chrfiles
 manage
 read_lnk_file)

(classmapping
 chrfiles
 mapexecute
 mapexecute_chr_file)
(classmapping
 chrfiles
 mapexecute
 read_lnk_file)
(classmapping
 chrfiles
 mapexecute
 search_dir)

(classmapping
 chrfiles
 mounton
 mounton_chr_file)
(classmapping
 chrfiles
 mounton
 read_lnk_file)
(classmapping
 chrfiles
 mounton
 search_dir)

(classmapping
 chrfiles
 read
 read_chr_file)
(classmapping
 chrfiles
 read
 read_lnk_file)
(classmapping
 chrfiles
 read
 search_dir)

(classmapping
 chrfiles
 readwrite
 readwrite_chr_file)
(classmapping
 chrfiles
 readwrite
 read_lnk_file)
(classmapping
 chrfiles
 readwrite
 search_dir)

(classmapping
 chrfiles
 relabel
 relabel_chr_file)
(classmapping
 chrfiles
 relabel
 read_lnk_file)
(classmapping
 chrfiles
 relabel
 search_dir)

(classmapping
 chrfiles
 relabelfrom
 relabelfrom_chr_file)
(classmapping
 chrfiles
 relabelfrom
 read_lnk_file)
(classmapping
 chrfiles
 relabelfrom
 search_dir)

(classmapping
 chrfiles
 relabelto
 relabelto_chr_file)
(classmapping
 chrfiles
 relabelto
 read_lnk_file)
(classmapping
 chrfiles
 relabelto
 search_dir)

(classmapping
 chrfiles
 rename
 rename_chr_file)
(classmapping
 chrfiles
 rename
 read_lnk_file)
(classmapping
 chrfiles
 rename
 readwrite_dir)

(classmapping
 chrfiles
 write
 write_chr_file)
(classmapping
 chrfiles
 write
 read_lnk_file)
(classmapping
 chrfiles
 write
 search_dir)

(classmapping
 dirs
 create
 addname_dir)
(classmapping
 dirs
 create
 create_dir)
(classmapping
 dirs
 create
 read_lnk_file)

(classmapping
 dirs
 delete
 deletename_dir)
(classmapping
 dirs
 delete
 delete_dir)
(classmapping
 dirs
 delete
 read_lnk_file)

(classmapping
 dirs
 list
 list_dir)
(classmapping
 dirs
 list
 read_lnk_file)

(classmapping
 dirs
 manage
 manage_dir)
(classmapping
 dirs
 manage
 read_lnk_file)

(classmapping
 dirs
 mounton
 mounton_dir)
(classmapping
 dirs
 mounton
 read_lnk_file)
(classmapping
 dirs
 mounton
 search_dir)

(classmapping
 dirs
 readwrite
 readwrite_dir)
(classmapping
 dirs
 readwrite
 read_lnk_file)

(classmapping
 dirs
 relabel
 relabel_dir)
(classmapping
 dirs
 relabel
 read_lnk_file)
(classmapping
 dirs
 relabel
 search_dir)

(classmapping
 dirs
 relabelfrom
 relabelfrom_dir)
(classmapping
 dirs
 relabelfrom
 read_lnk_file)
(classmapping
 dirs
 relabelfrom
 search_dir)

(classmapping
 dirs
 relabelto
 relabelto_dir)
(classmapping
 dirs
 relabelto
 read_lnk_file)
(classmapping
 dirs
 relabelto
 search_dir)

(classmapping
 dirs
 rename
 rename_dir)
(classmapping
 dirs
 rename
 read_lnk_file)
(classmapping
 dirs
 rename
 readwrite_dir)

(classmapping
 dirs
 write
 write_dir)
(classmapping
 dirs
 write
 read_lnk_file)

(classmapping
 fifofiles
 append
 append_fifo_file)
(classmapping
 fifofiles
 append
 read_lnk_file)
(classmapping
 fifofiles
 append
 search_dir)

(classmapping
 fifofiles
 create
 addname_dir)
(classmapping
 fifofiles
 create
 create_fifo_file)
(classmapping
 fifofiles
 create
 read_lnk_file)

(classmapping
 fifofiles
 delete
 deletename_dir)
(classmapping
 fifofiles
 delete
 delete_fifo_file)
(classmapping
 fifofiles
 delete
 read_lnk_file)

(classmapping
 fifofiles
 manage
 readwrite_dir)
(classmapping
 fifofiles
 manage
 manage_fifo_file)
(classmapping
 fifofiles
 manage
 read_lnk_file)

(classmapping
 fifofiles
 mounton
 mounton_fifo_file)
(classmapping
 fifofiles
 mounton
 read_lnk_file)
(classmapping
 fifofiles
 mounton
 search_dir)

(classmapping
 fifofiles
 read
 read_fifo_file)
(classmapping
 fifofiles
 read
 read_lnk_file)
(classmapping
 fifofiles
 read
 search_dir)

(classmapping
 fifofiles
 readwrite
 readwrite_fifo_file)
(classmapping
 fifofiles
 readwrite
 read_lnk_file)
(classmapping
 fifofiles
 readwrite
 search_dir)

(classmapping
 fifofiles
 relabel
 relabel_fifo_file)
(classmapping
 fifofiles
 relabel
 read_lnk_file)
(classmapping
 fifofiles
 relabel
 search_dir)

(classmapping
 fifofiles
 relabelfrom
 relabelfrom_fifo_file)
(classmapping
 fifofiles
 relabelfrom
 read_lnk_file)
(classmapping
 fifofiles
 relabelfrom
 search_dir)

(classmapping
 fifofiles
 relabelto
 relabelto_fifo_file)
(classmapping
 fifofiles
 relabelto
 read_lnk_file)
(classmapping
 fifofiles
 relabelto
 search_dir)

(classmapping
 fifofiles
 rename
 rename_fifo_file)
(classmapping
 fifofiles
 rename
 read_lnk_file)
(classmapping
 fifofiles
 rename
 readwrite_dir)

(classmapping
 fifofiles
 write
 write_fifo_file)
(classmapping
 fifofiles
 write
 read_lnk_file)
(classmapping
 fifofiles
 write
 search_dir)

(classmapping
 files
 append
 append_file)
(classmapping
 files
 append
 read_lnk_file)
(classmapping
 files
 append
 search_dir)

(classmapping
 files
 create
 addname_dir)
(classmapping
 files
 create
 create_file)
(classmapping
 files
 create
 read_lnk_file)

(classmapping
 files
 delete
 deletename_dir)
(classmapping
 files
 delete
 delete_file)
(classmapping
 files
 delete
 read_lnk_file)

(classmapping
 files
 execute
 execute_file)
(classmapping
 files
 execute
 read_lnk_file)
(classmapping
 files
 execute
 search_dir)

(classmapping
 files
 manage
 readwrite_dir)
(classmapping
 files
 manage
 manage_file)
(classmapping
 files
 manage
 read_lnk_file)

(classmapping
 files
 mapexecute
 mapexecute_file)
(classmapping
 files
 mapexecute
 read_lnk_file)
(classmapping
 files
 mapexecute
 search_dir)

(classmapping
 files
 mounton
 mounton_file)
(classmapping
 files
 mounton
 read_lnk_file)
(classmapping
 files
 mounton
 search_dir)

(classmapping
 files
 read
 read_file)
(classmapping
 files
 read
 read_lnk_file)
(classmapping
 files
 read
 search_dir)

(classmapping
 files
 readwrite
 readwrite_file)
(classmapping
 files
 readwrite
 read_lnk_file)
(classmapping
 files
 readwrite
 search_dir)

(classmapping
 files
 relabel
 relabel_file)
(classmapping
 files
 relabel
 read_lnk_file)
(classmapping
 files
 relabel
 search_dir)

(classmapping
 files
 relabelfrom
 relabelfrom_file)
(classmapping
 files
 relabelfrom
 read_lnk_file)
(classmapping
 files
 relabelfrom
 search_dir)

(classmapping
 files
 relabelto
 relabelto_file)
(classmapping
 files
 relabelto
 read_lnk_file)
(classmapping
 files
 relabelto
 search_dir)

(classmapping
 files
 rename
 rename_file)
(classmapping
 files
 rename
 read_lnk_file)
(classmapping
 files
 rename
 readwrite_dir)

(classmapping
 files
 write
 write_file)
(classmapping
 files
 write
 read_lnk_file)
(classmapping
 files
 write
 search_dir)

(classmapping
 lnkfiles
 create
 addname_dir)
(classmapping
 lnkfiles
 create
 create_lnk_file)
(classmapping
 lnkfiles
 create
 read_lnk_file)

(classmapping
 lnkfiles
 delete
 deletename_dir)
(classmapping
 lnkfiles
 delete
 delete_lnk_file)
(classmapping
 lnkfiles
 delete
 read_lnk_file)

(classmapping
 lnkfiles
 manage
 readwrite_dir)
(classmapping
 lnkfiles
 manage
 manage_lnk_file)

(classmapping
 lnkfiles
 mounton
 mounton_lnk_file)
(classmapping
 lnkfiles
 mounton
 read_lnk_file)
(classmapping
 lnkfiles
 mounton
 search_dir)

(classmapping
 lnkfiles
 read
 read_lnk_file)
(classmapping
 lnkfiles
 read
 search_dir)

(classmapping
 lnkfiles
 readwrite
 readwrite_lnk_file)
(classmapping
 lnkfiles
 readwrite
 search_dir)

(classmapping
 lnkfiles
 relabel
 relabel_lnk_file)
(classmapping
 lnkfiles
 relabel
 read_lnk_file)
(classmapping
 lnkfiles
 relabel
 search_dir)

(classmapping
 lnkfiles
 relabelfrom
 relabelfrom_lnk_file)
(classmapping
 lnkfiles
 relabelfrom
 read_lnk_file)
(classmapping
 lnkfiles
 relabelfrom
 search_dir)

(classmapping
 lnkfiles
 relabelto
 relabelto_lnk_file)
(classmapping
 lnkfiles
 relabelto
 read_lnk_file)
(classmapping
 lnkfiles
 relabelto
 search_dir)

(classmapping
 lnkfiles
 rename
 rename_lnk_file)
(classmapping
 lnkfiles
 rename
 read_lnk_file)
(classmapping
 lnkfiles
 rename
 readwrite_dir)

(classmapping
 lnkfiles
 write
 write_lnk_file)
(classmapping
 lnkfiles
 write
 read_lnk_file)
(classmapping
 lnkfiles
 write
 search_dir)

(classmapping
 sockfiles
 create
 addname_dir)
(classmapping
 sockfiles
 create
 create_sock_file)
(classmapping
 sockfiles
 create
 read_lnk_file)

(classmapping
 sockfiles
 delete
 deletename_dir)
(classmapping
 sockfiles
 delete
 delete_sock_file)
(classmapping
 sockfiles
 delete
 read_lnk_file)

(classmapping
 sockfiles
 manage
 readwrite_dir)
(classmapping
 sockfiles
 manage
 manage_sock_file)
(classmapping
 sockfiles
 manage
 read_lnk_file)

(classmapping
 sockfiles
 mounton
 mounton_sock_file)
(classmapping
 sockfiles
 mounton
 read_lnk_file)
(classmapping
 sockfiles
 mounton
 search_dir)

(classmapping
 sockfiles
 read
 read_sock_file)
(classmapping
 sockfiles
 read
 read_lnk_file)
(classmapping
 sockfiles
 read
 search_dir)

(classmapping
 sockfiles
 readwrite
 readwrite_sock_file)
(classmapping
 sockfiles
 readwrite
 read_lnk_file)
(classmapping
 sockfiles
 readwrite
 search_dir)

(classmapping
 sockfiles
 relabel
 relabel_sock_file)
(classmapping
 sockfiles
 relabel
 read_lnk_file)
(classmapping
 sockfiles
 relabel
 search_dir)

(classmapping
 sockfiles
 relabelfrom
 relabelfrom_sock_file)
(classmapping
 sockfiles
 relabelfrom
 read_lnk_file)
(classmapping
 sockfiles
 relabelfrom
 search_dir)

(classmapping
 sockfiles
 relabelto
 relabelto_sock_file)
(classmapping
 sockfiles
 relabelto
 read_lnk_file)
(classmapping
 sockfiles
 relabelto
 search_dir)

(classmapping
 sockfiles
 rename
 rename_sock_file)
(classmapping
 sockfiles
 rename
 read_lnk_file)
(classmapping
 sockfiles
 rename
 readwrite_dir)

(classmapping
 sockfiles
 write
 write_sock_file)
(classmapping
 sockfiles
 write
 read_lnk_file)
(classmapping
 sockfiles
 write
 search_dir)

;;
;; Classperms
;;

(classpermission addname_dir)
(classpermission append_blk_file)
(classpermission append_chr_file)
(classpermission append_fifo_file)
(classpermission append_file)
(classpermission appendinherited_blk_file)
(classpermission appendinherited_chr_file)
(classpermission appendinherited_fifo_file)
(classpermission appendinherited_file)
(classpermission create_blk_file)
(classpermission create_chr_file)
(classpermission create_dir)
(classpermission create_fifo_file)
(classpermission create_file)
(classpermission create_lnk_file)
(classpermission create_sock_file)
(classpermission delete_blk_file)
(classpermission delete_chr_file)
(classpermission delete_dir)
(classpermission delete_fifo_file)
(classpermission delete_file)
(classpermission delete_lnk_file)
(classpermission delete_sock_file)
(classpermission deletename_dir)
(classpermission execute_file)
(classpermission list_dir)
(classpermission listinherited_dir)
(classpermission manage_blk_file)
(classpermission manage_chr_file)
(classpermission manage_dir)
(classpermission manage_fifo_file)
(classpermission manage_file)
(classpermission manage_lnk_file)
(classpermission manage_sock_file)
(classpermission mapexecute_chr_file)
(classpermission mapexecute_file)
(classpermission mounton_blk_file)
(classpermission mounton_chr_file)
(classpermission mounton_dir)
(classpermission mounton_fifo_file)
(classpermission mounton_file)
(classpermission mounton_lnk_file)
(classpermission mounton_sock_file)
(classpermission read_blk_file)
(classpermission read_chr_file)
(classpermission read_fifo_file)
(classpermission read_file)
(classpermission read_lnk_file)
(classpermission read_sock_file)
(classpermission readinherited_blk_file)
(classpermission readinherited_chr_file)
(classpermission readinherited_fifo_file)
(classpermission readinherited_file)
(classpermission readinherited_sock_file)
(classpermission readwrite_blk_file)
(classpermission readwrite_chr_file)
(classpermission readwrite_dir)
(classpermission readwrite_fifo_file)
(classpermission readwrite_file)
(classpermission readwrite_lnk_file)
(classpermission readwrite_sock_file)
(classpermission readwriteinherited_blk_file)
(classpermission readwriteinherited_chr_file)
(classpermission readwriteinherited_dir)
(classpermission readwriteinherited_fifo_file)
(classpermission readwriteinherited_file)
(classpermission readwriteinherited_sock_file)
(classpermission relabel_blk_file)
(classpermission relabel_chr_file)
(classpermission relabel_dir)
(classpermission relabel_fifo_file)
(classpermission relabel_file)
(classpermission relabel_lnk_file)
(classpermission relabel_sock_file)
(classpermission relabelfrom_blk_file)
(classpermission relabelfrom_chr_file)
(classpermission relabelfrom_dir)
(classpermission relabelfrom_fifo_file)
(classpermission relabelfrom_file)
(classpermission relabelfrom_lnk_file)
(classpermission relabelfrom_sock_file)
(classpermission relabelto_blk_file)
(classpermission relabelto_chr_file)
(classpermission relabelto_dir)
(classpermission relabelto_fifo_file)
(classpermission relabelto_file)
(classpermission relabelto_lnk_file)
(classpermission relabelto_sock_file)
(classpermission rename_blk_file)
(classpermission rename_chr_file)
(classpermission rename_dir)
(classpermission rename_fifo_file)
(classpermission rename_file)
(classpermission rename_lnk_file)
(classpermission rename_sock_file)
(classpermission search_dir)
(classpermission write_blk_file)
(classpermission write_chr_file)
(classpermission write_dir)
(classpermission write_fifo_file)
(classpermission write_file)
(classpermission write_lnk_file)
(classpermission write_sock_file)
(classpermission writeinherited_blk_file)
(classpermission writeinherited_chr_file)
(classpermission writeinherited_dir)
(classpermission writeinherited_fifo_file)
(classpermission writeinherited_file)
(classpermission writeinherited_sock_file)

(classpermissionset
 addname_dir
 (dir
  (add_name getattr ioctl lock open read search write)))

(classpermissionset
 append_blk_file
 (blk_file
  (append getattr ioctl lock open)))
(classpermissionset
 append_chr_file
 (chr_file
  (append getattr ioctl lock open)))
(classpermissionset
 append_fifo_file
 (fifo_file (append getattr ioctl lock open)))
(classpermissionset
 append_file
 (file
  (append getattr ioctl lock open)))

(classpermissionset
 appendinherited_blk_file
 (blk_file
  (append getattr ioctl lock)))
(classpermissionset
 appendinherited_chr_file
 (chr_file
  (append getattr ioctl lock)))
(classpermissionset
 appendinherited_fifo_file
 (fifo_file (append getattr ioctl lock)))
(classpermissionset
 appendinherited_file
 (file
  (append getattr ioctl lock)))

(classpermissionset
 create_blk_file
 (blk_file
  (create getattr)))
(classpermissionset
 create_chr_file
 (chr_file
  (create getattr)))
(classpermissionset
 create_dir
 (dir
  (create getattr)))
(classpermissionset
 create_fifo_file
 (fifo_file
  (create getattr)))
(classpermissionset
 create_file
 (file
  (create getattr)))
(classpermissionset
 create_lnk_file
 (lnk_file
  (create getattr)))
(classpermissionset
 create_sock_file
 (sock_file
  (create getattr)))

(classpermissionset
 deletename_dir
 (dir
  (getattr ioctl lock open read remove_name search write)))

(classpermissionset
 delete_blk_file
 (blk_file
  (getattr unlink)))
(classpermissionset
 delete_chr_file
 (chr_file
  (getattr unlink)))
(classpermissionset
 delete_dir
 (dir
  (getattr rmdir)))
(classpermissionset
 delete_fifo_file
 (fifo_file
  (getattr unlink)))
(classpermissionset
 delete_file
 (file
  (getattr unlink)))
(classpermissionset
 delete_lnk_file
 (lnk_file
  (getattr unlink)))
(classpermissionset
 delete_sock_file
 (sock_file
  (getattr unlink)))

(classpermissionset
 execute_file
 (file
  (execute execute_no_trans getattr ioctl map open read)))

(classpermissionset
 list_dir
 (dir
  (getattr ioctl lock open read search)))
(classpermissionset
 listinherited_dir
 (dir
  (getattr ioctl lock read search)))

(classpermissionset
 manage_blk_file
 (blk_file
  (append create getattr ioctl link lock open read rename setattr unlink
          write)))
(classpermissionset
 manage_chr_file
 (chr_file
  (append create getattr ioctl link lock open read rename setattr unlink
          write)))
(classpermissionset
 manage_dir
 (dir
  (add_name create getattr ioctl link lock open read setattr remove_name
            rename reparent rmdir search write)))
(classpermissionset
 manage_fifo_file
 (fifo_file
  (append create getattr ioctl link lock open read rename setattr unlink
          write)))
(classpermissionset
 manage_file
 (file
  (append create getattr ioctl link lock open read rename setattr unlink
          write)))
(classpermissionset
 manage_lnk_file
 (lnk_file
  (append create getattr link lock read rename setattr unlink write)))
(classpermissionset
 manage_sock_file
 (sock_file
  (append create getattr ioctl link lock open read rename setattr unlink
          write)))

(classpermissionset
 mapexecute_chr_file
 (chr_file
  (execute map)))
(classpermissionset
 mapexecute_file
 (file
  (execute map)))

(classpermissionset
 mounton_blk_file
 (blk_file
  (getattr mounton)))
(classpermissionset
 mounton_chr_file
 (chr_file
  (getattr mounton)))
(classpermissionset
 mounton_dir
 (dir
  (getattr mounton)))
(classpermissionset
 mounton_fifo_file
 (fifo_file
  (getattr mounton)))
(classpermissionset
 mounton_file
 (file
  (getattr mounton)))
(classpermissionset
 mounton_lnk_file
 (lnk_file
  (getattr mounton)))
(classpermissionset
 mounton_sock_file
 (sock_file
  (getattr mounton)))

(classpermissionset
 read_blk_file
 (blk_file
  (getattr ioctl lock open read)))
(classpermissionset
 read_chr_file
 (chr_file
  (getattr ioctl lock open read)))
(classpermissionset
 read_fifo_file
 (fifo_file
  (getattr ioctl lock open read)))
(classpermissionset
 read_file
 (file
  (getattr ioctl lock open read)))
(classpermissionset
 read_lnk_file
 (lnk_file
  (getattr lock read)))
(classpermissionset
 read_sock_file
 (sock_file
  (getattr ioctl lock open read)))

(classpermissionset
 readinherited_blk_file
 (blk_file
  (getattr ioctl lock read)))
(classpermissionset
 readinherited_chr_file
 (chr_file
  (getattr ioctl lock read)))
(classpermissionset
 readinherited_fifo_file
 (fifo_file
  (getattr ioctl lock read)))
(classpermissionset
 readinherited_file
 (file
  (getattr ioctl lock read)))
(classpermissionset
 readinherited_sock_file
 (sock_file
  (getattr ioctl lock read)))

(classpermissionset
 readwrite_blk_file
 (blk_file
  (append getattr ioctl lock open read write)))
(classpermissionset
 readwrite_chr_file
 (chr_file
  (append getattr ioctl lock open read write)))
(classpermissionset
 readwrite_dir
 (dir
  (add_name getattr ioctl lock open read remove_name search write)))
(classpermissionset
 readwrite_fifo_file
 (fifo_file
  (append getattr ioctl lock open read write)))
(classpermissionset
 readwrite_file
 (file
  (append getattr ioctl lock open read write)))
(classpermissionset
 readwrite_lnk_file
 (lnk_file
  (append getattr lock read write)))
(classpermissionset
 readwrite_sock_file
 (sock_file
  (append getattr ioctl lock open read write)))

(classpermissionset
 readwriteinherited_blk_file
 (blk_file
  (append getattr ioctl lock read write)))
(classpermissionset
 readwriteinherited_chr_file
 (chr_file
  (append getattr ioctl lock read write)))
(classpermissionset
 readwriteinherited_dir
 (dir
  (add_name getattr ioctl lock read remove_name search write)))
(classpermissionset
 readwriteinherited_fifo_file
 (fifo_file
  (append getattr ioctl lock read write)))
(classpermissionset
 readwriteinherited_file
 (file
  (append getattr ioctl lock read write)))
(classpermissionset
 readwriteinherited_sock_file
 (sock_file
  (append getattr ioctl lock read write)))

(classpermissionset
 relabel_blk_file
 (blk_file
  (getattr relabelfrom relabelto)))
(classpermissionset
 relabel_chr_file
 (chr_file
  (getattr relabelfrom relabelto)))
(classpermissionset
 relabel_dir
 (dir
  (getattr relabelfrom relabelto)))
(classpermissionset
 relabel_fifo_file
 (fifo_file
  (getattr relabelfrom relabelto)))
(classpermissionset
 relabel_file
 (file
  (getattr relabelfrom relabelto)))
(classpermissionset
 relabel_lnk_file
 (lnk_file
  (getattr relabelfrom relabelto)))
(classpermissionset
 relabel_sock_file
 (sock_file
  (getattr relabelfrom relabelto)))

(classpermissionset
 relabelfrom_blk_file
 (blk_file
  (getattr relabelfrom)))
(classpermissionset
 relabelfrom_chr_file
 (chr_file
  (getattr relabelfrom)))
(classpermissionset
 relabelfrom_dir
 (dir
  (getattr relabelfrom)))
(classpermissionset
 relabelfrom_fifo_file
 (fifo_file
  (getattr relabelfrom)))
(classpermissionset
 relabelfrom_file
 (file
  (getattr relabelfrom)))
(classpermissionset
 relabelfrom_lnk_file
 (lnk_file
  (getattr relabelfrom)))
(classpermissionset
 relabelfrom_sock_file
 (sock_file
  (getattr relabelfrom)))

(classpermissionset
 relabelto_blk_file
 (blk_file
  (getattr relabelto)))
(classpermissionset
 relabelto_chr_file
 (chr_file
  (getattr relabelto)))
(classpermissionset
 relabelto_dir
 (dir
  (getattr relabelto)))
(classpermissionset
 relabelto_fifo_file
 (fifo_file
  (getattr relabelto)))
(classpermissionset
 relabelto_file
 (file
  (getattr relabelto)))
(classpermissionset
 relabelto_lnk_file
 (lnk_file
  (getattr relabelto)))
(classpermissionset
 relabelto_sock_file
 (sock_file
  (getattr relabelto)))

(classpermissionset
 rename_blk_file
 (blk_file
  (getattr rename)))
(classpermissionset
 rename_chr_file
 (chr_file
  (getattr rename)))
(classpermissionset
 rename_dir
 (dir
  (getattr rename)))
(classpermissionset
 rename_fifo_file
 (fifo_file
  (getattr rename)))
(classpermissionset
 rename_file
 (file
  (getattr rename)))
(classpermissionset
 rename_lnk_file
 (lnk_file
  (getattr rename)))
(classpermissionset
 rename_sock_file
 (sock_file
  (getattr rename)))

(classpermissionset
 search_dir
 (dir
  (getattr search)))

(classpermissionset
 write_blk_file
 (blk_file
  (append getattr ioctl lock open write)))
(classpermissionset
 write_chr_file
 (chr_file
  (append getattr ioctl lock open write)))
(classpermissionset
 write_dir
 (dir
  (add_name getattr ioctl lock open remove_name search write)))
(classpermissionset
 write_fifo_file
 (fifo_file
  (append getattr ioctl lock open write)))
(classpermissionset
 write_file
 (file
  (append getattr ioctl lock open write)))
(classpermissionset
 write_lnk_file
 (lnk_file
  (append getattr lock write)))
(classpermissionset
 write_sock_file
 (sock_file
  (append getattr ioctl lock open write)))
(classpermissionset
 writeinherited_blk_file
 (blk_file (append getattr ioctl lock write)))
(classpermissionset
 writeinherited_chr_file
 (chr_file
  (append getattr ioctl lock write)))
(classpermissionset
 writeinherited_dir
 (dir
  (add_name getattr ioctl lock remove_name search write)))
(classpermissionset
 writeinherited_fifo_file
 (fifo_file
  (append getattr ioctl lock write)))
(classpermissionset
 writeinherited_file
 (file
  (append getattr ioctl lock write)))
(classpermissionset
 writeinherited_sock_file
 (sock_file
  (append getattr ioctl lock write)))

(block file

       ;;
       ;; Macros
       ;;

       (macro getattr_all_sock_files ((type ARG1))
              (allow ARG1 obj_typeattr (sock_file (getattr))))

       ;;
       ;; Policy
       ;;

       (blockinherit obj_all_macro_template)

       (call .sys.type (obj_typeattr))

       ;;
       ;; Templates
       ;;

       (block obj_all_macro_template

              ;;
              ;; Macros
              ;;

              (macro addname_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr addname_dir))

              (macro append_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr append_blk_file))

              (macro append_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr append_chr_file))

              (macro append_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr append_fifo_file))

              (macro append_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr append_file))

              (macro appendinherited_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr appendinherited_blk_file))

              (macro appendinherited_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr appendinherited_chr_file))

              (macro appendinherited_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr appendinherited_fifo_file))

              (macro appendinherited_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr appendinherited_file))

              (macro create_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (create))))

              (macro create_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typattr create_blk_file))

              (macro create_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr create_chr_file))

              (macro create_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr create_dir))

              (macro create_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr create_fifo_file))

              (macro create_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr create_file))

              (macro create_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr create_lnk_file))

              (macro create_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr create_sock_file))

              (macro deletename_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr deletename_dir))

              (macro delete_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (delete))))

              (macro delete_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr delete_blk_file))

              (macro delete_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr delete_chr_file))

              (macro delete_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr delete_dir))

              (macro delete_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr delete_fifo_file))

              (macro delete_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr delete_file))

              (macro delete_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr delete_lnk_file))

              (macro delete_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr delete_sock_file))

              (macro execute_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr execute_file))

              (macro getattr_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr (file (getattr))))

              (macro getattr_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr (lnk_file (getattr))))

              (macro list_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr list_dir))

              (macro listinherited_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr listinherited_dir))

              (macro manage_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (manage))))

              (macro manage_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr manage_blk_file))

              (macro manage_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr manage_chr_file))

              (macro manage_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr manage_dir))

              (macro manage_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr manage_fifo_file))

              (macro manage_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr manage_file))

              (macro manage_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr manage_lnk_file))

              (macro manage_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr manage_sock_file))

              (macro mapexecute_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr mapexecute_chr_file))

              (macro mapexecute_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr mapexecute_file))

              (macro mounton_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (mounton))))

              (macro mounton_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr mounton_blk_file))

              (macro mounton_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr mounton_chr_file))

              (macro mounton_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr mounton_dir))

              (macro mounton_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr mounton_fifo_file))

              (macro mounton_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr mounton_file))

              (macro mounton_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr mounton_lnk_file))

              (macro mounton_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr mounton_sock_file))

              (macro obj_type ((type ARG1))
                     (typeattributeset obj_typeattr ARG1))

              (macro read_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (read))))

              (macro read_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr read_blk_file))

              (macro read_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr read_chr_file))

              (macro read_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr read_fifo_file))

              (macro read_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr read_file))

              (macro read_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr read_lnk_file))

              (macro read_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr read_sock_file))

              (macro readinherited_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr readinherited_blk_file))

              (macro readinherited_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr readinherited_chr_file))

              (macro readinherited_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr readinherited_fifo_file))

              (macro readinherited_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr readinherited_file))

              (macro readinherited_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr readinherited_sock_file))

              (macro readwrite_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (readwrite))))

              (macro readwrite_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwrite_blk_file))

              (macro readwrite_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwrite_chr_file))

              (macro readwrite_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr readwrite_dir))

              (macro readwrite_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwrite_fifo_file))

              (macro readwrite_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwrite_file))

              (macro readwrite_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwrite_lnk_file))

              (macro readwrite_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwrite_sock_file))

              (macro readwriteinherited_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwriteinherited_blk_file))

              (macro readwriteinherited_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwriteinherited_chr_file))

              (macro readwriteinherited_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr readwriteinherited_dir))

              (macro readwriteinherited_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwriteinherited_fifo_file))

              (macro readwriteinherited_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwriteinherited_file))

              (macro readwriteinherited_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr readwriteinherited_sock_file))

              (macro relabel_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (relabel))))

              (macro relabel_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabel_blk_file))

              (macro relabel_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabel_chr_file))

              (macro relabel_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr relabel_dir))

              (macro relabel_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabel_fifo_file))

              (macro relabel_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabel_file))

              (macro relabel_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabel_lnk_file))

              (macro relabel_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabel_sock_file))

              (macro relabelfrom_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (relabelfrom))))

              (macro relabelfrom_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelfrom_blk_file))

              (macro relabelfrom_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelfrom_chr_file))

              (macro relabelfrom_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr relabelfrom_dir))

              (macro relabelfrom_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelfrom_fifo_file))

              (macro relabelfrom_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelfrom_file))

              (macro relabelfrom_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelfrom_lnk_file))

              (macro relabelfrom_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelfrom_sock_file))

              (macro relabelto_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (relabelto))))

              (macro relabelto_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelto_blk_file))

              (macro relabelto_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelto_chr_file))

              (macro relabelto_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr relabelto_dir))

              (macro relabelto_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelto_fifo_file))

              (macro relabelto_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelto_file))

              (macro relabelto_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelto_lnk_file))

              (macro relabelto_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr relabelto_sock_file))

              (macro rename_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (rename))))

              (macro rename_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr rename_blk_file))

              (macro rename_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr rename_chr_file))

              (macro rename_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr rename_dir))

              (macro rename_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr rename_fifo_file))

              (macro rename_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr rename_file))

              (macro rename_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr rename_lnk_file))

              (macro rename_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr rename_sock_file))

              (macro search_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr search_dir))

              (macro write_all ((type ARG1))
                     (allow ARG1 obj_typeattr (allfiles (write))))

              (macro write_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr write_blk_file))

              (macro write_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr write_chr_file))

              (macro write_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr write_dir))

              (macro write_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr write_fifo_file))

              (macro write_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr write_file))

              (macro write_all_lnk_files ((type ARG1))
                     (allow ARG1 obj_typeattr write_lnk_file))

              (macro write_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr write_sock_file))

              (macro writeinherited_all_blk_files ((type ARG1))
                     (allow ARG1 obj_typeattr writeinherited_blk_file))

              (macro writeinherited_all_chr_files ((type ARG1))
                     (allow ARG1 obj_typeattr writeinherited_chr_file))

              (macro writeinherited_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr writeinherited_dir))

              (macro writeinherited_all_fifo_files ((type ARG1))
                     (allow ARG1 obj_typeattr writeinherited_fifo_file))

              (macro writeinherited_all_files ((type ARG1))
                     (allow ARG1 obj_typeattr writeinherited_file))

              (macro writeinherited_all_sock_files ((type ARG1))
                     (allow ARG1 obj_typeattr writeinherited_sock_file))

              (macro dontaudit_manage_all_dirs ((type ARG1))
                     (dontaudit ARG1 obj_typeattr manage_dir))

              (macro dontaudit_manage_all_files ((type ARG1))
                     (dontaudit ARG1 obj_typeattr manage_file))

              (macro dontaudit_manage_all_lnk_files ((type ARG1))
                     (dontaudit ARG1 obj_typeattr manage_lnk_file))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_all_macro_template)

              (typeattribute
               obj_typeattr))

       (block except

              ;;
              ;; Policy
              ;;

              (blockinherit obj_all_macro_template)

              (typeattributeset
               obj_typeattr
               (and
                file.obj_typeattr
                (not
                 (exception.obj_typeattr)))))

       (block exception

              ;;
              ;; Policy
              ;;

              (blockinherit obj_all_macro_template)

              (call file.obj_type (obj_typeattr)))

       (block unconfined

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (allow subj_typeattr obj_typeattr
                     (blk_file (not (execmod map mounton))))
              (allow subj_typeattr obj_typeattr
                     (chr_file (not (execmod mounton))))
              (allow subj_typeattr obj_typeattr (dir (not execmod)))
              (allow subj_typeattr obj_typeattr
                     (fifo_file (not (execmod map mounton))))
              (allow subj_typeattr obj_typeattr
                     (file (not (entrypoint execmod))))
              (allow subj_typeattr obj_typeattr
                     (lnk_file (not (execmod map mounton))))
              (allow subj_typeattr obj_typeattr
                     (sock_file (not (execmod map mounton))))

              (call .execute_invalid_files (subj_typeattr))
              (call .execute_unlabeled_files (subj_typeattr))
              (call .manage_invalid (subj_typeattr))
              (call .manage_unlabeled (subj_typeattr))
              (call .mapexecute_invalid_chr_files (subj_typeattr))
              (call .mapexecute_unlabeled_chr_files (subj_typeattr))
              (call .mapexecute_invalid_files (subj_typeattr))
              (call .mapexecute_unlabeled_files (subj_typeattr))
              (call .mounton_invalid (subj_typeattr))
              (call .mounton_unlabeled (subj_typeattr))
              (call .relabelfrom_invalid (subj_typeattr))
              (call .relabelfrom_unlabeled (subj_typeattr))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(sid
 kernel)

(sidcontext
 kernel
 (.u
  .r
  .sys.subj
  (systemlow
   systemlow)))

(userprefix
 u
 r)
(selinuxuserdefault
 u
 (systemlow
  systemhigh))

(user
 u)

(userlevel
 u
 systemlow)
(userrange
 u
 (systemlow
  systemhigh))
(userrole
 u
 r)

(role
 r)

(block sys

       ;;
       ;; Macros
       ;;

       (macro controlsyslogconsole ((type ARG1))
              (allow ARG1 subj (system (syslog_console))))

       (macro modifyringbuffer ((type ARG1))
              (allow ARG1 subj (system (syslog_mod))))

       (macro readringbuffer ((type ARG1))
              (allow ARG1 subj (system (syslog_read))))

       (macro requestmodule ((type ARG1))
              (allow ARG1 subj (system (module_request))))

       (macro search_keyrings ((type ARG1))
              (allow ARG1 subj (key (search))))

       (macro type ((type ARG1))
              (typeattributeset typeattr ARG1))

       (macro dontaudit_readwrite_udp_sockets ((type ARG1))
              (dontaudit ARG1 subj readwrite_udp_socket))

       ;;
       ;; Policy
       ;;

       (typeattribute
        typeattr)

       (roletype
        r
        typeattr)

       (blockinherit .subj.subj_template)

       (call .subj.interactivefd.subj_type (subj))

       (call .unconfined.subj_type (subj))

       (block loadkernelmodule

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (typeattribute
               not_subj_typeattr)

              (typeattributeset
               not_subj_typeattr
               (not
                subj_typeattr))

              (neverallow not_subj_typeattr self (capability (sys_module)))

              (allow subj_typeattr self (capability (sys_nice)))
              (allow subj_typeattr subj (process (setsched))))

       (block mountpoint

              ;;
              ;; Macros
              ;;

              (macro mounton_all_dirs ((type ARG1))
                     (allow ARG1 obj_typeattr (dir (getattr mounton))))

              ;;
              ;; Policy
              ;;

              (blockinherit .file.obj_all_macro_template)

              (allow unconfined.subj_typeattr obj_typeattr (dir (mounton))))

       (block unconfined

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (allow subj_typeattr subj (system (not module_load)))

              (call loadkernelmodule.subj_type (subj_typeattr))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block irq

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/irq"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block mtrr

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/mtrr"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block vmallocinfo

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/vmallocinfo"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in tty

    ;;
    ;; Contexts
    ;;

    (genfscon
     "proc"
     "/tty"
     procfile_file_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block iomem

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/iomem"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block uptime

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/uptime"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block driver

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/driver"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block stat

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/stat"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block ioports

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/ioports"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block swaps

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/swaps"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block misc

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/misc"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block softirqs

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/softirqs"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block meminfo

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/meminfo"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block keys

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/keys"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block jffs2bbc

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/jffs2_bbc"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .kcore.readwrite.subj_type (unconfined.subj_typeattr)))

(block kcore

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/kcore"
        procfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro getattr_procfile_files ((type ARG1))
              (allow ARG1 procfile (file (getattr))))

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template)

       (block read

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (typeattribute
               not_subj_typeattr)

              (typeattributeset
               not_subj_typeattr
               (not
                subj_typeattr))

              (neverallow not_subj_typeattr procfile (file (read)))
              )

       (block readwrite

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (call read.subj_type (subj_typeattr))
              (call write.subj_type (subj_typeattr)))

       (block write

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (typeattribute
               not_subj_typeattr)

              (typeattributeset
               not_subj_typeattr
               (not
                subj_typeattr))

              (neverallow not_subj_typeattr procfile (file (append write)))
              ))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block sysvipc

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sysvipc"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block acpi

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/acpi"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .kmsg

    ;;
    ;; Contexts
    ;;

    (genfscon
     "proc"
     "/kmsg"
     procfile_file_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block mtd

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/mtd"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block scsi

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/scsi"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block vmstat

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/vmstat"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block buddyinfo

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/buddyinfo"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block locks

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/locks"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block dynamicdebug

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/dynamic_debug"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block partitions

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/partitions"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block devices

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/devices"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block loadavg

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/loadavg"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .fs

    ;;
    ;; Contexts
    ;;

    (genfscon
     "proc"
     "/fs"
     procfile_file_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block modules

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/modules"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block mpt

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/mpt"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block fb

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/fb"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block filesystems

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/filesystems"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block consoles

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/consoles"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block version

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/version"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .net

    ;;
    ;; Contexts
    ;;

    (genfscon
     "proc"
     "/net"
     procfile_file_context)

    ;;
    ;; Macro
    ;;

    (macro dontaudit_readinherited_procfile_files ((type ARG1))
           (dontaudit ARG1 procfile readinherited_file))

    ;;
    ;; Policy
    ;;

    (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block sysrqtrigger

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sysrq-trigger"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block diskstats

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/diskstats"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block bus

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/bus"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block zoneinfo

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/zoneinfo"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block cpu

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/cpu"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block kallsyms

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/kallsyms"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block cgroups

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/cgroups"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block execdomains

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/execdomains"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block cpuinfo

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/cpuinfo"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block cmdline

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/cmdline"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block keyusers

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/key-users"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block interrupts

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/interrupts"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block dma

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/dma"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block timerlist

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/timer_list"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block pagetypeinfo

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/pagetypeinfo"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block crypto

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/crypto"
        procfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .procfile.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcucitrack.subj_type_transition (subj)))

(in .file
    (call .rcucitrack.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcucitrack

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/ucitrack"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "ucitrack")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (allow subj self create_unix_dgram_socket)

       (call .file.execute_initscriptfile_files (subj))

       (call .logd.unix_dgram_send (subj))

       (optional rcucitrack_opt_rcacme
                 (call .rcacme.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcblockd
                 (call .rcblockd.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcboot
                 (call .rcboot.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcbootcount
                 (call .rcbootcount.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcchronyd
                 (call .rcchronyd.subj_type_transition (subj)))

       (optional rcucitrack_opt_rccron
                 (call .rccron.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcdnsmasq
                 (call .rcdnsmasq.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcdropbear
                 (call .rcdropbear.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcfirewall
                 (call .rcfirewall.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcfstab
                 (call .rcfstab.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcgpioswitch
                 (call .rcgpioswitch.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcigmpproxy
                 (call .rcigmpproxy.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcirqbalance
                 (call .rcirqbalance.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcled
                 (call .rcled.subj_type_transition (subj)))

       (optional rcucitrack_opt_rclog
                 (call .rclog.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcmurmur
                 (call .rcmurmur.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcnetwork
                 (call .rcnetwork.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcngircd
                 (call .rcngircd.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcodhcpd
                 (call .rcodhcpd.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcrpcd
                 (call .rcrpcd.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcsocat
                 (call .rcsocat.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcsqm
                 (call .rcsqm.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcsquid
                 (call .rcsquid.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcsysctl
                 (call .rcsysctl.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcsysfixtime
                 (call .rcsysfixtime.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcsysntpd
                 (call .rcsysntpd.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcsystem
                 (call .rcsystem.subj_type_transition (subj)))

       (optional rcucitrack_opt_rctinyproxy
                 (call .rctinyproxy.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcttyd
                 (call .rcttyd.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcucitrack
                 (call .rcucitrack.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcuhttpd
                 (call .rcuhttpd.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcumount
                 (call .rcumount.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcunbound
                 (call .rcunbound.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcurandomseed
                 (call .rcurandomseed.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcurngd
                 (call .rcurngd.subj_type_transition (subj)))

       (optional rcucitrack_opt_rcwpad
                 (call .rcwpad.subj_type_transition (subj)))

       (optional rcucitrack_opt_rczram
                 (call .rczram.subj_type_transition (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcsysfixtime.subj_type_transition (subj)))

(in .file
    (call .rcsysfixtime.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcsysfixtime

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/sysfixtime"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "sysfixtime")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (allow subj self (capability (sys_time)))
       (allow subj self create_unix_dgram_socket)

       (call .clock.readwrite_nodedev_chr_files (subj))

       (call .file.getattr_all_files (subj))
       (call .file.getattr_all_lnk_files (subj))
       (call .file.list_all_dirs (subj))

       (call .locale.read.subj_type (subj))

       (call .logd.unix_dgram_send (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rczram.subj_type_transition (subj)))

(in .file
    (call .rczram.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rczram

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/zram"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "zram")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (allow subj self (capability (sys_admin)))
       (allow subj self create_unix_dgram_socket)

       ;; compat with genfs_seclabel_symlinks=0
       (call .sys.read_fs_lnk_files (subj))

       (call .block.read_sysfile_lnk_files (subj))
       (call .block.search_sysfile_dirs (subj))

       (call .dev.stor.readwrite.subj_type (subj))

       (call .devices.search_sysfile_dirs (subj))

       (call .logd.unix_dgram_send (subj))

       (call .meminfo.read_procfile_files (subj))

       (call .swaps.read_procfile_files (subj))

       (call .zram.readwrite_stordev_blk_files (subj))

       (call .zram.manage_sysfile_files (subj))
       (call .zram.readwrite_sysfile_dirs (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcigmpproxy.subj_type_transition (subj)))

(in .file
    (call .rcigmpproxy.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcigmpproxy

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/igmpproxy"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "igmpproxy")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .file.addname_conffile_dirs (subj))
       (call .file.create_conffile_lnk_files (subj))

       (call .igmpproxy.manage_conftmpfile_files (subj))
       (call .igmpproxy.obj_type_transition_conftmpfile (subj))

       (call .tmpfile.create_conftmpfile_dirs (subj))
       (call .tmpfile.deletename_conftmpfile_dirs (subj))
       (call .tmpfile.obj_type_transition_conftmpfile (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcttyd.subj_type_transition (subj)))

(in .file
    (call .rcttyd.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcttyd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/ttyd"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "ttyd")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .ttyd.signal (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcboot.subj_type_transition (subj)))

(in .file
    (call .rcboot.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr))
    (call .rcboot.obj_type_transition_tmpfile (unconfined.subj_typeattr)))

(block rcboot

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/\.failsafe"
        file
        tmpfile_file_context)

       (filecon
        "/etc/init\.d/boot"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "boot")))

       (macro obj_type_transition_tmpfile ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile file ".failsafe")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)
       (blockinherit .tmpfile.obj_template)

       (allow subj self (capability (sys_admin)))

       (call manage_tmpfile_files (subj))
       (call obj_type_transition_tmpfile (subj))

       ;; compat with genfs_seclabel_symlinks=0
       (call .sys.read_fs_lnk_files (subj))
       ;;bpf_preload
       (call .sys.requestmodule (subj))
       (call .sys.search_sysctlfile_dirs (subj))

       (call .board.read_miscfile_files (subj))

       (call .bpf.mount_filesystems (subj))

       (call .class.read_sysfile_lnk_files (subj))
       (call .class.search_sysfile_dirs (subj))

       (call .cmdline.read_procfile_files (subj))

       (call .configgenerate.subj_type_transition (subj))

       (call .debug.mount_filesystems (subj))

       (call .dev.stor.read.subj_type (subj))
       (call .dev.stor.read_all_blk_files (subj))
       (call .dev.stor.read_all_chr_files (subj))

       (call .devices.list_sysfile_dirs (subj))
       (call .devices.read_sysfile_files (subj))
       (call .devices.read_sysfile_lnk_files (subj))

       (call .filesystems.read_procfile_files (subj))

       (call .fs.mounton_sysfile_dirs (subj))

       (call .fwenv.create_conffile_files (subj))
       (call .fwenv.obj_type_transition_conffile (subj))
       (call .fwenv.readwrite_conffile_files (subj))
       (call .fwenv.read_miscfile_files (subj))

       (call .ipv6.read_sysctlfile_files (subj))
       (call .ipv6.search_sysctlfile_dirs (subj))

       (call .jffs2bbc.write_procfile_files (subj))

       (call .kernel.mounton_sysfile_dirs (subj))
       (call .kernel.search_sysfile_dirs (subj))

       (call .kmodloader.subj_type_transition (subj))

       (call .lastlog.create_logtmpfile_files (subj))
       (call .lastlog.obj_type_transition_logtmpfile (subj))
       (call .lastlog.readwrite_logtmpfile_files (subj))

       (call .mountroot.subj_type_transition (subj))

       (call .mtd.read_procfile_files (subj))

       (call .net.search_sysctlfile_dirs (subj))

       (call .opkg.list_miscfile_dirs (subj))
       (call .opkg.read_conffile_files (subj))
       (call .opkg.read_miscfile_files (subj))

       (call .osrelease.read_miscfile_files (subj))

       (call .preinit.read_tmpfile_files (subj))
       (call .preinit.search_tmpfile_dirs (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .reloadconfig.subj_type_transition (subj))

       (call .resolv.addname_tmpfile_dirs (subj))
       (call .resolv.create_tmpfile_dirs (subj))
       (call .resolv.create_tmpfile_files (subj))
       (call .resolv.obj_type_transition_tmpfile (subj))
       (call .resolv.readwrite_tmpfile_files (subj))

       (call .shadow.read_authfile_files (subj))
       (call .shadow.read.subj_type (subj))

       (call .uci.create_conffile_files (subj))
       (call .uci.create_tmpfile_dirs (subj))
       (call .uci.defaults.delete_conffile_files (subj))
       (call .uci.defaults.deletename_conffile_dirs (subj))
       (call .uci.defaults.read_conffile_files (subj))
       (call .uci.obj_type_transition_tmpfile (subj))
       (call .uci.readwrite_conffile_files (subj))
       (call .uci.addname_conffile_dirs (subj))
       (call .uci.setattr_tmpfile_dirs (subj))
       (call .uci.subj_type_transition (subj))

       (call .upgrade.read_miscfile_files (subj))
       (call .upgrade.search_miscfile_dirs (subj))

       (call .tmp.addname_fs_dirs (subj))
       (call .tmp.create_fs_dirs (subj))
       (call .tmp.create_fs_lnk_files (subj))
       (call .tmp.rootfile_obj_type_transition_fs (subj))

       (call .tmpfile.create_locktmpfile_dirs (subj))
       (call .tmpfile.create_logtmpfile_dirs (subj))
       (call .tmpfile.create_runtimetmpfile_dirs (subj))
       (call .tmpfile.create_statetmpfile_dirs (subj))
       (call .tmpfile.obj_type_transition_locktmpfile (subj))
       (call .tmpfile.obj_type_transition_logtmpfile (subj))
       (call .tmpfile.obj_type_transition_runtimetmpfile (subj))
       (call .tmpfile.obj_type_transition_statetmpfile (subj))

       (call .wtmp.create_logtmpfile_files (subj))
       (call .wtmp.obj_type_transition_logtmpfile (subj))
       (call .wtmp.readwrite_logtmpfile_files (subj))

       (optional rcboot_opt_blockmount
                 (call .blockmount.subj_type_transition (subj)))

       (optional rcboot_opt_dnsmasq
                 (call .dnsmasq.getattr_execfile_files (subj)))

       (optional rcboot_opt_pstoreseclabelfs
                 ;; pstore is optional (/etc/init.d/boot references it)
                 (call .pstore.mount_filesystems (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcumount.subj_type_transition (subj)))

(in .file
    (call .rcumount.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcumount

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/umount"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "umount")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (allow subj self (capability (sys_admin sys_rawio)))

       (call .getattr_invalid_filesystems (subj))
       (call .remount_invalid_filesystems (subj))
       (call .unmount_invalid_filesystems (subj))

       (call .dev.stor.read_all_blk_files (subj))
       (call .dev.stor.read.subj_type (subj))

       (call .fs.getattr_all_filesystems (subj))
       (call .fs.remount_all_filesystems (subj))
       (call .fs.unmount_all_filesystems (subj))

       (call .kernel.search_sysfile_dirs (subj))

       (call .proc.list_fs_dirs (subj))

       (call .tmpfile.search_runtimetmpfile_dirs (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcfstab.subj_type_transition (subj)))

(in .file
    (call .rcfstab.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcfstab

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/fstab"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "fstab")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .blockmount.subj_type_transition (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcunbound.subj_type_transition (subj)))

(in .file
    (call .rcunbound.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcunbound

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/unbound"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "unbound")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (allow subj self
              (capability (chown dac_override dac_read_search fowner fsetid
                                 sys_ptrace)))
       (allow subj self create_udp_socket)
       (allow subj self create_unix_dgram_socket)

       (call .locale.read.subj_type (subj))

       (call .logd.unix_dgram_send (subj))

       (call .net.egress_netifs (subj))
       (call .net.sendto_netnodes (subj))
       (call .net.udp_bind_netnodes (subj))

       (call .proc.list_fs_dirs (subj))

       (call .resolv.manage_tmpfile_files (subj))
       (call .resolv.obj_type_transition_tmpfile (subj))
       (call .resolv.search_tmpfile_dirs (subj))

       (call .ssl.getattr_certfile_files (subj))
       (call .ssl.search_certfile_dirs (subj))

       (call .subj.read_state_all (subj))

       (call .tmp.manage_fs_lnk_files (subj))
       (call .tmp.deletename_fs_dirs (subj))

       (call .tmpfile.search_statetmpfile_dirs (subj))

       (call .unbound.list_conffile_dirs (subj))
       (call .unbound.manage_statetmpfile_dirs (subj))
       (call .unbound.manage_statetmpfile_files (subj))
       (call .unbound.obj_type_transition_statetmpfile (subj))
       (call .unbound.read_conffile_files (subj))
       (call .unbound.read_miscfile_files (subj))
       (call .unbound.search_miscfile_dirs (subj))
       (call .unbound.subj_type_transition (subj))

       (call .www.list_miscfile_dirs (subj))

       (optional rcunbound_opt_dnsmasq
                 (call .dnsmasq.getattr_execfile_files (subj)))

       (optional rcunbound_opt_luci
                 (call .luci.cgi.writeinherited_fifo_files (subj)))

       (optional rcunbound_opt_rcdnsmasq
                 (call .rcdnsmasq.execute_initscriptfile_files (subj)))

       (optional rcunbound_opt_uhttpd
                 (call .uhttpd.readinherited_fifo_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcsqm.subj_type_transition (subj)))

(in .file
    (call .rcsqm.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcsqm

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/sqm"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "sqm")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .sqm.subj_type_transition (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcfirewall.subj_type_transition (subj)))

(in .file
    (call .rcfirewall.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcfirewall

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/firewall"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "firewall")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .fw3.subj_type_transition (subj))

       (optional rcfirewall_opt_cgiio
                 (call .cgiio.writeinherited_fifo_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rccron.subj_type_transition (subj)))

(in .file
    (call .rccron.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rccron

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/cron"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "cron")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .cron.addname_miscfile_dirs (subj))
       (call .cron.create_miscfile_dirs (subj))
       (call .cron.create_miscfile_lnk_files (subj))
       (call .cron.getattr_miscfile_files (subj))
       (call .cron.spooltmpfile_obj_type_transition_miscfile (subj))

       (call .tmpfile.create_spooltmpfile_dirs (subj))
       (call .tmpfile.obj_type_transition_spooltmpfile (subj))

       (optional rccron_opt_acme
                 (call .acme.use_fds (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcgpioswitch.subj_type_transition (subj)))

(in .file
    (call .rcgpioswitch.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcgpioswitch

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/gpio_switch"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "gpio_switch")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .class.search_sysfile_dirs (subj))

       (call .gpio.search_sysfile_dirs (subj))
       (call .gpio.write_sysfile_files (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcurngd.subj_type_transition (subj)))

(in .file
    (call .rcurngd.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcurngd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/urngd"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "urngd")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcuhttpd.subj_type_transition (subj)))

(in .file
    (call .rcuhttpd.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcuhttpd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/uhttpd"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "uhttpd")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .openssl.execute_execfile_files (subj))

       (call .px5g.execute_execfile_files (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .uhttpd.conffile_obj_type_transition_certfile (subj))
       (call .uhttpd.manage_certfile_files (subj))
       (call .uhttpd.manage_conftmpfile_dirs (subj))
       (call .uhttpd.obj_type_transition_conftmpfile (subj))

       (optional rcuhttpd_opt_acme
                 (call .acme.getattr_conffile_files (subj))
                 (call .acme.read_conffile_lnk_files (subj))
                 (call .acme.search_conffile_dirs (subj))
                 (call .acme.use_fds (subj)))

       (optional rcuhttpd_opt_sslcertfile
                 (call .ssl.read_certfile_files (subj))
                 (call .ssl.read_certfile_lnk_files (subj))
                 (call .ssl.search_certfile_dirs (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rctinyproxy.subj_type_transition (subj)))

(in .file
    (call .rctinyproxy.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rctinyproxy

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/tinyproxy"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "tinyproxy")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .tinyproxy.create_conftmpfile_files (subj))
       (call .tinyproxy.obj_type_transition_conftmpfile (subj))
       (call .tinyproxy.write_conftmpfile_files (subj))

       (call .tinyproxy.create_logtmpfile_files (subj))
       (call .tinyproxy.obj_type_transition_logtmpfile (subj))
       (call .tinyproxy.readwrite_logtmpfile_files (subj))
       (call .tinyproxy.setattr_logtmpfile_files (subj))

       (call .tmpfile.create_conftmpfile_dirs (subj))
       (call .tmpfile.obj_type_transition_conftmpfile (subj))
       (call .tmpfile.setattr_conftmpfile_dirs (subj))

       (optional rctinyproxy_opt_luci
                 (call .luci.cgi.writeinherited_fifo_files (subj)))

       (optional rctinyproxy_opt_uhttpd
                 (call .uhttpd.readinherited_fifo_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcdropbear.subj_type_transition (subj)))

(in .file
    (call .rcdropbear.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcdropbear

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/dropbear"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "dropbear")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (allow subj self (capability (kill sys_ptrace)))

       (call .dropbear.manage_certfile_dirs (subj))
       (call .dropbear.manage_certfile_files (subj))
       (call .dropbear.read_runtimetmpfile_files (subj))
       (call .dropbear.relabel_certfile_files (subj))
       (call .dropbear.sigkill (subj))
       (call .dropbear.signal (subj))
       (call .dropbear.subj_type_transition (subj))
       (call .dropbear.tmp_obj_type_transition_certfile (subj dir "*"))

       (call .proc.list_fs_dirs (subj))

       (call .selinux.setfscreate.subj_type (subj))

       (call .subj.read_state_all (subj))

       (call .tmp.deletename_fs_dirs (subj))

       (call .tmpfile.list_runtimetmpfile_dirs (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcurandomseed.subj_type_transition (subj)))

(in .file
    (call .rcurandomseed.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcurandomseed

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/urandom_seed"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "urandom_seed")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcnetwork.subj_type_transition (subj)))

(in .file
    (call .rcnetwork.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcnetwork

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/network"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "network")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .sys.search_sysctlfile_dirs (subj))

       (call .class.search_sysfile_dirs (subj))

       (call .corepattern.getattr_sysctlfile_files (subj))

       (call .ifup.subj_type_transition (subj))

       (call .ipv6.read_sysctlfile_files (subj))
       (call .ipv6.search_sysctlfile_dirs (subj))

       (call .kernel.search_sysctlfile_dirs (subj))

       (call .net.search_sysctlfile_dirs (subj))

       (call .network.list_miscfile_dirs (subj))
       (call .network.read_miscfile_files (subj))

       (call .swconfig.subj_type_transition (subj))

       (call .wifi.subj_type_transition (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcblockd.subj_type_transition (subj)))

(in .file
    (call .rcblockd.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcblockd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/blockd"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "blockd")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .blockmount.subj_type_transition (subj))

       (call .tmpfile.list_runtimetmpfile_dirs (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcsystem.subj_type_transition (subj)))

(in .file
    (call .rcsystem.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcsystem

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/system"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "system")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (allow subj self (capability (sys_time)))
       (allow subj self (capability2 (syslog)))

       (call .sys.controlsyslogconsole (subj))
       (call .sys.search_sysctlfile_dirs (subj))

       (call .kernel.search_sysctlfile_dirs (subj))
       (call .kernel.write_sysctlfile_files (subj))

       (call .locale.manage_miscfile_files (subj))
       (call .locale.map_miscfile_files (subj))
       (call .locale.tmp_obj_type_transition_miscfile (subj))
       (call .locale.search_miscfile_dirs (subj))

       (call .tmp.create_fs_lnk_files (subj))
       (call .tmp.readwrite_fs_dirs (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcsocat.subj_type_transition (subj)))

(in .file
    (call .rcsocat.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcsocat

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/socat"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "socat")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcirqbalance.subj_type_transition (subj)))

(in .file
    (call .rcirqbalance.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcirqbalance

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/irqbalance"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "irqbalance")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .irqbalance.create_runtimetmpfile_dirs (subj))
       (call .irqbalance.obj_type_transition_runtimetmpfile (subj))

       (call .tmpfile.create_runtimetmpfile_dirs (subj))
       (call .tmpfile.obj_type_transition_runtimetmpfile (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcngircd.subj_type_transition (subj)))

(in .file
    (call .rcngircd.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcngircd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/ngircd"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "ngircd")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (allow subj self (capability (kill sys_ptrace)))

       (call .ngircd.signal (subj))
       (call .ngircd.subj_type_transition (subj))

       (call .proc.list_fs_dirs (subj))

       (call .subj.read_state_all (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rclog.subj_type_transition (subj)))

(in .file
    (call .rclog.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rclog

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/log"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "log")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .sys.search_sysctlfile_dirs (subj))

       (call .kernel.read_sysctlfile_files (subj))
       (call .kernel.search_sysctlfile_dirs (subj))

       (call .tmp.addname_fs_dirs (subj))

       (call .tmpfile.create_logtmpfile_dirs (subj))
       (call .tmpfile.obj_type_transition_logtmpfile (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcdnsmasq.subj_type_transition (subj)))

(in .file
    (call .rcdnsmasq.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcdnsmasq

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/dnsmasq"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "dnsmasq")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (allow subj self (capability (chown net_raw sys_ptrace)))
       (allow subj self create_packet_socket)
       (allow subj self create_rawip_socket)
       (allow subj self create_unix_dgram_socket)

       (call .devstatus.subj_type_transition (subj))

       (call .dnsmasq.create_runtimetmpfile_dirs (subj))
       (call .dnsmasq.create_tmpfile_dirs (subj))
       (call .dnsmasq.create_tmpfile_files (subj))
       (call .dnsmasq.getattr_conffile_files (subj))
       (call .dnsmasq.getattr_datafile_files (subj))
       (call .dnsmasq.readwrite_tmpfile_files (subj))
       (call .dnsmasq.search_datafile_dirs (subj))
       (call .dnsmasq.setattr_runtimetmpfile_dirs (subj))
       (call .dnsmasq.subj_type_transition (subj))
       (call .dnsmasq.obj_type_transition_runtimetmpfile (subj))
       (call .dnsmasq.obj_type_transition_tmpfile (subj file "dhcp.leases"))
       (call .dnsmasq.obj_type_transition_tmpfile (subj dir "dnsmasq.d"))

       (call .hotplug.list_conffile_dirs (subj))

       (call .ipv6.getattr_sysctlfile_dirs (subj))

       (call .ipcalc.subj_type_transition (subj))

       (call .logd.unix_dgram_send (subj))

       (call .net.search_sysctlfile_dirs (subj))

       (call .odhcpd.getattr_execfile_files (subj))

       (call .osrelease.read_miscfile_files (subj))

       (call .proc.list_fs_dirs (subj))

       (call .rcodhcpd.execute_initscriptfile_files (subj))

       (call .resolv.addname_tmpfile_dirs (subj))
       (call .resolv.manage_tmpfile_files (subj))
       (call .resolv.obj_type_transition_tmpfile (subj))

       (call .subj.read_state_all (subj))

       (call .sys.search_sysctlfile_dirs (subj))

       (call .tmp.deletename_fs_dirs (subj))
       (call .tmp.manage_fs_lnk_files (subj))

       (call .tmpfile.addname_statetmpfile_dirs (subj))
       (call .tmpfile.create_conftmpfile_dirs (subj))
       (call .tmpfile.create_hoststmpfile_dirs (subj))
       (call .tmpfile.create_runtimetmpfile_dirs (subj))
       (call .tmpfile.create_statetmpfile_dirs (subj))
       (call .tmpfile.manage_conftmpfile_files (subj))
       (call .tmpfile.manage_hoststmpfile_files (subj))
       (call .tmpfile.manage_runtimetmpfile_files (subj))
       (call .tmpfile.readwrite_conftmpfile_dirs (subj))
       (call .tmpfile.readwrite_hoststmpfile_dirs (subj))
       (call .tmpfile.readwrite_runtimetmpfile_dirs (subj))
       (call .tmpfile.obj_type_transition_conftmpfile (subj))
       (call .tmpfile.obj_type_transition_hoststmpfile (subj))
       (call .tmpfile.obj_type_transition_runtimetmpfile (subj))
       (call .tmpfile.obj_type_transition_statetmpfile (subj))

       (optional rcdnsmasq_opt_rcsysntpd
                 (call .rcsysntpd.execute_initscriptfile_files (subj)))

       (optional rcdnsmasq_opt_rcunbound
                 (call .rcunbound.use_fds (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcsysntpd.subj_type_transition (subj)))

(in .file
    (call .rcsysntpd.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcsysntpd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/sysntpd"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "sysntpd")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .ntpdhotplug.subj_type_transition (subj))

       (call .tmp.list_fs_dirs (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcacme.subj_type_transition (subj)))

(in .file
    (call .rcacme.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcacme

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/acme"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "acme")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .acme.manage_runtimetmpfile_files (subj))
       (call .acme.obj_type_transition_runtimetmpfile (subj))

       (call .tmpfile.deletename_runtimetmpfile_dirs (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcsquid.subj_type_transition (subj)))

(in .file
    (call .rcsquid.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcsquid

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/squid"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "squid")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (allow subj self (capability (chown dac_override dac_read_search)))

       (call .squid.read_conffile_files (subj))
       (call .squid.search_conffile_dirs (subj))

       (call .squid.manage_tmpfile_dirs (subj))
       (call .squid.manage_tmpfile_files (subj))
       (call .squid.obj_type_transition_tmpfile (subj dir "squid"))

       (call .squid.sslcrtd.subj_type_transition (subj))
       (call .squid.subj_type_transition (subj))

       (call .www.search_miscfile_dirs (subj))

       (optional rcsquid_opt_luci
                 (call .luci.cgi.use_fds (subj)))

       (optional rcsquid_opt_uhttpd
                 (call .uhttpd.readinherited_fifo_files (subj))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcmurmur.subj_type_transition (subj)))

(in .file
    (call .rcmurmur.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcmurmur

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/umurmur"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "umurmur")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .murmur.read_runtimetmpfile_files (subj))
       (call .murmur.signal (subj))
       (call .murmur.subj_type_transition (subj))

       (call .tmpfile.search_runtimetmpfile_dirs (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcbootcount.subj_type_transition (subj)))

(in .file
    (call .rcbootcount.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcbootcount

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/bootcount"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "bootcount")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .fwenv.subj_type_transition (subj))

       (call .mtd.subj_type_transition (subj))

       (call .preinit.read_tmpfile_files (subj))
       (call .preinit.search_tmpfile_dirs (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcodhcpd.subj_type_transition (subj)))

(in .file
    (call .rcodhcpd.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcodhcpd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/odhcpd"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "odhcpd")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcled.subj_type_transition (subj)))

(in .file
    (call .rcled.obj_type_transition_initscriptfile (unconfined.subj_typeattr))
    (call .rcled.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr)))

(block rcled

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/run/led\.state"
        file
        runtimetmpfile_file_context)

       (filecon
        "/etc/init\.d/led"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "led")))

       (macro obj_type_transition_runtimetmpfile ((type ARG1))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile file "led.state")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)
       (blockinherit .tmpfile.runtime.obj_template)

       (call manage_runtimetmpfile_files (subj))
       (call obj_type_transition_runtimetmpfile (subj))

       ;; compat with genfs_seclabel_symlinks=0
       (call .sys.read_fs_lnk_files (subj))

       (call .class.search_sysfile_dirs (subj))

       (call .devices.addname_sysfile_dirs (subj))
       (call .devices.create_sysfile_files (subj))
       (call .devices.readwrite_sysfile_files (subj))

       (call .leds.read_sysfile_lnk_files (subj))
       (call .leds.search_sysfile_dirs (subj))
       (call .leds.write_sysfile_files (subj))

       (call .tmpfile.deletename_runtimetmpfile_dirs (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcchronyd.subj_type_transition (subj)))

(in .file
    (call .rcchronyd.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcchronyd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/chronyd"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "chronyd")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (call .chrony.manage_conftmpfile_dirs (subj))
       (call .chrony.manage_conftmpfile_files (subj))
       (call .chrony.obj_type_transition_conftmpfile (subj))

       (call .tmpfile.create_conftmpfile_dirs (subj))
       (call .tmpfile.obj_type_transition_conftmpfile (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcsysctl.subj_type_transition (subj)))

(in .file
    (call .rcsysctl.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcsysctl

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/sysctl"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "sysctl")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (allow subj self (capability (sys_admin)))

       (call .sysctl.list_conffile_dirs (subj))
       (call .sysctl.read_conffile_files (subj))

       (call .sysctlfile.list_all_dirs (subj))
       (call .sysctlfile.readwrite_all_files (subj))

       (call .meminfo.read_procfile_files (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcrpcd.subj_type_transition (subj)))

(in .file
    (call .rcrpcd.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcrpcd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/rpcd"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "rpcd")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcwpad.subj_type_transition (subj)))

(in .file
    (call .rcwpad.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr)))

(block rcwpad

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/init\.d/wpad"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "wpad")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)

       (allow subj self (capability (chown)))

       (call .wpad.getattr_execfile_files (subj))

       (call .wpad.create_runtimetmpfile_dirs (subj))
       (call .wpad.obj_type_transition_runtimetmpfile (subj dir "hostapd"))
       (call .wpad.obj_type_transition_runtimetmpfile
             (subj dir "wpa_supplicant"))
       (call .wpad.setattr_runtimetmpfile_dirs (subj))

       (call .tmpfile.create_runtimetmpfile_dirs (subj))
       (call .tmpfile.obj_type_transition_runtimetmpfile (subj)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(sid
 file)

;;
;; Contexts
;;

(sidcontext
 file
 (.u
  .r
  .unlabeled
  (systemlow
   systemlow)))

;;
;; Macros
;;

(macro addname_unlabeled_dirs ((type ARG1))
       (allow ARG1 .unlabeled addname_dir))

(macro append_unlabeled_blk_files ((type ARG1))
       (allow ARG1 .unlabeled append_blk_file))

(macro append_unlabeled_chr_files ((type ARG1))
       (allow ARG1 .unlabeled append_chr_file))

(macro append_unlabeled_fifo_files ((type ARG1))
       (allow ARG1 .unlabeled append_fifo_file))

(macro append_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled append_file))

(macro appendinherited_unlabeled_blk_files ((type ARG1))
       (allow ARG1 .unlabeled appendinherited_blk_file))

(macro appendinherited_unlabeled_chr_files ((type ARG1))
       (allow ARG1 .unlabeled appendinherited_chr_file))

(macro appendinherited_unlabeled_fifo_files ((type ARG1))
       (allow ARG1 .unlabeled appendinherited_fifo_file))

(macro appendinherited_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled appendinherited_file))

(macro associate_unlabeled_filesystems ((type ARG1))
       (allow ARG1 .unlabeled (filesystem (associate))))

(macro create_unlabeled ((type ARG1))
       (allow ARG1 .unlabeled (allfiles (create))))

(macro create_unlabeled_blk_files ((type ARG1))
       (allow ARG1 .unlabeled create_blk_file))

(macro create_unlabeled_chr_files ((type ARG1))
       (allow ARG1 .unlabeled create_chr_file))

(macro create_unlabeled_dirs ((type ARG1))
       (allow ARG1 .unlabeled create_dir))

(macro create_unlabeled_fifo_files ((type ARG1))
       (allow ARG1 .unlabeled create_fifo_file))

(macro create_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled create_file))

(macro create_unlabeled_lnk_files ((type ARG1))
       (allow ARG1 .unlabeled create_lnk_file))

(macro create_unlabeled_sock_files ((type ARG1))
       (allow ARG1 .unlabeled create_sock_file))

(macro deletename_unlabeled_dirs ((type ARG1))
       (allow ARG1 .unlabeled deletename_dir))

(macro delete_unlabeled ((type ARG1))
       (allow ARG1 .unlabeled (allfiles (delete))))

(macro delete_unlabeled_blk_files ((type ARG1))
       (allow ARG1 .unlabeled delete_blk_file))

(macro delete_unlabeled_chr_files ((type ARG1))
       (allow ARG1 .unlabeled delete_chr_file))

(macro delete_unlabeled_dirs ((type ARG1))
       (allow ARG1 .unlabeled delete_dir))

(macro delete_unlabeled_fifo_files ((type ARG1))
       (allow ARG1 .unlabeled delete_fifo_file))

(macro delete_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled delete_file))

(macro delete_unlabeled_lnk_files ((type ARG1))
       (allow ARG1 .unlabeled delete_lnk_file))

(macro delete_unlabeled_sock_files ((type ARG1))
       (allow ARG1 .unlabeled delete_sock_file))

(macro execute_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled execute_file))

(macro getattr_unlabeled_filesystems ((type ARG1))
       (allow ARG1 .unlabeled (filesystem (getattr))))

(macro list_unlabeled_dirs ((type ARG1))
       (allow ARG1 .unlabeled list_dir))

(macro listinherited_unlabeled_dirs ((type ARG1))
       (allow ARG1 .unlabeled listinherited_dir))

(macro manage_unlabeled ((type ARG1))
       (allow ARG1 .unlabeled (allfiles (manage))))

(macro manage_unlabeled_blk_files ((type ARG1))
       (allow ARG1 .unlabeled manage_blk_file))

(macro manage_unlabeled_chr_files ((type ARG1))
       (allow ARG1 .unlabeled manage_chr_file))

(macro manage_unlabeled_dirs ((type ARG1))
       (allow ARG1 .unlabeled manage_dir))

(macro manage_unlabeled_fifo_files ((type ARG1))
       (allow ARG1 .unlabeled manage_fifo_file))

(macro manage_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled manage_file))

(macro manage_unlabeled_lnk_files ((type ARG1))
       (allow ARG1 .unlabeled manage_lnk_file))

(macro manage_unlabeled_sock_files ((type ARG1))
       (allow ARG1 .unlabeled manage_sock_file))

(macro mapexecute_unlabeled_chr_files ((type ARG1))
       (allow ARG1 .unlabeled mapexecute_chr_file))

(macro mapexecute_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled mapexecute_file))

(macro mount_unlabeled_filesystems ((type ARG1))
       (allow ARG1 .unlabeled (filesystem (mount))))

(macro mounton_unlabeled ((type ARG1))
       (allow ARG1 .unlabeled (allfiles (mounton))))

(macro mounton_unlabeled_blk_files ((type ARG1))
       (allow ARG1 .unlabeled mounton_blk_file))

(macro mounton_unlabeled_chr_files ((type ARG1))
       (allow ARG1 .unlabeled mounton_chr_file))

(macro mounton_unlabeled_dirs ((type ARG1))
       (allow ARG1 .unlabeled mounton_dir))

(macro mounton_unlabeled_fifo_files ((type ARG1))
       (allow ARG1 .unlabeled mounton_fifo_file))

(macro mounton_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled mounton_file))

(macro mounton_unlabeled_lnk_files ((type ARG1))
       (allow ARG1 .unlabeled mounton_lnk_file))

(macro mounton_unlabeled_sock_files ((type ARG1))
       (allow ARG1 .unlabeled mounton_sock_file))

(macro quotaget_unlabeled_filesystems ((type ARG1))
       (allow ARG1 .unlabeled (filesystem (quotaget))))

(macro quotamod_unlabeled_filesystems ((type ARG1))
       (allow ARG1 .unlabeled (filesystem (quotamod))))

(macro read_unlabeled ((type ARG1))
       (allow ARG1 .unlabeled (allfiles (read))))

(macro read_unlabeled_blk_files ((type ARG1))
       (allow ARG1 .unlabeled read_blk_file))

(macro read_unlabeled_chr_files ((type ARG1))
       (allow ARG1 .unlabeled read_chr_file))

(macro read_unlabeled_fifo_files ((type ARG1))
       (allow ARG1 .unlabeled read_fifo_file))

(macro read_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled read_file))

(macro readinherited_unlabeled_blk_files ((type ARG1))
       (allow ARG1 .unlabeled readinherited_blk_file))

(macro readinherited_unlabeled_chr_files ((type ARG1))
       (allow ARG1 .unlabeled readinherited_chr_file))

(macro readinherited_unlabeled_fifo_files ((type ARG1))
       (allow ARG1 .unlabeled readinherited_fifo_file))

(macro readinherited_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled readinherited_file))

(macro readinherited_unlabeled_sock_files ((type ARG1))
       (allow ARG1 .unlabeled readinherited_sock_file))

(macro read_unlabeled_lnk_files ((type ARG1))
       (allow ARG1 .unlabeled read_lnk_file))

(macro read_unlabeled_sock_files ((type ARG1))
       (allow ARG1 .unlabeled read_sock_file))

(macro readwrite_unlabeled ((type ARG1))
       (allow ARG1 .unlabeled (allfiles (readwrite))))

(macro readwrite_unlabeled_blk_files ((type ARG1))
       (allow ARG1 .unlabeled readwrite_blk_file))

(macro readwrite_unlabeled_chr_files ((type ARG1))
       (allow ARG1 .unlabeled readwrite_chr_file))

(macro readwrite_unlabeled_dirs ((type ARG1))
       (allow ARG1 .unlabeled readwrite_dir))

(macro readwrite_unlabeled_fifo_files ((type ARG1))
       (allow ARG1 .unlabeled readwrite_fifo_file))

(macro readwrite_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled readwrite_file))

(macro readwriteinherited_unlabeled_blk_files ((type ARG1))
       (allow ARG1 .unlabeled readwriteinherited_blk_file))

(macro readwriteinherited_unlabeled_chr_files ((type ARG1))
       (allow ARG1 .unlabeled readwriteinherited_chr_file))

(macro readwriteinherited_unlabeled_dirs ((type ARG1))
       (allow ARG1 .unlabeled readwriteinherited_dir))

(macro readwriteinherited_unlabeled_fifo_files ((type ARG1))
       (allow ARG1 .unlabeled readwriteinherited_fifo_file))

(macro readwriteinherited_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled readwriteinherited_file))

(macro readwriteinherited_unlabeled_sock_files ((type ARG1))
       (allow ARG1 .unlabeled readwriteinherited_sock_file))

(macro readwrite_unlabeled_lnk_files ((type ARG1))
       (allow ARG1 .unlabeled readwrite_lnk_file))

(macro readwrite_unlabeled_sock_files ((type ARG1))
       (allow ARG1 .unlabeled readwrite_sock_file))

(macro relabel_unlabeled ((type ARG1))
       (allow ARG1 .unlabeled (allfiles (relabel))))

(macro relabel_unlabeled_blk_files ((type ARG1))
       (allow ARG1 .unlabeled relabel_blk_file))

(macro relabel_unlabeled_chr_files ((type ARG1))
       (allow ARG1 .unlabeled relabel_chr_file))

(macro relabel_unlabeled_dirs ((type ARG1))
       (allow ARG1 .unlabeled relabel_dir))

(macro relabel_unlabeled_fifo_files ((type ARG1))
       (allow ARG1 .unlabeled relabel_fifo_file))

(macro relabel_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled relabel_file))

(macro relabel_unlabeled_filesystems ((type ARG1))
       (allow ARG1 .unlabeled (filesystem (relabelfrom relabelto))))

(macro relabel_unlabeled_lnk_files ((type ARG1))
       (allow ARG1 .unlabeled relabel_lnk_file))

(macro relabel_unlabeled_sock_files ((type ARG1))
       (allow ARG1 .unlabeled relabel_sock_file))

(macro relabelfrom_unlabeled ((type ARG1))
       (allow ARG1 .unlabeled (allfiles (relabelfrom))))

(macro relabelfrom_unlabeled_blk_files ((type ARG1))
       (allow ARG1 .unlabeled relabelfrom_blk_file))

(macro relabelfrom_unlabeled_chr_files ((type ARG1))
       (allow ARG1 .unlabeled relabelfrom_chr_file))

(macro relabelfrom_unlabeled_dirs ((type ARG1))
       (allow ARG1 .unlabeled relabelfrom_dir))

(macro relabelfrom_unlabeled_fifo_files ((type ARG1))
       (allow ARG1 .unlabeled relabelfrom_fifo_file))

(macro relabelfrom_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled relabelfrom_file))

(macro relabelfrom_unlabeled_filesystems ((type ARG1))
       (allow ARG1 .unlabeled (filesystem (relabelfrom))))

(macro relabelfrom_unlabeled_lnk_files ((type ARG1))
       (allow ARG1 .unlabeled relabelfrom_lnk_file))

(macro relabelfrom_unlabeled_sock_files ((type ARG1))
       (allow ARG1 .unlabeled relabelfrom_sock_file))

(macro relabelto_unlabeled ((type ARG1))
       (allow ARG1 .unlabeled (allfiles (relabelto))))

(macro relabelto_unlabeled_blk_files ((type ARG1))
       (allow ARG1 .unlabeled relabelto_blk_file))

(macro relabelto_unlabeled_chr_files ((type ARG1))
       (allow ARG1 .unlabeled relabelto_chr_file))

(macro relabelto_unlabeled_dirs ((type ARG1))
       (allow ARG1 .unlabeled relabelto_dir))

(macro relabelto_unlabeled_fifo_files ((type ARG1))
       (allow ARG1 .unlabeled relabelto_fifo_file))

(macro relabelto_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled relabelto_file))

(macro relabelto_unlabeled_filesystems ((type ARG1))
       (allow ARG1 .unlabeled (filesystem (relabelto))))

(macro relabelto_unlabeled_lnk_files ((type ARG1))
       (allow ARG1 .unlabeled relabelto_lnk_file))

(macro relabelto_unlabeled_sock_files ((type ARG1))
       (allow ARG1 .unlabeled relabelto_sock_file))

(macro remount_unlabeled_filesystems ((type ARG1))
       (allow ARG1 .unlabeled (filesystem (remount))))

(macro rename_unlabeled ((type ARG1))
       (allow ARG1 .unlabeled (allfiles (rename))))

(macro rename_unlabeled_blk_files ((type ARG1))
       (allow ARG1 .unlabeled rename_blk_file))

(macro rename_unlabeled_chr_files ((type ARG1))
       (allow ARG1 .unlabeled rename_chr_file))

(macro rename_unlabeled_dirs ((type ARG1))
       (allow ARG1 .unlabeled rename_dir))

(macro rename_unlabeled_fifo_files ((type ARG1))
       (allow ARG1 .unlabeled rename_fifo_file))

(macro rename_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled rename_file))

(macro rename_unlabeled_lnk_files ((type ARG1))
       (allow ARG1 .unlabeled rename_lnk_file))

(macro rename_unlabeled_sock_files ((type ARG1))
       (allow ARG1 .unlabeled rename_sock_file))

(macro search_unlabeled_dirs ((type ARG1))
       (allow ARG1 .unlabeled search_dir))

(macro unlabeled_obj_type_transition
       ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
       (typetransition ARG1 .unlabeled ARG3 ARG4 ARG2)
       (call addname_unlabeled_dirs (ARG1)))

(macro unmount_unlabeled_filesystems ((type ARG1))
       (allow ARG1 .unlabeled (filesystem (unmount))))

(macro watch_unlabeled_filesystems ((type ARG1))
       (allow ARG1 .unlabeled (filesystem (watch))))

(macro write_unlabeled ((type ARG1))
       (allow ARG1 .unlabeled (allfiles (write))))

(macro write_unlabeled_blk_files ((type ARG1))
       (allow ARG1 .unlabeled write_blk_file))

(macro write_unlabeled_chr_files ((type ARG1))
       (allow ARG1 .unlabeled write_chr_file))

(macro write_unlabeled_dirs ((type ARG1))
       (allow ARG1 .unlabeled write_dir))

(macro write_unlabeled_fifo_files ((type ARG1))
       (allow ARG1 .unlabeled write_fifo_file))

(macro write_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled write_file))

(macro writeinherited_unlabeled_blk_files ((type ARG1))
       (allow ARG1 .unlabeled writeinherited_blk_file))

(macro writeinherited_unlabeled_chr_files ((type ARG1))
       (allow ARG1 .unlabeled writeinherited_chr_file))

(macro writeinherited_unlabeled_dirs ((type ARG1))
       (allow ARG1 .unlabeled writeinherited_dir))

(macro writeinherited_unlabeled_fifo_files ((type ARG1))
       (allow ARG1 .unlabeled writeinherited_fifo_file))

(macro writeinherited_unlabeled_files ((type ARG1))
       (allow ARG1 .unlabeled writeinherited_file))

(macro writeinherited_unlabeled_sock_files ((type ARG1))
       (allow ARG1 .unlabeled writeinherited_sock_file))

(macro write_unlabeled_lnk_files ((type ARG1))
       (allow ARG1 .unlabeled write_lnk_file))

(macro write_unlabeled_sock_files ((type ARG1))
       (allow ARG1 .unlabeled write_sock_file))

;;
;; Policy
;;

(type
 unlabeled)

(allow .unlabeled self (filesystem (associate)))

(call .sys.type (unlabeled))

(call .fs.seclabel.associate_all_filesystems (unlabeled))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block usermodehelper

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sys/kernel/usermodehelper"
        sysctlfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysctlfile.kernel.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .keys

    ;;
    ;; Contexts
    ;;

    (genfscon
     "proc"
     "/sys/kernel/keys"
     sysctlfile_file_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .sysctlfile.kernel.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block pty

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sys/kernel/pty"
        sysctlfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysctlfile.kernel.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block corepipelimit

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sys/kernel/core_pipe_limit"
        sysctlfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysctlfile.kernel.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block poweroffcmd

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sys/kernel/poweroff_cmd"
        sysctlfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysctlfile.kernel.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block modprobe

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sys/kernel/modprobe"
        sysctlfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysctlfile.kernel.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .random

    ;;
    ;; Contexts
    ;;

    (genfscon
     "proc"
     "/sys/kernel/random"
     sysctlfile_file_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .sysctlfile.kernel.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block corepattern

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sys/kernel/core_pattern"
        sysctlfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro getattr_sysctlfile_files ((type ARG1))
              (allow ARG1 sysctlfile (file (getattr))))

       ;;
       ;; Policy
       ;;

       (blockinherit .sysctlfile.kernel.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block firmwareconfig

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sys/kernel/firmwareconfig"
        sysctlfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysctlfile.kernel.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block seccomp

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sys/kernel/seccomp"
        sysctlfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysctlfile.kernel.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block user

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sys/user"
        sysctlfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysctlfile.user.obj_template))

(in .sysctlfile

    (block user

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysctlfile.obj_base_template)

                  (call .sysctlfile.user.obj_type (sysctlfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysctlfile.user.obj_base_template)
                  (blockinherit .sysctlfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev

    ;;
    ;; Contexts
    ;;

    (genfscon
     "proc"
     "/sys/dev"
     sysctlfile_file_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .sysctlfile.dev.obj_template))

(in .sysctlfile

    (block dev

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysctlfile.obj_base_template)

                  (call .sysctlfile.dev.obj_type (sysctlfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysctlfile.dev.obj_base_template)
                  (blockinherit .sysctlfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block kernel

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sys/kernel"
        sysctlfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysctlfile.kernel.obj_template))

(in .sysctlfile

    (block kernel

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysctlfile.obj_base_template)

                  (call .sysctlfile.kernel.obj_type (sysctlfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysctlfile.kernel.obj_base_template)
                  (blockinherit .sysctlfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .net

    ;;
    ;; Contexts
    ;;

    (genfscon
     "proc"
     "/sys/net"
     sysctlfile_file_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .sysctlfile.net.obj_template))

(in .sysctlfile

    (block net

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysctlfile.obj_base_template)

                  (call .sysctlfile.net.obj_type (sysctlfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysctlfile.net.obj_base_template)
                  (blockinherit .sysctlfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block ipv6

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sys/net/ipv6"
        sysctlfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro getattr_sysctlfile_dirs ((type ARG1))
              (allow ARG1 sysctlfile (dir (getattr))))

       ;;
       ;; Policy
       ;;

       (blockinherit .sysctlfile.net.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block netfilter

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sys/net/netfilter"
        sysctlfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysctlfile.net.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block unix

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sys/net/unix"
        sysctlfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysctlfile.net.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block ipv4

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sys/net/ipv4"
        sysctlfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysctlfile.net.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block core

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sys/net/core"
        sysctlfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysctlfile.net.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .debug

    ;;
    ;; Contexts
    ;;

    (genfscon
     "proc"
     "/sys/debug"
     sysctlfile_file_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .sysctlfile.debug.obj_template))

(in .sysctlfile

    (block debug

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysctlfile.obj_base_template)

                  (call .sysctlfile.debug.obj_type (sysctlfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysctlfile.debug.obj_base_template)
                  (blockinherit .sysctlfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .fs

    ;;
    ;; Contexts
    ;;

    (genfscon
     "proc"
     "/sys/fs"
     sysctlfile_file_context)

    ;;
    ;; Policy
    ;;

    (blockinherit .sysctlfile.fs.obj_template))

(in .sysctlfile

    (block fs

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysctlfile.obj_base_template)

                  (call .sysctlfile.fs.obj_type (sysctlfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysctlfile.fs.obj_base_template)
                  (blockinherit .sysctlfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block vm

       ;;
       ;; Contexts
       ;;

       (genfscon
        "proc"
        "/sys/vm"
        sysctlfile_file_context)

       ;;
       ;; Policy
       ;;

       (blockinherit .sysctlfile.vm.obj_template))

(in .sysctlfile

    (block vm

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (blockinherit .sysctlfile.obj_base_template)

                  (call .sysctlfile.vm.obj_type (sysctlfile)))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .sysctlfile.vm.obj_base_template)
                  (blockinherit .sysctlfile.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block tmpfile

       ;;
       ;; Policy
       ;;

       (blockinherit .file.obj_all_macro_template)

       (call .file.obj_type (obj_typeattr))

       (call .tmp.associate_filesystems (obj_typeattr))

       ;;
       ;; Templates
       ;;

       (block obj_base_template

              ;;
              ;; Contexts
              ;;

              (context
               tmpfile_file_context
               (.u
                .r
                tmpfile
                (systemlow
                 systemlow)))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_base_template)

              (type
               tmpfile)

              (call .tmpfile.obj_type (tmpfile)))

       (block obj_macro_template

              ;;
              ;; Macros
              ;;

              (macro addname_tmpfile_dirs ((type ARG1))
                     (allow ARG1 tmpfile addname_dir))

              (macro append_tmpfile_blk_files ((type ARG1))
                     (allow ARG1 tmpfile append_blk_file))

              (macro append_tmpfile_chr_files ((type ARG1))
                     (allow ARG1 tmpfile append_chr_file))

              (macro append_tmpfile_fifo_files ((type ARG1))
                     (allow ARG1 tmpfile append_fifo_file))

              (macro append_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile append_file))

              (macro appendinherited_tmpfile_blk_files ((type ARG1))
                     (allow ARG1 tmpfile appendinherited_blk_file))

              (macro appendinherited_tmpfile_chr_files ((type ARG1))
                     (allow ARG1 tmpfile appendinherited_chr_file))

              (macro appendinherited_tmpfile_fifo_files ((type ARG1))
                     (allow ARG1 tmpfile appendinherited_fifo_file))

              (macro appendinherited_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile appendinherited_file))

              (macro create_tmpfile ((type ARG1))
                     (allow ARG1 tmpfile (allfiles (create))))

              (macro create_tmpfile_blk_files ((type ARG1))
                     (allow ARG1 tmpfile create_blk_file))

              (macro create_tmpfile_chr_files ((type ARG1))
                     (allow ARG1 tmpfile create_chr_file))

              (macro create_tmpfile_dirs ((type ARG1))
                     (allow ARG1 tmpfile create_dir))

              (macro create_tmpfile_fifo_files ((type ARG1))
                     (allow ARG1 tmpfile create_fifo_file))

              (macro create_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile create_file))

              (macro create_tmpfile_lnk_files ((type ARG1))
                     (allow ARG1 tmpfile create_lnk_file))

              (macro create_tmpfile_sock_files ((type ARG1))
                     (allow ARG1 tmpfile create_sock_file))

              (macro deletename_tmpfile_dirs ((type ARG1))
                     (allow ARG1 tmpfile deletename_dir))

              (macro delete_tmpfile ((type ARG1))
                     (allow ARG1 tmpfile (allfiles (delete))))

              (macro delete_tmpfile_blk_files ((type ARG1))
                     (allow ARG1 tmpfile delete_blk_file))

              (macro delete_tmpfile_chr_files ((type ARG1))
                     (allow ARG1 tmpfile delete_chr_file))

              (macro delete_tmpfile_dirs ((type ARG1))
                     (allow ARG1 tmpfile delete_dir))

              (macro delete_tmpfile_fifo_files ((type ARG1))
                     (allow ARG1 tmpfile delete_fifo_file))

              (macro delete_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile delete_file))

              (macro delete_tmpfile_lnk_files ((type ARG1))
                     (allow ARG1 tmpfile delete_lnk_file))

              (macro delete_tmpfile_sock_files ((type ARG1))
                     (allow ARG1 tmpfile delete_sock_file))

              (macro execute_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile execute_file))

              (macro list_tmpfile_dirs ((type ARG1))
                     (allow ARG1 tmpfile list_dir))

              (macro listinherited_tmpfile_dirs ((type ARG1))
                     (allow ARG1 tmpfile listinherited_dir))

              (macro manage_tmpfile ((type ARG1))
                     (allow ARG1 tmpfile (allfiles (manage))))

              (macro manage_tmpfile_blk_files ((type ARG1))
                     (allow ARG1 tmpfile manage_blk_file))

              (macro manage_tmpfile_chr_files ((type ARG1))
                     (allow ARG1 tmpfile manage_chr_file))

              (macro manage_tmpfile_dirs ((type ARG1))
                     (allow ARG1 tmpfile manage_dir))

              (macro manage_tmpfile_fifo_files ((type ARG1))
                     (allow ARG1 tmpfile manage_fifo_file))

              (macro manage_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile manage_file))

              (macro manage_tmpfile_lnk_files ((type ARG1))
                     (allow ARG1 tmpfile manage_lnk_file))

              (macro manage_tmpfile_sock_files ((type ARG1))
                     (allow ARG1 tmpfile manage_sock_file))

              (macro mapexecute_tmpfile_chr_files ((type ARG1))
                     (allow ARG1 tmpfile mapexecute_chr_file))

              (macro mapexecute_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile mapexecute_file))

              (macro mounton_tmpfile ((type ARG1))
                     (allow ARG1 tmpfile (allfiles (mounton))))

              (macro mounton_tmpfile_blk_files ((type ARG1))
                     (allow ARG1 tmpfile mounton_blk_file))

              (macro mounton_tmpfile_chr_files ((type ARG1))
                     (allow ARG1 tmpfile mounton_chr_file))

              (macro mounton_tmpfile_dirs ((type ARG1))
                     (allow ARG1 tmpfile mounton_dir))

              (macro mounton_tmpfile_fifo_files ((type ARG1))
                     (allow ARG1 tmpfile mounton_fifo_file))

              (macro mounton_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile mounton_file))

              (macro mounton_tmpfile_lnk_files ((type ARG1))
                     (allow ARG1 tmpfile mounton_lnk_file))

              (macro mounton_tmpfile_sock_files ((type ARG1))
                     (allow ARG1 tmpfile mounton_sock_file))

              (macro read_tmpfile ((type ARG1))
                     (allow ARG1 tmpfile (allfiles (read))))

              (macro read_tmpfile_blk_files ((type ARG1))
                     (allow ARG1 tmpfile read_blk_file))

              (macro read_tmpfile_chr_files ((type ARG1))
                     (allow ARG1 tmpfile read_chr_file))

              (macro read_tmpfile_fifo_files ((type ARG1))
                     (allow ARG1 tmpfile read_fifo_file))

              (macro read_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile read_file))

              (macro readinherited_tmpfile_blk_files ((type ARG1))
                     (allow ARG1 tmpfile readinherited_blk_file))

              (macro readinherited_tmpfile_chr_files ((type ARG1))
                     (allow ARG1 tmpfile readinherited_chr_file))

              (macro readinherited_tmpfile_fifo_files ((type ARG1))
                     (allow ARG1 tmpfile readinherited_fifo_file))

              (macro readinherited_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile readinherited_file))

              (macro readinherited_tmpfile_sock_files ((type ARG1))
                     (allow ARG1 tmpfile readinherited_sock_file))

              (macro read_tmpfile_lnk_files ((type ARG1))
                     (allow ARG1 tmpfile read_lnk_file))

              (macro read_tmpfile_sock_files ((type ARG1))
                     (allow ARG1 tmpfile read_sock_file))

              (macro readwrite_tmpfile ((type ARG1))
                     (allow ARG1 tmpfile (allfiles (readwrite))))

              (macro readwrite_tmpfile_blk_files ((type ARG1))
                     (allow ARG1 tmpfile readwrite_blk_file))

              (macro readwrite_tmpfile_chr_files ((type ARG1))
                     (allow ARG1 tmpfile readwrite_chr_file))

              (macro readwrite_tmpfile_dirs ((type ARG1))
                     (allow ARG1 tmpfile readwrite_dir))

              (macro readwrite_tmpfile_fifo_files ((type ARG1))
                     (allow ARG1 tmpfile readwrite_fifo_file))

              (macro readwrite_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile readwrite_file))

              (macro readwriteinherited_tmpfile_blk_files ((type ARG1))
                     (allow ARG1 tmpfile readwriteinherited_blk_file))

              (macro readwriteinherited_tmpfile_chr_files ((type ARG1))
                     (allow ARG1 tmpfile readwriteinherited_chr_file))

              (macro readwriteinherited_tmpfile_dirs ((type ARG1))
                     (allow ARG1 tmpfile readwriteinherited_dir))

              (macro readwriteinherited_tmpfile_fifo_files ((type ARG1))
                     (allow ARG1 tmpfile readwriteinherited_fifo_file))

              (macro readwriteinherited_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile readwriteinherited_file))

              (macro readwriteinherited_tmpfile_sock_files ((type ARG1))
                     (allow ARG1 tmpfile readwriteinherited_sock_file))

              (macro readwrite_tmpfile_lnk_files ((type ARG1))
                     (allow ARG1 tmpfile readwrite_lnk_file))

              (macro readwrite_tmpfile_sock_files ((type ARG1))
                     (allow ARG1 tmpfile readwrite_sock_file))

              (macro relabel_tmpfile ((type ARG1))
                     (allow ARG1 tmpfile (allfiles (relabel))))

              (macro relabel_tmpfile_blk_files ((type ARG1))
                     (allow ARG1 tmpfile relabel_blk_file))

              (macro relabel_tmpfile_chr_files ((type ARG1))
                     (allow ARG1 tmpfile relabel_chr_file))

              (macro relabel_tmpfile_dirs ((type ARG1))
                     (allow ARG1 tmpfile relabel_dir))

              (macro relabel_tmpfile_fifo_files ((type ARG1))
                     (allow ARG1 tmpfile relabel_fifo_file))

              (macro relabel_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile relabel_file))

              (macro relabel_tmpfile_lnk_files ((type ARG1))
                     (allow ARG1 tmpfile relabel_lnk_file))

              (macro relabel_tmpfile_sock_files ((type ARG1))
                     (allow ARG1 tmpfile relabel_sock_file))

              (macro relabelfrom_tmpfile ((type ARG1))
                     (allow ARG1 tmpfile (allfiles (relabelfrom))))

              (macro relabelfrom_tmpfile_blk_files ((type ARG1))
                     (allow ARG1 tmpfile relabelfrom_blk_file))

              (macro relabelfrom_tmpfile_chr_files ((type ARG1))
                     (allow ARG1 tmpfile relabelfrom_chr_file))

              (macro relabelfrom_tmpfile_dirs ((type ARG1))
                     (allow ARG1 tmpfile relabelfrom_dir))

              (macro relabelfrom_tmpfile_fifo_files ((type ARG1))
                     (allow ARG1 tmpfile relabelfrom_fifo_file))

              (macro relabelfrom_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile relabelfrom_file))

              (macro relabelfrom_tmpfile_lnk_files ((type ARG1))
                     (allow ARG1 tmpfile relabelfrom_lnk_file))

              (macro relabelfrom_tmpfile_sock_files ((type ARG1))
                     (allow ARG1 tmpfile relabelfrom_sock_file))

              (macro relabelto_tmpfile ((type ARG1))
                     (allow ARG1 tmpfile (allfiles (relabelto))))

              (macro relabelto_tmpfile_blk_files ((type ARG1))
                     (allow ARG1 tmpfile relabelto_blk_file))

              (macro relabelto_tmpfile_chr_files ((type ARG1))
                     (allow ARG1 tmpfile relabelto_chr_file))

              (macro relabelto_tmpfile_dirs ((type ARG1))
                     (allow ARG1 tmpfile relabelto_dir))

              (macro relabelto_tmpfile_fifo_files ((type ARG1))
                     (allow ARG1 tmpfile relabelto_fifo_file))

              (macro relabelto_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile relabelto_file))

              (macro relabelto_tmpfile_lnk_files ((type ARG1))
                     (allow ARG1 tmpfile relabelto_lnk_file))

              (macro relabelto_tmpfile_sock_files ((type ARG1))
                     (allow ARG1 tmpfile relabelto_sock_file))

              (macro rename_tmpfile ((type ARG1))
                     (allow ARG1 tmpfile (allfiles (rename))))

              (macro rename_tmpfile_blk_files ((type ARG1))
                     (allow ARG1 tmpfile rename_blk_file))

              (macro rename_tmpfile_chr_files ((type ARG1))
                     (allow ARG1 tmpfile rename_chr_file))

              (macro rename_tmpfile_dirs ((type ARG1))
                     (allow ARG1 tmpfile rename_dir))

              (macro rename_tmpfile_fifo_files ((type ARG1))
                     (allow ARG1 tmpfile rename_fifo_file))

              (macro rename_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile rename_file))

              (macro rename_tmpfile_lnk_files ((type ARG1))
                     (allow ARG1 tmpfile rename_lnk_file))

              (macro rename_tmpfile_sock_files ((type ARG1))
                     (allow ARG1 tmpfile rename_sock_file))

              (macro search_tmpfile_dirs ((type ARG1))
                     (allow ARG1 tmpfile search_dir))

              (macro tmpfile_obj_type_transition
                     ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                     (typetransition ARG1 tmpfile ARG3 ARG4 ARG2)
                     (call addname_tmpfile_dirs (ARG1)))

              (macro write_tmpfile ((type ARG1))
                     (allow ARG1 tmpfile (allfiles (write))))

              (macro write_tmpfile_blk_files ((type ARG1))
                     (allow ARG1 tmpfile write_blk_file))

              (macro write_tmpfile_chr_files ((type ARG1))
                     (allow ARG1 tmpfile write_chr_file))

              (macro write_tmpfile_dirs ((type ARG1))
                     (allow ARG1 tmpfile write_dir))

              (macro write_tmpfile_fifo_files ((type ARG1))
                     (allow ARG1 tmpfile write_fifo_file))

              (macro write_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile write_file))

              (macro writeinherited_tmpfile_blk_files ((type ARG1))
                     (allow ARG1 tmpfile writeinherited_blk_file))

              (macro writeinherited_tmpfile_chr_files ((type ARG1))
                     (allow ARG1 tmpfile writeinherited_chr_file))

              (macro writeinherited_tmpfile_dirs ((type ARG1))
                     (allow ARG1 tmpfile writeinherited_dir))

              (macro writeinherited_tmpfile_fifo_files ((type ARG1))
                     (allow ARG1 tmpfile writeinherited_fifo_file))

              (macro writeinherited_tmpfile_files ((type ARG1))
                     (allow ARG1 tmpfile writeinherited_file))

              (macro writeinherited_tmpfile_sock_files ((type ARG1))
                     (allow ARG1 tmpfile writeinherited_sock_file))

              (macro write_tmpfile_lnk_files ((type ARG1))
                     (allow ARG1 tmpfile write_lnk_file))

              (macro write_tmpfile_sock_files ((type ARG1))
                     (allow ARG1 tmpfile write_sock_file))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_macro_template))

       (block obj_template

              ;;
              ;; Policy
              ;;

              (blockabstract obj_template)

              (blockinherit .tmpfile.obj_base_template)
              (blockinherit .tmpfile.obj_macro_template)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .sys.overlaymiscfile_obj_type_transition_rootfile
          (unconfined.subj_typeattr))
    (call .sys.tmp_obj_type_transition_rootfile
          (unconfined.subj_typeattr)))

(in .sys

    ;;
    ;; Contexts
    ;;

    (filecon
     "/"
     dir
     rootfile_file_context)

    (filecon
     "/.*"
     symlink
     rootfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro overlaymiscfile_obj_type_transition_rootfile ((type ARG1))
           (call .overlay.miscfile_obj_type_transition
                 (ARG1 rootfile dir "upper")))

    (macro tmp_obj_type_transition_rootfile ((type ARG1))
           (call .tmp.fs_obj_type_transition
                 (ARG1 rootfile dir "upper")))

    ;;
    ;; Policy
    ;;

    (blockinherit .rootfile.obj_template)

    (call .sys.mountpoint.obj_type (rootfile))

    (call .xattr.associate_filesystems (rootfile)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .selinux

    ;;
    ;; Policy
    ;;

    (block bool

           ;;
           ;; Macros
           ;;

           (macro get_all_selinuxbools ((type ARG1))
                  (call read_all_files (ARG1))
                  (call .selinux.list_fs_dirs (ARG1)))

           (macro set_all_selinuxbools ((type ARG1))
                  (allow ARG1 .selinux (security (setbool)))

                  (allow ARG1 exceptloadpolicy.obj_typeattr
                         (file (append write)))

                  (call read_all_files (ARG1))

                  (call .selinux.list_fs_dirs (ARG1))
                  (call .selinux.readwrite_fs_files (ARG1))

                  (tunableif
                   .load_policy
                   (true
                    (allow ARG1 load_policy.selinuxbool
                           (file (append write))))))

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (call .sys.type (obj_typeattr))

           (allow unconfined.subj_typeattr exceptloadpolicy.obj_typeattr
                  readwrite_file)

           (call load_policy.set_selinuxbools (unconfined.subj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   selinuxbool_file_context
                   (.u
                    .r
                    selinuxbool
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   selinuxbool)

                  (call .selinux.bool.obj_type (selinuxbool)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_selinuxbool_dirs ((type ARG1))
                         (allow ARG1 selinuxbool addname_dir))

                  (macro append_selinuxbool_blk_files ((type ARG1))
                         (allow ARG1 selinuxbool append_blk_file))

                  (macro append_selinuxbool_chr_files ((type ARG1))
                         (allow ARG1 selinuxbool append_chr_file))

                  (macro append_selinuxbool_fifo_files ((type ARG1))
                         (allow ARG1 selinuxbool append_fifo_file))

                  (macro append_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool append_file))

                  (macro appendinherited_selinuxbool_blk_files ((type ARG1))
                         (allow ARG1 selinuxbool appendinherited_blk_file))

                  (macro appendinherited_selinuxbool_chr_files ((type ARG1))
                         (allow ARG1 selinuxbool appendinherited_chr_file))

                  (macro appendinherited_selinuxbool_fifo_files ((type ARG1))
                         (allow ARG1 selinuxbool appendinherited_fifo_file))

                  (macro appendinherited_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool appendinherited_file))

                  (macro create_selinuxbool ((type ARG1))
                         (allow ARG1 selinuxbool (allfiles (create))))

                  (macro create_selinuxbool_blk_files ((type ARG1))
                         (allow ARG1 selinuxbool create_blk_file))

                  (macro create_selinuxbool_chr_files ((type ARG1))
                         (allow ARG1 selinuxbool create_chr_file))

                  (macro create_selinuxbool_dirs ((type ARG1))
                         (allow ARG1 selinuxbool create_dir))

                  (macro create_selinuxbool_fifo_files ((type ARG1))
                         (allow ARG1 selinuxbool create_fifo_file))

                  (macro create_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool create_file))

                  (macro create_selinuxbool_lnk_files ((type ARG1))
                         (allow ARG1 selinuxbool create_lnk_file))

                  (macro create_selinuxbool_sock_files ((type ARG1))
                         (allow ARG1 selinuxbool create_sock_file))

                  (macro deletename_selinuxbool_dirs ((type ARG1))
                         (allow ARG1 selinuxbool deletename_dir))

                  (macro delete_selinuxbool ((type ARG1))
                         (allow ARG1 selinuxbool (allfiles (delete))))

                  (macro delete_selinuxbool_blk_files ((type ARG1))
                         (allow ARG1 selinuxbool delete_blk_file))

                  (macro delete_selinuxbool_chr_files ((type ARG1))
                         (allow ARG1 selinuxbool delete_chr_file))

                  (macro delete_selinuxbool_dirs ((type ARG1))
                         (allow ARG1 selinuxbool delete_dir))

                  (macro delete_selinuxbool_fifo_files ((type ARG1))
                         (allow ARG1 selinuxbool delete_fifo_file))

                  (macro delete_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool delete_file))

                  (macro delete_selinuxbool_lnk_files ((type ARG1))
                         (allow ARG1 selinuxbool delete_lnk_file))

                  (macro delete_selinuxbool_sock_files ((type ARG1))
                         (allow ARG1 selinuxbool delete_sock_file))

                  (macro execute_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool execute_file))

                  (macro get_selinuxbools ((type ARG1))
                         (call read_selinuxbool_files (ARG1))
                         (call .selinux.list_fs_dirs (ARG1)))

                  (macro list_selinuxbool_dirs ((type ARG1))
                         (allow ARG1 selinuxbool list_dir))

                  (macro listinherited_selinuxbool_dirs ((type ARG1))
                         (allow ARG1 selinuxbool listinherited_dir))

                  (macro manage_selinuxbool ((type ARG1))
                         (allow ARG1 selinuxbool (allfiles (manage))))

                  (macro manage_selinuxbool_blk_files ((type ARG1))
                         (allow ARG1 selinuxbool manage_blk_file))

                  (macro manage_selinuxbool_chr_files ((type ARG1))
                         (allow ARG1 selinuxbool manage_chr_file))

                  (macro manage_selinuxbool_dirs ((type ARG1))
                         (allow ARG1 selinuxbool manage_dir))

                  (macro manage_selinuxbool_fifo_files ((type ARG1))
                         (allow ARG1 selinuxbool manage_fifo_file))

                  (macro manage_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool manage_file))

                  (macro manage_selinuxbool_lnk_files ((type ARG1))
                         (allow ARG1 selinuxbool manage_lnk_file))

                  (macro manage_selinuxbool_sock_files ((type ARG1))
                         (allow ARG1 selinuxbool manage_sock_file))

                  (macro mapexecute_selinuxbool_chr_files ((type ARG1))
                         (allow ARG1 selinuxbool mapexecute_chr_file))

                  (macro mapexecute_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool mapexecute_file))

                  (macro mounton_selinuxbool ((type ARG1))
                         (allow ARG1 selinuxbool (allfiles (mounton))))

                  (macro mounton_selinuxbool_blk_files ((type ARG1))
                         (allow ARG1 selinuxbool mounton_blk_file))

                  (macro mounton_selinuxbool_chr_files ((type ARG1))
                         (allow ARG1 selinuxbool mounton_chr_file))

                  (macro mounton_selinuxbool_dirs ((type ARG1))
                         (allow ARG1 selinuxbool mounton_dir))

                  (macro mounton_selinuxbool_fifo_files ((type ARG1))
                         (allow ARG1 selinuxbool mounton_fifo_file))

                  (macro mounton_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool mounton_file))

                  (macro mounton_selinuxbool_lnk_files ((type ARG1))
                         (allow ARG1 selinuxbool mounton_lnk_file))

                  (macro mounton_selinuxbool_sock_files ((type ARG1))
                         (allow ARG1 selinuxbool mounton_sock_file))

                  (macro read_selinuxbool ((type ARG1))
                         (allow ARG1 selinuxbool (allfiles (read))))

                  (macro read_selinuxbool_blk_files ((type ARG1))
                         (allow ARG1 selinuxbool read_blk_file))

                  (macro read_selinuxbool_chr_files ((type ARG1))
                         (allow ARG1 selinuxbool read_chr_file))

                  (macro read_selinuxbool_fifo_files ((type ARG1))
                         (allow ARG1 selinuxbool read_fifo_file))

                  (macro read_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool read_file))

                  (macro readinherited_selinuxbool_blk_files ((type ARG1))
                         (allow ARG1 selinuxbool readinherited_blk_file))

                  (macro readinherited_selinuxbool_chr_files ((type ARG1))
                         (allow ARG1 selinuxbool readinherited_chr_file))

                  (macro readinherited_selinuxbool_fifo_files ((type ARG1))
                         (allow ARG1 selinuxbool readinherited_fifo_file))

                  (macro readinherited_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool readinherited_file))

                  (macro readinherited_selinuxbool_sock_files ((type ARG1))
                         (allow ARG1 selinuxbool readinherited_sock_file))

                  (macro read_selinuxbool_lnk_files ((type ARG1))
                         (allow ARG1 selinuxbool read_lnk_file))

                  (macro read_selinuxbool_sock_files ((type ARG1))
                         (allow ARG1 selinuxbool read_sock_file))

                  (macro readwrite_selinuxbool ((type ARG1))
                         (allow ARG1 selinuxbool (allfiles (readwrite))))

                  (macro readwrite_selinuxbool_blk_files ((type ARG1))
                         (allow ARG1 selinuxbool readwrite_blk_file))

                  (macro readwrite_selinuxbool_chr_files ((type ARG1))
                         (allow ARG1 selinuxbool readwrite_chr_file))

                  (macro readwrite_selinuxbool_dirs ((type ARG1))
                         (allow ARG1 selinuxbool readwrite_dir))

                  (macro readwrite_selinuxbool_fifo_files ((type ARG1))
                         (allow ARG1 selinuxbool readwrite_fifo_file))

                  (macro readwrite_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool readwrite_file))

                  (macro readwriteinherited_selinuxbool_blk_files ((type ARG1))
                         (allow ARG1 selinuxbool readwriteinherited_blk_file))

                  (macro readwriteinherited_selinuxbool_chr_files ((type ARG1))
                         (allow ARG1 selinuxbool readwriteinherited_chr_file))

                  (macro readwriteinherited_selinuxbool_dirs ((type ARG1))
                         (allow ARG1 selinuxbool readwriteinherited_dir))

                  (macro readwriteinherited_selinuxbool_fifo_files ((type ARG1))
                         (allow ARG1 selinuxbool readwriteinherited_fifo_file))

                  (macro readwriteinherited_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool readwriteinherited_file))

                  (macro readwriteinherited_selinuxbool_sock_files ((type ARG1))
                         (allow ARG1 selinuxbool readwriteinherited_sock_file))

                  (macro readwrite_selinuxbool_lnk_files ((type ARG1))
                         (allow ARG1 selinuxbool readwrite_lnk_file))

                  (macro readwrite_selinuxbool_sock_files ((type ARG1))
                         (allow ARG1 selinuxbool readwrite_sock_file))

                  (macro relabel_selinuxbool ((type ARG1))
                         (allow ARG1 selinuxbool (allfiles (relabel))))

                  (macro relabel_selinuxbool_blk_files ((type ARG1))
                         (allow ARG1 selinuxbool relabel_blk_file))

                  (macro relabel_selinuxbool_chr_files ((type ARG1))
                         (allow ARG1 selinuxbool relabel_chr_file))

                  (macro relabel_selinuxbool_dirs ((type ARG1))
                         (allow ARG1 selinuxbool relabel_dir))

                  (macro relabel_selinuxbool_fifo_files ((type ARG1))
                         (allow ARG1 selinuxbool relabel_fifo_file))

                  (macro relabel_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool relabel_file))

                  (macro relabel_selinuxbool_lnk_files ((type ARG1))
                         (allow ARG1 selinuxbool relabel_lnk_file))

                  (macro relabel_selinuxbool_sock_files ((type ARG1))
                         (allow ARG1 selinuxbool relabel_sock_file))

                  (macro relabelfrom_selinuxbool ((type ARG1))
                         (allow ARG1 selinuxbool (allfiles (relabelfrom))))

                  (macro relabelfrom_selinuxbool_blk_files ((type ARG1))
                         (allow ARG1 selinuxbool relabelfrom_blk_file))

                  (macro relabelfrom_selinuxbool_chr_files ((type ARG1))
                         (allow ARG1 selinuxbool relabelfrom_chr_file))

                  (macro relabelfrom_selinuxbool_dirs ((type ARG1))
                         (allow ARG1 selinuxbool relabelfrom_dir))

                  (macro relabelfrom_selinuxbool_fifo_files ((type ARG1))
                         (allow ARG1 selinuxbool relabelfrom_fifo_file))

                  (macro relabelfrom_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool relabelfrom_file))

                  (macro relabelfrom_selinuxbool_lnk_files ((type ARG1))
                         (allow ARG1 selinuxbool relabelfrom_lnk_file))

                  (macro relabelfrom_selinuxbool_sock_files ((type ARG1))
                         (allow ARG1 selinuxbool relabelfrom_sock_file))

                  (macro relabelto_selinuxbool ((type ARG1))
                         (allow ARG1 selinuxbool (allfiles (relabelto))))

                  (macro relabelto_selinuxbool_blk_files ((type ARG1))
                         (allow ARG1 selinuxbool relabelto_blk_file))

                  (macro relabelto_selinuxbool_chr_files ((type ARG1))
                         (allow ARG1 selinuxbool relabelto_chr_file))

                  (macro relabelto_selinuxbool_dirs ((type ARG1))
                         (allow ARG1 selinuxbool relabelto_dir))

                  (macro relabelto_selinuxbool_fifo_files ((type ARG1))
                         (allow ARG1 selinuxbool relabelto_fifo_file))

                  (macro relabelto_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool relabelto_file))

                  (macro relabelto_selinuxbool_lnk_files ((type ARG1))
                         (allow ARG1 selinuxbool relabelto_lnk_file))

                  (macro relabelto_selinuxbool_sock_files ((type ARG1))
                         (allow ARG1 selinuxbool relabelto_sock_file))

                  (macro rename_selinuxbool ((type ARG1))
                         (allow ARG1 selinuxbool (allfiles (rename))))

                  (macro rename_selinuxbool_blk_files ((type ARG1))
                         (allow ARG1 selinuxbool rename_blk_file))

                  (macro rename_selinuxbool_chr_files ((type ARG1))
                         (allow ARG1 selinuxbool rename_chr_file))

                  (macro rename_selinuxbool_dirs ((type ARG1))
                         (allow ARG1 selinuxbool rename_dir))

                  (macro rename_selinuxbool_fifo_files ((type ARG1))
                         (allow ARG1 selinuxbool rename_fifo_file))

                  (macro rename_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool rename_file))

                  (macro rename_selinuxbool_lnk_files ((type ARG1))
                         (allow ARG1 selinuxbool rename_lnk_file))

                  (macro rename_selinuxbool_sock_files ((type ARG1))
                         (allow ARG1 selinuxbool rename_sock_file))

                  (macro search_selinuxbool_dirs ((type ARG1))
                         (allow ARG1 selinuxbool search_dir))

                  (macro selinuxbool_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 selinuxbool ARG3 ARG4 ARG2)
                         (call addname_selinuxbool_dirs (ARG1)))

                  (macro set_selinuxbools ((type ARG1))
                         (allow ARG1 .selinux (security (setbool)))

                         (call readwrite_selinuxbool_files (ARG1))

                         (call .selinux.list_fs_dirs (ARG1))
                         (call .selinux.readwrite_fs_files (ARG1)))

                  (macro write_selinuxbool ((type ARG1))
                         (allow ARG1 selinuxbool (allfiles (write))))

                  (macro write_selinuxbool_blk_files ((type ARG1))
                         (allow ARG1 selinuxbool write_blk_file))

                  (macro write_selinuxbool_chr_files ((type ARG1))
                         (allow ARG1 selinuxbool write_chr_file))

                  (macro write_selinuxbool_dirs ((type ARG1))
                         (allow ARG1 selinuxbool write_dir))

                  (macro write_selinuxbool_fifo_files ((type ARG1))
                         (allow ARG1 selinuxbool write_fifo_file))

                  (macro write_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool write_file))

                  (macro writeinherited_selinuxbool_blk_files ((type ARG1))
                         (allow ARG1 selinuxbool writeinherited_blk_file))

                  (macro writeinherited_selinuxbool_chr_files ((type ARG1))
                         (allow ARG1 selinuxbool writeinherited_chr_file))

                  (macro writeinherited_selinuxbool_dirs ((type ARG1))
                         (allow ARG1 selinuxbool writeinherited_dir))

                  (macro writeinherited_selinuxbool_fifo_files ((type ARG1))
                         (allow ARG1 selinuxbool writeinherited_fifo_file))

                  (macro writeinherited_selinuxbool_files ((type ARG1))
                         (allow ARG1 selinuxbool writeinherited_file))

                  (macro writeinherited_selinuxbool_sock_files ((type ARG1))
                         (allow ARG1 selinuxbool writeinherited_sock_file))

                  (macro write_selinuxbool_lnk_files ((type ARG1))
                         (allow ARG1 selinuxbool write_lnk_file))

                  (macro write_selinuxbool_sock_files ((type ARG1))
                         (allow ARG1 selinuxbool write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .selinux.bool.obj_base_template)
                  (blockinherit .selinux.bool.obj_macro_template))

           (block exceptloadpolicy

                  ;;
                  ;; Policy
                  ;;

                  (blockinherit .file.obj_all_macro_template)

                  (typeattributeset
                   obj_typeattr
                   (and
                    bool.obj_typeattr
                    (not
                     load_policy.selinuxbool))))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block net

       (block unconfined

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block pstorefile

       ;;
       ;; Policy
       ;;

       (blockinherit .file.obj_all_macro_template)

       (call .file.obj_type (obj_typeattr))

       (call .pstore.associate_filesystems (obj_typeattr))

       ;;
       ;; Templates
       ;;

       (block obj_base_template

              ;;
              ;; Contexts
              ;;

              (context
               pstorefile_file_context
               (.u
                .r
                pstorefile
                (systemlow
                 systemlow)))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_base_template)

              (type
               pstorefile)

              (call .pstorefile.obj_type (pstorefile)))

       (block obj_macro_template

              ;;
              ;; Macros
              ;;

              (macro addname_pstorefile_dirs ((type ARG1))
                     (allow ARG1 pstorefile addname_dir))

              (macro append_pstorefile_blk_files ((type ARG1))
                     (allow ARG1 pstorefile append_blk_file))

              (macro append_pstorefile_chr_files ((type ARG1))
                     (allow ARG1 pstorefile append_chr_file))

              (macro append_pstorefile_fifo_files ((type ARG1))
                     (allow ARG1 pstorefile append_fifo_file))

              (macro append_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile append_file))

              (macro appendinherited_pstorefile_blk_files ((type ARG1))
                     (allow ARG1 pstorefile appendinherited_blk_file))

              (macro appendinherited_pstorefile_chr_files ((type ARG1))
                     (allow ARG1 pstorefile appendinherited_chr_file))

              (macro appendinherited_pstorefile_fifo_files ((type ARG1))
                     (allow ARG1 pstorefile appendinherited_fifo_file))

              (macro appendinherited_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile appendinherited_file))

              (macro pstorefile_obj_type_transition
                     ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                     (typetransition ARG1 pstorefile ARG3 ARG4 ARG2)
                     (call addname_pstorefile_dirs (ARG1)))

              (macro create_pstorefile ((type ARG1))
                     (allow ARG1 pstorefile (allfiles (create))))

              (macro create_pstorefile_blk_files ((type ARG1))
                     (allow ARG1 pstorefile create_blk_file))

              (macro create_pstorefile_chr_files ((type ARG1))
                     (allow ARG1 pstorefile create_chr_file))

              (macro create_pstorefile_dirs ((type ARG1))
                     (allow ARG1 pstorefile create_dir))

              (macro create_pstorefile_fifo_files ((type ARG1))
                     (allow ARG1 pstorefile create_fifo_file))

              (macro create_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile create_file))

              (macro create_pstorefile_lnk_files ((type ARG1))
                     (allow ARG1 pstorefile create_lnk_file))

              (macro create_pstorefile_sock_files ((type ARG1))
                     (allow ARG1 pstorefile create_sock_file))

              (macro deletename_pstorefile_dirs ((type ARG1))
                     (allow ARG1 pstorefile deletename_dir))

              (macro delete_pstorefile ((type ARG1))
                     (allow ARG1 pstorefile (allfiles (delete))))

              (macro delete_pstorefile_blk_files ((type ARG1))
                     (allow ARG1 pstorefile delete_blk_file))

              (macro delete_pstorefile_chr_files ((type ARG1))
                     (allow ARG1 pstorefile delete_chr_file))

              (macro delete_pstorefile_dirs ((type ARG1))
                     (allow ARG1 pstorefile delete_dir))

              (macro delete_pstorefile_fifo_files ((type ARG1))
                     (allow ARG1 pstorefile delete_fifo_file))

              (macro delete_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile delete_file))

              (macro delete_pstorefile_lnk_files ((type ARG1))
                     (allow ARG1 pstorefile delete_lnk_file))

              (macro delete_pstorefile_sock_files ((type ARG1))
                     (allow ARG1 pstorefile delete_sock_file))

              (macro execute_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile execute_file))

              (macro list_pstorefile_dirs ((type ARG1))
                     (allow ARG1 pstorefile list_dir))

              (macro listinherited_pstorefile_dirs ((type ARG1))
                     (allow ARG1 pstorefile listinherited_dir))

              (macro manage_pstorefile ((type ARG1))
                     (allow ARG1 pstorefile (allfiles (manage))))

              (macro manage_pstorefile_blk_files ((type ARG1))
                     (allow ARG1 pstorefile manage_blk_file))

              (macro manage_pstorefile_chr_files ((type ARG1))
                     (allow ARG1 pstorefile manage_chr_file))

              (macro manage_pstorefile_dirs ((type ARG1))
                     (allow ARG1 pstorefile manage_dir))

              (macro manage_pstorefile_fifo_files ((type ARG1))
                     (allow ARG1 pstorefile manage_fifo_file))

              (macro manage_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile manage_file))

              (macro manage_pstorefile_lnk_files ((type ARG1))
                     (allow ARG1 pstorefile manage_lnk_file))

              (macro manage_pstorefile_sock_files ((type ARG1))
                     (allow ARG1 pstorefile manage_sock_file))

              (macro mapexecute_pstorefile_chr_files ((type ARG1))
                     (allow ARG1 pstorefile mapexecute_chr_file))

              (macro mapexecute_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile mapexecute_file))

              (macro mounton_pstorefile ((type ARG1))
                     (allow ARG1 pstorefile (allfiles (mounton))))

              (macro mounton_pstorefile_blk_files ((type ARG1))
                     (allow ARG1 pstorefile mounton_blk_file))

              (macro mounton_pstorefile_chr_files ((type ARG1))
                     (allow ARG1 pstorefile mounton_chr_file))

              (macro mounton_pstorefile_dirs ((type ARG1))
                     (allow ARG1 pstorefile mounton_dir))

              (macro mounton_pstorefile_fifo_files ((type ARG1))
                     (allow ARG1 pstorefile mounton_fifo_file))

              (macro mounton_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile mounton_file))

              (macro mounton_pstorefile_lnk_files ((type ARG1))
                     (allow ARG1 pstorefile mounton_lnk_file))

              (macro mounton_pstorefile_sock_files ((type ARG1))
                     (allow ARG1 pstorefile mounton_sock_file))

              (macro read_pstorefile ((type ARG1))
                     (allow ARG1 pstorefile (allfiles (read))))

              (macro read_pstorefile_blk_files ((type ARG1))
                     (allow ARG1 pstorefile read_blk_file))

              (macro read_pstorefile_chr_files ((type ARG1))
                     (allow ARG1 pstorefile read_chr_file))

              (macro read_pstorefile_fifo_files ((type ARG1))
                     (allow ARG1 pstorefile read_fifo_file))

              (macro read_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile read_file))

              (macro read_pstorefile_lnk_files ((type ARG1))
                     (allow ARG1 pstorefile read_lnk_file))

              (macro read_pstorefile_sock_files ((type ARG1))
                     (allow ARG1 pstorefile read_sock_file))

              (macro readinherited_pstorefile_blk_files ((type ARG1))
                     (allow ARG1 pstorefile readinherited_blk_file))

              (macro readinherited_pstorefile_chr_files ((type ARG1))
                     (allow ARG1 pstorefile readinherited_chr_file))

              (macro readinherited_pstorefile_fifo_files ((type ARG1))
                     (allow ARG1 pstorefile readinherited_fifo_file))

              (macro readinherited_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile readinherited_file))

              (macro readinherited_pstorefile_sock_files ((type ARG1))
                     (allow ARG1 pstorefile readinherited_sock_file))

              (macro readwrite_pstorefile ((type ARG1))
                     (allow ARG1 pstorefile (allfiles (readwrite))))

              (macro readwrite_pstorefile_blk_files ((type ARG1))
                     (allow ARG1 pstorefile readwrite_blk_file))

              (macro readwrite_pstorefile_chr_files ((type ARG1))
                     (allow ARG1 pstorefile readwrite_chr_file))

              (macro readwrite_pstorefile_dirs ((type ARG1))
                     (allow ARG1 pstorefile readwrite_dir))

              (macro readwrite_pstorefile_fifo_files ((type ARG1))
                     (allow ARG1 pstorefile readwrite_fifo_file))

              (macro readwrite_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile readwrite_file))

              (macro readwrite_pstorefile_lnk_files ((type ARG1))
                     (allow ARG1 pstorefile readwrite_lnk_file))

              (macro readwrite_pstorefile_sock_files ((type ARG1))
                     (allow ARG1 pstorefile readwrite_sock_file))

              (macro readwriteinherited_pstorefile_blk_files ((type ARG1))
                     (allow ARG1 pstorefile readwriteinherited_blk_file))

              (macro readwriteinherited_pstorefile_chr_files ((type ARG1))
                     (allow ARG1 pstorefile readwriteinherited_chr_file))

              (macro readwriteinherited_pstorefile_dirs ((type ARG1))
                     (allow ARG1 pstorefile readwriteinherited_dir))

              (macro readwriteinherited_pstorefile_fifo_files ((type ARG1))
                     (allow ARG1 pstorefile readwriteinherited_fifo_file))

              (macro readwriteinherited_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile readwriteinherited_file))

              (macro readwriteinherited_pstorefile_sock_files ((type ARG1))
                     (allow ARG1 pstorefile readwriteinherited_sock_file))

              (macro relabel_pstorefile ((type ARG1))
                     (allow ARG1 pstorefile (allfiles (relabel))))

              (macro relabel_pstorefile_blk_files ((type ARG1))
                     (allow ARG1 pstorefile relabel_blk_file))

              (macro relabel_pstorefile_chr_files ((type ARG1))
                     (allow ARG1 pstorefile relabel_chr_file))

              (macro relabel_pstorefile_dirs ((type ARG1))
                     (allow ARG1 pstorefile relabel_dir))

              (macro relabel_pstorefile_fifo_files ((type ARG1))
                     (allow ARG1 pstorefile relabel_fifo_file))

              (macro relabel_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile relabel_file))

              (macro relabel_pstorefile_lnk_files ((type ARG1))
                     (allow ARG1 pstorefile relabel_lnk_file))

              (macro relabel_pstorefile_sock_files ((type ARG1))
                     (allow ARG1 pstorefile relabel_sock_file))

              (macro relabelfrom_pstorefile ((type ARG1))
                     (allow ARG1 pstorefile (allfiles (relabelfrom))))

              (macro relabelfrom_pstorefile_blk_files ((type ARG1))
                     (allow ARG1 pstorefile relabelfrom_blk_file))

              (macro relabelfrom_pstorefile_chr_files ((type ARG1))
                     (allow ARG1 pstorefile relabelfrom_chr_file))

              (macro relabelfrom_pstorefile_dirs ((type ARG1))
                     (allow ARG1 pstorefile relabelfrom_dir))

              (macro relabelfrom_pstorefile_fifo_files ((type ARG1))
                     (allow ARG1 pstorefile relabelfrom_fifo_file))

              (macro relabelfrom_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile relabelfrom_file))

              (macro relabelfrom_pstorefile_lnk_files ((type ARG1))
                     (allow ARG1 pstorefile relabelfrom_lnk_file))

              (macro relabelfrom_pstorefile_sock_files ((type ARG1))
                     (allow ARG1 pstorefile relabelfrom_sock_file))

              (macro relabelto_pstorefile ((type ARG1))
                     (allow ARG1 pstorefile (allfiles (relabelto))))

              (macro relabelto_pstorefile_blk_files ((type ARG1))
                     (allow ARG1 pstorefile relabelto_blk_file))

              (macro relabelto_pstorefile_chr_files ((type ARG1))
                     (allow ARG1 pstorefile relabelto_chr_file))

              (macro relabelto_pstorefile_dirs ((type ARG1))
                     (allow ARG1 pstorefile relabelto_dir))

              (macro relabelto_pstorefile_fifo_files ((type ARG1))
                     (allow ARG1 pstorefile relabelto_fifo_file))

              (macro relabelto_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile relabelto_file))

              (macro relabelto_pstorefile_lnk_files ((type ARG1))
                     (allow ARG1 pstorefile relabelto_lnk_file))

              (macro relabelto_pstorefile_sock_files ((type ARG1))
                     (allow ARG1 pstorefile relabelto_sock_file))

              (macro rename_pstorefile ((type ARG1))
                     (allow ARG1 pstorefile (allfiles (rename))))

              (macro rename_pstorefile_blk_files ((type ARG1))
                     (allow ARG1 pstorefile rename_blk_file))

              (macro rename_pstorefile_chr_files ((type ARG1))
                     (allow ARG1 pstorefile rename_chr_file))

              (macro rename_pstorefile_dirs ((type ARG1))
                     (allow ARG1 pstorefile rename_dir))

              (macro rename_pstorefile_fifo_files ((type ARG1))
                     (allow ARG1 pstorefile rename_fifo_file))

              (macro rename_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile rename_file))

              (macro rename_pstorefile_lnk_files ((type ARG1))
                     (allow ARG1 pstorefile rename_lnk_file))

              (macro rename_pstorefile_sock_files ((type ARG1))
                     (allow ARG1 pstorefile rename_sock_file))

              (macro search_pstorefile_dirs ((type ARG1))
                     (allow ARG1 pstorefile search_dir))

              (macro write_pstorefile ((type ARG1))
                     (allow ARG1 pstorefile (allfiles (write))))

              (macro write_pstorefile_blk_files ((type ARG1))
                     (allow ARG1 pstorefile write_blk_file))

              (macro write_pstorefile_chr_files ((type ARG1))
                     (allow ARG1 pstorefile write_chr_file))

              (macro write_pstorefile_dirs ((type ARG1))
                     (allow ARG1 pstorefile write_dir))

              (macro write_pstorefile_fifo_files ((type ARG1))
                     (allow ARG1 pstorefile write_fifo_file))

              (macro write_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile write_file))

              (macro write_pstorefile_lnk_files ((type ARG1))
                     (allow ARG1 pstorefile write_lnk_file))

              (macro write_pstorefile_sock_files ((type ARG1))
                     (allow ARG1 pstorefile write_sock_file))

              (macro writeinherited_pstorefile_blk_files ((type ARG1))
                     (allow ARG1 pstorefile writeinherited_blk_file))

              (macro writeinherited_pstorefile_chr_files ((type ARG1))
                     (allow ARG1 pstorefile writeinherited_chr_file))

              (macro writeinherited_pstorefile_dirs ((type ARG1))
                     (allow ARG1 pstorefile writeinherited_dir))

              (macro writeinherited_pstorefile_fifo_files ((type ARG1))
                     (allow ARG1 pstorefile writeinherited_fifo_file))

              (macro writeinherited_pstorefile_files ((type ARG1))
                     (allow ARG1 pstorefile writeinherited_file))

              (macro writeinherited_pstorefile_sock_files ((type ARG1))
                     (allow ARG1 pstorefile writeinherited_sock_file))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_macro_template))

       (block obj_template

              ;;
              ;; Policy
              ;;

              (blockabstract obj_template)

              (blockinherit .pstorefile.obj_base_template)
              (blockinherit .pstorefile.obj_macro_template)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block rootfile

       ;;
       ;; Policy
       ;;

       (blockinherit .file.obj_all_macro_template)

       (call .file.obj_type (obj_typeattr))

       (call .root.associate_filesystems (obj_typeattr))

       ;;
       ;; Templates
       ;;

       (block obj_base_template

              ;;
              ;; Contexts
              ;;

              (context
               rootfile_file_context
               (.u
                .r
                rootfile
                (systemlow
                 systemlow)))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_base_template)

              (type
               rootfile)

              (call .rootfile.obj_type (rootfile)))

       (block obj_macro_template

              ;;
              ;; Macros
              ;;

              (macro addname_rootfile_dirs ((type ARG1))
                     (allow ARG1 rootfile addname_dir))

              (macro append_rootfile_blk_files ((type ARG1))
                     (allow ARG1 rootfile append_blk_file))

              (macro append_rootfile_chr_files ((type ARG1))
                     (allow ARG1 rootfile append_chr_file))

              (macro append_rootfile_fifo_files ((type ARG1))
                     (allow ARG1 rootfile append_fifo_file))

              (macro append_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile append_file))

              (macro appendinherited_rootfile_blk_files ((type ARG1))
                     (allow ARG1 rootfile appendinherited_blk_file))

              (macro appendinherited_rootfile_chr_files ((type ARG1))
                     (allow ARG1 rootfile appendinherited_chr_file))

              (macro appendinherited_rootfile_fifo_files ((type ARG1))
                     (allow ARG1 rootfile appendinherited_fifo_file))

              (macro appendinherited_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile appendinherited_file))

              (macro create_rootfile ((type ARG1))
                     (allow ARG1 rootfile (allfiles (create))))

              (macro create_rootfile_blk_files ((type ARG1))
                     (allow ARG1 rootfile create_blk_file))

              (macro create_rootfile_chr_files ((type ARG1))
                     (allow ARG1 rootfile create_chr_file))

              (macro create_rootfile_dirs ((type ARG1))
                     (allow ARG1 rootfile create_dir))

              (macro create_rootfile_fifo_files ((type ARG1))
                     (allow ARG1 rootfile create_fifo_file))

              (macro create_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile create_file))

              (macro create_rootfile_lnk_files ((type ARG1))
                     (allow ARG1 rootfile create_lnk_file))

              (macro create_rootfile_sock_files ((type ARG1))
                     (allow ARG1 rootfile create_sock_file))

              (macro deletename_rootfile_dirs ((type ARG1))
                     (allow ARG1 rootfile deletename_dir))

              (macro delete_rootfile ((type ARG1))
                     (allow ARG1 rootfile (allfiles (delete))))

              (macro delete_rootfile_blk_files ((type ARG1))
                     (allow ARG1 rootfile delete_blk_file))

              (macro delete_rootfile_chr_files ((type ARG1))
                     (allow ARG1 rootfile delete_chr_file))

              (macro delete_rootfile_dirs ((type ARG1))
                     (allow ARG1 rootfile delete_dir))

              (macro delete_rootfile_fifo_files ((type ARG1))
                     (allow ARG1 rootfile delete_fifo_file))

              (macro delete_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile delete_file))

              (macro delete_rootfile_lnk_files ((type ARG1))
                     (allow ARG1 rootfile delete_lnk_file))

              (macro delete_rootfile_sock_files ((type ARG1))
                     (allow ARG1 rootfile delete_sock_file))

              (macro execute_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile execute_file))

              (macro list_rootfile_dirs ((type ARG1))
                     (allow ARG1 rootfile list_dir))

              (macro listinherited_rootfile_dirs ((type ARG1))
                     (allow ARG1 rootfile listinherited_dir))

              (macro manage_rootfile ((type ARG1))
                     (allow ARG1 rootfile (allfiles (manage))))

              (macro manage_rootfile_blk_files ((type ARG1))
                     (allow ARG1 rootfile manage_blk_file))

              (macro manage_rootfile_chr_files ((type ARG1))
                     (allow ARG1 rootfile manage_chr_file))

              (macro manage_rootfile_dirs ((type ARG1))
                     (allow ARG1 rootfile manage_dir))

              (macro manage_rootfile_fifo_files ((type ARG1))
                     (allow ARG1 rootfile manage_fifo_file))

              (macro manage_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile manage_file))

              (macro manage_rootfile_lnk_files ((type ARG1))
                     (allow ARG1 rootfile manage_lnk_file))

              (macro manage_rootfile_sock_files ((type ARG1))
                     (allow ARG1 rootfile manage_sock_file))

              (macro mapexecute_rootfile_chr_files ((type ARG1))
                     (allow ARG1 rootfile mapexecute_chr_file))

              (macro mapexecute_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile mapexecute_file))

              (macro mounton_rootfile ((type ARG1))
                     (allow ARG1 rootfile (allfiles (mounton))))

              (macro mounton_rootfile_blk_files ((type ARG1))
                     (allow ARG1 rootfile mounton_blk_file))

              (macro mounton_rootfile_chr_files ((type ARG1))
                     (allow ARG1 rootfile mounton_chr_file))

              (macro mounton_rootfile_dirs ((type ARG1))
                     (allow ARG1 rootfile mounton_dir))

              (macro mounton_rootfile_fifo_files ((type ARG1))
                     (allow ARG1 rootfile mounton_fifo_file))

              (macro mounton_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile mounton_file))

              (macro mounton_rootfile_lnk_files ((type ARG1))
                     (allow ARG1 rootfile mounton_lnk_file))

              (macro mounton_rootfile_sock_files ((type ARG1))
                     (allow ARG1 rootfile mounton_sock_file))

              (macro read_rootfile ((type ARG1))
                     (allow ARG1 rootfile (allfiles (read))))

              (macro read_rootfile_blk_files ((type ARG1))
                     (allow ARG1 rootfile read_blk_file))

              (macro read_rootfile_chr_files ((type ARG1))
                     (allow ARG1 rootfile read_chr_file))

              (macro read_rootfile_fifo_files ((type ARG1))
                     (allow ARG1 rootfile read_fifo_file))

              (macro read_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile read_file))

              (macro readinherited_rootfile_blk_files ((type ARG1))
                     (allow ARG1 rootfile readinherited_blk_file))

              (macro readinherited_rootfile_chr_files ((type ARG1))
                     (allow ARG1 rootfile readinherited_chr_file))

              (macro readinherited_rootfile_fifo_files ((type ARG1))
                     (allow ARG1 rootfile readinherited_fifo_file))

              (macro readinherited_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile readinherited_file))

              (macro readinherited_rootfile_sock_files ((type ARG1))
                     (allow ARG1 rootfile readinherited_sock_file))

              (macro read_rootfile_lnk_files ((type ARG1))
                     (allow ARG1 rootfile read_lnk_file))

              (macro read_rootfile_sock_files ((type ARG1))
                     (allow ARG1 rootfile read_sock_file))

              (macro readwrite_rootfile ((type ARG1))
                     (allow ARG1 rootfile (allfiles (readwrite))))

              (macro readwrite_rootfile_blk_files ((type ARG1))
                     (allow ARG1 rootfile readwrite_blk_file))

              (macro readwrite_rootfile_chr_files ((type ARG1))
                     (allow ARG1 rootfile readwrite_chr_file))

              (macro readwrite_rootfile_dirs ((type ARG1))
                     (allow ARG1 rootfile readwrite_dir))

              (macro readwrite_rootfile_fifo_files ((type ARG1))
                     (allow ARG1 rootfile readwrite_fifo_file))

              (macro readwrite_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile readwrite_file))

              (macro readwriteinherited_rootfile_blk_files ((type ARG1))
                     (allow ARG1 rootfile readwriteinherited_blk_file))

              (macro readwriteinherited_rootfile_chr_files ((type ARG1))
                     (allow ARG1 rootfile readwriteinherited_chr_file))

              (macro readwriteinherited_rootfile_dirs ((type ARG1))
                     (allow ARG1 rootfile readwriteinherited_dir))

              (macro readwriteinherited_rootfile_fifo_files ((type ARG1))
                     (allow ARG1 rootfile readwriteinherited_fifo_file))

              (macro readwriteinherited_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile readwriteinherited_file))

              (macro readwriteinherited_rootfile_sock_files ((type ARG1))
                     (allow ARG1 rootfile readwriteinherited_sock_file))

              (macro readwrite_rootfile_lnk_files ((type ARG1))
                     (allow ARG1 rootfile readwrite_lnk_file))

              (macro readwrite_rootfile_sock_files ((type ARG1))
                     (allow ARG1 rootfile readwrite_sock_file))

              (macro relabel_rootfile ((type ARG1))
                     (allow ARG1 rootfile (allfiles (relabel))))

              (macro relabel_rootfile_blk_files ((type ARG1))
                     (allow ARG1 rootfile relabel_blk_file))

              (macro relabel_rootfile_chr_files ((type ARG1))
                     (allow ARG1 rootfile relabel_chr_file))

              (macro relabel_rootfile_dirs ((type ARG1))
                     (allow ARG1 rootfile relabel_dir))

              (macro relabel_rootfile_fifo_files ((type ARG1))
                     (allow ARG1 rootfile relabel_fifo_file))

              (macro relabel_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile relabel_file))

              (macro relabel_rootfile_lnk_files ((type ARG1))
                     (allow ARG1 rootfile relabel_lnk_file))

              (macro relabel_rootfile_sock_files ((type ARG1))
                     (allow ARG1 rootfile relabel_sock_file))

              (macro relabelfrom_rootfile ((type ARG1))
                     (allow ARG1 rootfile (allfiles (relabelfrom))))

              (macro relabelfrom_rootfile_blk_files ((type ARG1))
                     (allow ARG1 rootfile relabelfrom_blk_file))

              (macro relabelfrom_rootfile_chr_files ((type ARG1))
                     (allow ARG1 rootfile relabelfrom_chr_file))

              (macro relabelfrom_rootfile_dirs ((type ARG1))
                     (allow ARG1 rootfile relabelfrom_dir))

              (macro relabelfrom_rootfile_fifo_files ((type ARG1))
                     (allow ARG1 rootfile relabelfrom_fifo_file))

              (macro relabelfrom_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile relabelfrom_file))

              (macro relabelfrom_rootfile_lnk_files ((type ARG1))
                     (allow ARG1 rootfile relabelfrom_lnk_file))

              (macro relabelfrom_rootfile_sock_files ((type ARG1))
                     (allow ARG1 rootfile relabelfrom_sock_file))

              (macro relabelto_rootfile ((type ARG1))
                     (allow ARG1 rootfile (allfiles (relabelto))))

              (macro relabelto_rootfile_blk_files ((type ARG1))
                     (allow ARG1 rootfile relabelto_blk_file))

              (macro relabelto_rootfile_chr_files ((type ARG1))
                     (allow ARG1 rootfile relabelto_chr_file))

              (macro relabelto_rootfile_dirs ((type ARG1))
                     (allow ARG1 rootfile relabelto_dir))

              (macro relabelto_rootfile_fifo_files ((type ARG1))
                     (allow ARG1 rootfile relabelto_fifo_file))

              (macro relabelto_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile relabelto_file))

              (macro relabelto_rootfile_lnk_files ((type ARG1))
                     (allow ARG1 rootfile relabelto_lnk_file))

              (macro relabelto_rootfile_sock_files ((type ARG1))
                     (allow ARG1 rootfile relabelto_sock_file))

              (macro rename_rootfile ((type ARG1))
                     (allow ARG1 rootfile (allfiles (rename))))

              (macro rename_rootfile_blk_files ((type ARG1))
                     (allow ARG1 rootfile rename_blk_file))

              (macro rename_rootfile_chr_files ((type ARG1))
                     (allow ARG1 rootfile rename_chr_file))

              (macro rename_rootfile_dirs ((type ARG1))
                     (allow ARG1 rootfile rename_dir))

              (macro rename_rootfile_fifo_files ((type ARG1))
                     (allow ARG1 rootfile rename_fifo_file))

              (macro rename_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile rename_file))

              (macro rename_rootfile_lnk_files ((type ARG1))
                     (allow ARG1 rootfile rename_lnk_file))

              (macro rename_rootfile_sock_files ((type ARG1))
                     (allow ARG1 rootfile rename_sock_file))

              (macro rootfile_obj_type_transition
                     ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                     (typetransition ARG1 rootfile ARG3 ARG4 ARG2)
                     (call addname_rootfile_dirs (ARG1)))

              (macro search_rootfile_dirs ((type ARG1))
                     (allow ARG1 rootfile search_dir))

              (macro write_rootfile ((type ARG1))
                     (allow ARG1 rootfile (allfiles (write))))

              (macro write_rootfile_blk_files ((type ARG1))
                     (allow ARG1 rootfile write_blk_file))

              (macro write_rootfile_chr_files ((type ARG1))
                     (allow ARG1 rootfile write_chr_file))

              (macro write_rootfile_dirs ((type ARG1))
                     (allow ARG1 rootfile write_dir))

              (macro write_rootfile_fifo_files ((type ARG1))
                     (allow ARG1 rootfile write_fifo_file))

              (macro write_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile write_file))

              (macro writeinherited_rootfile_blk_files ((type ARG1))
                     (allow ARG1 rootfile writeinherited_blk_file))

              (macro writeinherited_rootfile_chr_files ((type ARG1))
                     (allow ARG1 rootfile writeinherited_chr_file))

              (macro writeinherited_rootfile_dirs ((type ARG1))
                     (allow ARG1 rootfile writeinherited_dir))

              (macro writeinherited_rootfile_fifo_files ((type ARG1))
                     (allow ARG1 rootfile writeinherited_fifo_file))

              (macro writeinherited_rootfile_files ((type ARG1))
                     (allow ARG1 rootfile writeinherited_file))

              (macro writeinherited_rootfile_sock_files ((type ARG1))
                     (allow ARG1 rootfile writeinherited_sock_file))

              (macro write_rootfile_lnk_files ((type ARG1))
                     (allow ARG1 rootfile write_lnk_file))

              (macro write_rootfile_sock_files ((type ARG1))
                     (allow ARG1 rootfile write_sock_file))

              ;;
              ;; Policy
              ;;

              (blockabstract obj_macro_template))

       (block obj_template

              ;;
              ;; Policy
              ;;

              (blockabstract obj_template)

              (blockinherit .rootfile.obj_base_template)
              (blockinherit .rootfile.obj_macro_template)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(sid
 unlabeled)

;;
;; Contexts
;;

(sidcontext
 any_socket
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))
(sidcontext
 file_labels
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))
(sidcontext
 fs
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))
(sidcontext
 icmp_socket
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))
(sidcontext
 igmp_packet
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))
(sidcontext
 init
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))
(sidcontext
 kmod
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))
(sidcontext
 policy
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))
(sidcontext
 scmp_packet
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))
(sidcontext
 sysctl
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))
(sidcontext
sysctl_dev
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))
(sidcontext
 sysctl_fs
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))
(sidcontext
 sysctl_kernel
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))
(sidcontext
 sysctl_modprobe
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))
(sidcontext
 sysctl_net
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))
(sidcontext
 sysctl_net_unix
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))
(sidcontext
 sysctl_vm
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))
(sidcontext
 tcp_socket
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))

(sidcontext
 unlabeled
 (.u
  .r
  .invalid
  (systemlow
   systemlow)))

;;
;; Macros
;;

(macro access_invalid_netpkeys ((type ARG1))
       (allow ARG1 .invalid (infiniband_pkey (access))))

(macro addname_invalid_dirs ((type ARG1))
       (allow ARG1 .invalid addname_dir))

(macro append_invalid_blk_files ((type ARG1))
       (allow ARG1 .invalid append_blk_file))

(macro append_invalid_chr_files ((type ARG1))
       (allow ARG1 .invalid append_chr_file))

(macro append_invalid_fifo_files ((type ARG1))
       (allow ARG1 .invalid append_fifo_file))

(macro append_invalid_files ((type ARG1))
       (allow ARG1 .invalid append_file))

(macro appendinherited_invalid_blk_files ((type ARG1))
       (allow ARG1 .invalid appendinherited_blk_file))

(macro appendinherited_invalid_chr_files ((type ARG1))
       (allow ARG1 .invalid appendinherited_chr_file))

(macro appendinherited_invalid_fifo_files ((type ARG1))
       (allow ARG1 .invalid appendinherited_fifo_file))

(macro appendinherited_invalid_files ((type ARG1))
       (allow ARG1 .invalid appendinherited_file))

(macro associate_invalid_filesystems ((type ARG1))
       (allow ARG1 .invalid (filesystem (associate))))

(macro associate_invalid_sctp_sockets ((type ARG1))
       (allow ARG1 .invalid (sctp_socket (association))))

(macro create_invalid ((type ARG1))
       (allow ARG1 .invalid (allfiles (create))))

(macro create_invalid_blk_files ((type ARG1))
       (allow ARG1 .invalid create_blk_file))

(macro create_invalid_chr_files ((type ARG1))
       (allow ARG1 .invalid create_chr_file))

(macro create_invalid_dirs ((type ARG1))
       (allow ARG1 .invalid create_dir))

(macro create_invalid_fifo_files ((type ARG1))
       (allow ARG1 .invalid create_fifo_file))

(macro create_invalid_files ((type ARG1))
       (allow ARG1 .invalid create_file))

(macro create_invalid_lnk_files ((type ARG1))
       (allow ARG1 .invalid create_lnk_file))

(macro create_invalid_sock_files ((type ARG1))
       (allow ARG1 .invalid create_sock_file))

(macro dccp_bind_invalid_netnodes ((type ARG1))
       (allow ARG1 .invalid (dccp_socket (node_bind))))

(macro dccp_bind_invalid_netports ((type ARG1))
       (allow ARG1 .invalid (dccp_socket (name_bind))))

(macro dccp_connect_invalid_netports ((type ARG1))
       (allow ARG1 .invalid (dccp_socket (name_connect))))

(macro deletename_invalid_dirs ((type ARG1))
       (allow ARG1 .invalid deletename_dir))

(macro delete_invalid ((type ARG1))
       (allow ARG1 .invalid (allfiles (delete))))

(macro delete_invalid_blk_files ((type ARG1))
       (allow ARG1 .invalid delete_blk_file))

(macro delete_invalid_chr_files ((type ARG1))
       (allow ARG1 .invalid delete_chr_file))

(macro delete_invalid_dirs ((type ARG1))
       (allow ARG1 .invalid delete_dir))

(macro delete_invalid_fifo_files ((type ARG1))
       (allow ARG1 .invalid delete_fifo_file))

(macro delete_invalid_files ((type ARG1))
       (allow ARG1 .invalid delete_file))

(macro delete_invalid_lnk_files ((type ARG1))
       (allow ARG1 .invalid delete_lnk_file))

(macro delete_invalid_sock_files ((type ARG1))
       (allow ARG1 .invalid delete_sock_file))

(macro egress_invalid_netifs ((type ARG1))
       (allow ARG1 .invalid (netif (egress))))

(macro egressingress_invalid_netifs ((type ARG1))
       (allow ARG1 .invalid (netif (egress ingress))))

(macro execute_invalid_files ((type ARG1))
       (allow ARG1 .invalid execute_file))

(macro forward_invalid_netpackets ((type ARG1))
       (allow ARG1 .invalid (packet (forward_in forward_out))))

(macro forwardin_invalid_netpackets ((type ARG1))
       (allow ARG1 .invalid (packet (forwardin))))

(macro forwardout_invalid_netpackets ((type ARG1))
       (allow ARG1 .invalid (packet (forwardout))))

(macro getattr_invalid_filesystems ((type ARG1))
       (allow ARG1 .invalid (filesystem (getattr))))

(macro icmp_bind_invalid_netnodes ((type ARG1))
       (allow ARG1 .invalid (icmp_socket (node_bind))))

(macro icmp_bind_invalid_netports ((type ARG1))
       (allow ARG1 .invalid (icmp_socket (name_bind))))

(macro ingress_invalid_netifs ((type ARG1))
       (allow ARG1 .invalid (netif (ingress))))

(macro invalid_obj_type_transition
       ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
       (typetransition ARG1 .invalid ARG3 ARG4 ARG2)
       (call addname_invalid_dirs (ARG1)))

(macro list_invalid_dirs ((type ARG1))
       (allow ARG1 .invalid list_dir))

(macro listinherited_invalid_dirs ((type ARG1))
       (allow ARG1 .invalid listinherited_dir))

(macro manage_invalid ((type ARG1))
       (allow ARG1 .invalid (allfiles (manage))))

(macro manage_invalid_blk_files ((type ARG1))
       (allow ARG1 .invalid manage_blk_file))

(macro manage_invalid_chr_files ((type ARG1))
       (allow ARG1 .invalid manage_chr_file))

(macro manage_invalid_dirs ((type ARG1))
       (allow ARG1 .invalid manage_dir))

(macro manage_invalid_fifo_files ((type ARG1))
       (allow ARG1 .invalid manage_fifo_file))

(macro manage_invalid_files ((type ARG1))
       (allow ARG1 .invalid manage_file))

(macro manage_invalid_lnk_files ((type ARG1))
       (allow ARG1 .invalid manage_lnk_file))

(macro manage_invalid_sock_files ((type ARG1))
       (allow ARG1 .invalid manage_sock_file))

(macro managesubnet_invalid_netendports ((type ARG1))
       (allow ARG1 .invalid (infiniband_endport (manage_subnet))))

(macro mapexecute_invalid_chr_files ((type ARG1))
       (allow ARG1 .invalid mapexecute_chr_file))

(macro mapexecute_invalid_files ((type ARG1))
       (allow ARG1 .invalid mapexecute_file))

(macro mount_invalid_filesystems ((type ARG1))
       (allow ARG1 .invalid (filesystem (mount))))

(macro mounton_invalid ((type ARG1))
       (allow ARG1 .invalid (allfiles (mounton))))

(macro mounton_invalid_blk_files ((type ARG1))
       (allow ARG1 .invalid mounton_blk_file))

(macro mounton_invalid_chr_files ((type ARG1))
       (allow ARG1 .invalid mounton_chr_file))

(macro mounton_invalid_dirs ((type ARG1))
       (allow ARG1 .invalid mounton_dir))

(macro mounton_invalid_fifo_files ((type ARG1))
       (allow ARG1 .invalid mounton_fifo_file))

(macro mounton_invalid_files ((type ARG1))
       (allow ARG1 .invalid mounton_file))

(macro mounton_invalid_lnk_files ((type ARG1))
       (allow ARG1 .invalid mounton_lnk_file))

(macro mounton_invalid_sock_files ((type ARG1))
       (allow ARG1 .invalid mounton_sock_file))

(macro polmatchsetcontext_invalid_netspds ((type ARG1))
       (allow ARG1 .invalid (association (polmatch setcontext))))

(macro quotaget_invalid_filesystems ((type ARG1))
       (allow ARG1 .invalid (filesystem (quotaget))))

(macro quotamod_invalid_filesystems ((type ARG1))
       (allow ARG1 .invalid (filesystem (quotamod))))

(macro rawip_bind_invalid_netnodes ((type ARG1))
       (allow ARG1 .invalid (rawip_socket (node_bind))))

(macro rawip_bind_invalid_netports ((type ARG1))
       (allow ARG1 .invalid (rawip_socket (name_bind))))

(macro read_invalid ((type ARG1))
       (allow ARG1 .invalid (allfiles (read))))

(macro read_invalid_blk_files ((type ARG1))
       (allow ARG1 .invalid read_blk_file))

(macro read_invalid_chr_files ((type ARG1))
       (allow ARG1 .invalid read_chr_file))

(macro read_invalid_fifo_files ((type ARG1))
       (allow ARG1 .invalid read_fifo_file))

(macro read_invalid_files ((type ARG1))
       (allow ARG1 .invalid read_file))

(macro readinherited_invalid_blk_files ((type ARG1))
       (allow ARG1 .invalid readinherited_blk_file))

(macro readinherited_invalid_chr_files ((type ARG1))
       (allow ARG1 .invalid readinherited_chr_file))

(macro readinherited_invalid_fifo_files ((type ARG1))
       (allow ARG1 .invalid readinherited_fifo_file))

(macro readinherited_invalid_files ((type ARG1))
       (allow ARG1 .invalid readinherited_file))

(macro readinherited_invalid_sock_files ((type ARG1))
       (allow ARG1 .invalid readinherited_sock_file))

(macro read_invalid_lnk_files ((type ARG1))
       (allow ARG1 .invalid read_lnk_file))

(macro read_invalid_sock_files ((type ARG1))
       (allow ARG1 .invalid read_sock_file))

(macro readwrite_invalid ((type ARG1))
       (allow ARG1 .invalid (allfiles (readwrite))))

(macro readwrite_invalid_blk_files ((type ARG1))
       (allow ARG1 .invalid readwrite_blk_file))

(macro readwrite_invalid_chr_files ((type ARG1))
       (allow ARG1 .invalid readwrite_chr_file))

(macro readwrite_invalid_dirs ((type ARG1))
       (allow ARG1 .invalid readwrite_dir))

(macro readwrite_invalid_fifo_files ((type ARG1))
       (allow ARG1 .invalid readwrite_fifo_file))

(macro readwrite_invalid_files ((type ARG1))
       (allow ARG1 .invalid readwrite_file))

(macro readwriteinherited_invalid_blk_files ((type ARG1))
       (allow ARG1 .invalid readwriteinherited_blk_file))

(macro readwriteinherited_invalid_chr_files ((type ARG1))
       (allow ARG1 .invalid readwriteinherited_chr_file))

(macro readwriteinherited_invalid_dirs ((type ARG1))
       (allow ARG1 .invalid readwriteinherited_dir))

(macro readwriteinherited_invalid_fifo_files ((type ARG1))
       (allow ARG1 .invalid readwriteinherited_fifo_file))

(macro readwriteinherited_invalid_files ((type ARG1))
       (allow ARG1 .invalid readwriteinherited_file))

(macro readwriteinherited_invalid_sock_files ((type ARG1))
       (allow ARG1 .invalid readwriteinherited_sock_file))

(macro readwrite_invalid_lnk_files ((type ARG1))
       (allow ARG1 .invalid readwrite_lnk_file))

(macro readwrite_invalid_sock_files ((type ARG1))
       (allow ARG1 .invalid readwrite_sock_file))

(macro recv_invalid_netpeers ((type ARG1))
       (allow ARG1 .invalid (peer (recv))))

(macro recv_invalid_netpackets ((type ARG1))
       (allow ARG1 .invalid (packet (recv))))

(macro recvfrom_invalid_netnodes ((type ARG1))
       (allow ARG1 .invalid (node (recvfrom))))

(macro recvfromsendto_invalid_associations ((type ARG1))
       (allow ARG1 .invalid (association (recvfrom sendto))))

(macro recvfromsendto_invalid_netnodes ((type ARG1))
       (allow ARG1 .invalid (node (recvfrom sendto))))

(macro recvsend_invalid_netpackets ((type ARG1))
       (allow ARG1 .invalid (packet (recv send))))

(macro relabel_invalid ((type ARG1))
       (allow ARG1 .invalid (allfiles (relabel))))

(macro relabel_invalid_blk_files ((type ARG1))
       (allow ARG1 .invalid relabel_blk_file))

(macro relabel_invalid_chr_files ((type ARG1))
       (allow ARG1 .invalid relabel_chr_file))

(macro relabel_invalid_dirs ((type ARG1))
       (allow ARG1 .invalid relabel_dir))

(macro relabel_invalid_fifo_files ((type ARG1))
       (allow ARG1 .invalid relabel_fifo_file))

(macro relabel_invalid_files ((type ARG1))
       (allow ARG1 .invalid relabel_file))

(macro relabel_invalid_filesystems ((type ARG1))
       (allow ARG1 .invalid (filesystem (relabelfrom relabelto))))

(macro relabel_invalid_lnk_files ((type ARG1))
       (allow ARG1 .invalid relabel_lnk_file))

(macro relabel_invalid_sock_files ((type ARG1))
       (allow ARG1 .invalid relabel_sock_file))

(macro relabelfrom_invalid ((type ARG1))
       (allow ARG1 .invalid (allfiles (relabelfrom))))

(macro relabelfrom_invalid_blk_files ((type ARG1))
       (allow ARG1 .invalid relabelfrom_blk_file))

(macro relabelfrom_invalid_chr_files ((type ARG1))
       (allow ARG1 .invalid relabelfrom_chr_file))

(macro relabelfrom_invalid_dirs ((type ARG1))
       (allow ARG1 .invalid relabelfrom_dir))

(macro relabelfrom_invalid_fifo_files ((type ARG1))
       (allow ARG1 .invalid relabelfrom_fifo_file))

(macro relabelfrom_invalid_files ((type ARG1))
       (allow ARG1 .invalid relabelfrom_file))

(macro relabelfrom_invalid_filesystems ((type ARG1))
       (allow ARG1 .invalid (filesystem (relabelfrom))))

(macro relabelfrom_invalid_lnk_files ((type ARG1))
       (allow ARG1 .invalid relabelfrom_lnk_file))

(macro relabelfrom_invalid_sock_files ((type ARG1))
       (allow ARG1 .invalid relabelfrom_sock_file))

(macro relabelto_invalid ((type ARG1))
       (allow ARG1 .invalid (allfiles (relabelto))))

(macro relabelto_invalid_blk_files ((type ARG1))
       (allow ARG1 .invalid relabelto_blk_file))

(macro relabelto_invalid_chr_files ((type ARG1))
       (allow ARG1 .invalid relabelto_chr_file))

(macro relabelto_invalid_dirs ((type ARG1))
       (allow ARG1 .invalid relabelto_dir))

(macro relabelto_invalid_fifo_files ((type ARG1))
       (allow ARG1 .invalid relabelto_fifo_file))

(macro relabelto_invalid_files ((type ARG1))
       (allow ARG1 .invalid relabelto_file))

(macro relabelto_invalid_filesystems ((type ARG1))
       (allow ARG1 .invalid (filesystem (relabelto))))

(macro relabelto_invalid_lnk_files ((type ARG1))
       (allow ARG1 .invalid relabelto_lnk_file))

(macro relabelto_invalid_netpackets ((type ARG1))
       (allow ARG1 .invalid (packet (relabelto))))

(macro relabelto_invalid_sock_files ((type ARG1))
       (allow ARG1 .invalid relabelto_sock_file))

(macro remount_invalid_filesystems ((type ARG1))
       (allow ARG1 .invalid (filesystem (remount))))

(macro rename_invalid ((type ARG1))
       (allow ARG1 .invalid (allfiles (rename))))

(macro rename_invalid_blk_files ((type ARG1))
       (allow ARG1 .invalid rename_blk_file))

(macro rename_invalid_chr_files ((type ARG1))
       (allow ARG1 .invalid rename_chr_file))

(macro rename_invalid_dirs ((type ARG1))
       (allow ARG1 .invalid rename_dir))

(macro rename_invalid_fifo_files ((type ARG1))
       (allow ARG1 .invalid rename_fifo_file))

(macro rename_invalid_files ((type ARG1))
       (allow ARG1 .invalid rename_file))

(macro rename_invalid_lnk_files ((type ARG1))
       (allow ARG1 .invalid rename_lnk_file))

(macro rename_invalid_sock_files ((type ARG1))
       (allow ARG1 .invalid rename_sock_file))

(macro sctp_bind_invalid_netnodes ((type ARG1))
       (allow ARG1 .invalid (sctp_socket (node_bind))))

(macro sctp_bind_invalid_netports ((type ARG1))
       (allow ARG1 .invalid (sctp_socket (name_bind))))

(macro sctp_connect_invalid_netports ((type ARG1))
       (allow ARG1 .invalid (sctp_socket (name_connect))))

(macro search_invalid_dirs ((type ARG1))
       (allow ARG1 .invalid search_dir))

(macro send_invalid_netpackets ((type ARG1))
       (allow ARG1 .invalid (packet (send))))

(macro sendto_invalid_netnodes ((type ARG1))
       (allow ARG1 .invalid (node (sendto))))

(macro tcp_bind_invalid_netnodes ((type ARG1))
       (allow ARG1 .invalid (tcp_socket (node_bind))))

(macro tcp_bind_invalid_netports ((type ARG1))
       (allow ARG1 .invalid (tcp_socket (name_bind))))

(macro tcp_connect_invalid_netports ((type ARG1))
       (allow ARG1 .invalid (tcp_socket (name_connect))))

(macro udp_bind_invalid_netnodes ((type ARG1))
       (allow ARG1 .invalid (udp_socket (node_bind))))

(macro udp_bind_invalid_netports ((type ARG1))
       (allow ARG1 .invalid (udp_socket (name_bind))))

(macro unmount_invalid_filesystems ((type ARG1))
       (allow ARG1 .invalid (filesystem (unmount))))

(macro watch_invalid_filesystems ((type ARG1))
       (allow ARG1 .invalid (filesystem (watch))))

(macro write_invalid ((type ARG1))
       (allow ARG1 .invalid (allfiles (write))))

(macro write_invalid_blk_files ((type ARG1))
       (allow ARG1 .invalid write_blk_file))

(macro write_invalid_chr_files ((type ARG1))
       (allow ARG1 .invalid write_chr_file))

(macro write_invalid_dirs ((type ARG1))
       (allow ARG1 .invalid write_dir))

(macro write_invalid_fifo_files ((type ARG1))
       (allow ARG1 .invalid write_fifo_file))

(macro write_invalid_files ((type ARG1))
       (allow ARG1 .invalid write_file))

(macro writeinherited_invalid_blk_files ((type ARG1))
       (allow ARG1 .invalid writeinherited_blk_file))

(macro writeinherited_invalid_chr_files ((type ARG1))
       (allow ARG1 .invalid writeinherited_chr_file))

(macro writeinherited_invalid_dirs ((type ARG1))
       (allow ARG1 .invalid writeinherited_dir))

(macro writeinherited_invalid_fifo_files ((type ARG1))
       (allow ARG1 .invalid writeinherited_fifo_file))

(macro writeinherited_invalid_files ((type ARG1))
       (allow ARG1 .invalid writeinherited_file))

(macro writeinherited_invalid_sock_files ((type ARG1))
       (allow ARG1 .invalid writeinherited_sock_file))

(macro write_invalid_lnk_files ((type ARG1))
       (allow ARG1 .invalid write_lnk_file))

(macro write_invalid_sock_files ((type ARG1))
       (allow ARG1 .invalid write_sock_file))

;;
;; Policy
;;

(type
 invalid)

(allow .invalid self (filesystem (associate)))

(call .sys.type (invalid))

(call .fs.seclabel.associate_all_filesystems (invalid))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .wtmp.obj_type_transition_logtmpfile (unconfined.subj_typeattr)))

(block wtmp

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/log/wtmp"
        file
        logtmpfile_file_context)

       ;;
       ;; Macros
       ;;


       (macro obj_type_transition_logtmpfile ((type ARG1))
              (call .tmpfile.logtmpfile_obj_type_transition
                    (ARG1 logtmpfile file "wtmp")))

       ;;
       ;; Policy
       ;;

       (blockinherit .tmpfile.log.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .lastlog.obj_type_transition_logtmpfile (unconfined.subj_typeattr)))

(block lastlog

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/log/lastlog"
        file
        logtmpfile_file_context)

       ;;
       ;; Macros
       ;;


       (macro obj_type_transition_logtmpfile ((type ARG1))
              (call .tmpfile.logtmpfile_obj_type_transition
                    (ARG1 logtmpfile file "lastlog")))

       ;;
       ;; Policy
       ;;

       (blockinherit .tmpfile.log.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .tmpfile.obj_type_transition_conftmpfile (unconfined.subj_typeattr)))

(in .tmpfile

    ;;
    ;; Contexts
    ;;

    (filecon
     "/tmp/etc"
     dir
     conftmpfile_file_context)
    (filecon
     "/tmp/etc/.*"
     any
     conftmpfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_conftmpfile ((type ARG1))
           (call .tmp.fs_obj_type_transition
                 (ARG1 conftmpfile dir "etc")))

    (macro setattr_conftmpfile_dirs ((type ARG1))
           (allow ARG1 conftmpfile (dir (setattr))))

    ;;
    ;; Policy
    ;;

    (blockinherit conf.obj_template)

    (block conf

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (call tmpfile.obj_type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   conftmpfile_file_context
                   (.u
                    .r
                    conftmpfile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   conftmpfile)

                  (call .tmpfile.conf.obj_type (conftmpfile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_conftmpfile_dirs ((type ARG1))
                         (allow ARG1 conftmpfile addname_dir))

                  (macro append_conftmpfile_blk_files ((type ARG1))
                         (allow ARG1 conftmpfile append_blk_file))

                  (macro append_conftmpfile_chr_files ((type ARG1))
                         (allow ARG1 conftmpfile append_chr_file))

                  (macro append_conftmpfile_fifo_files ((type ARG1))
                         (allow ARG1 conftmpfile append_fifo_file))

                  (macro append_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile append_file))

                  (macro appendinherited_conftmpfile_blk_files ((type ARG1))
                         (allow ARG1 conftmpfile appendinherited_blk_file))

                  (macro appendinherited_conftmpfile_chr_files ((type ARG1))
                         (allow ARG1 conftmpfile appendinherited_chr_file))

                  (macro appendinherited_conftmpfile_fifo_files ((type ARG1))
                         (allow ARG1 conftmpfile appendinherited_fifo_file))

                  (macro appendinherited_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile appendinherited_file))

                  (macro conftmpfile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 conftmpfile ARG3 ARG4 ARG2)
                         (call addname_conftmpfile_dirs (ARG1)))

                  (macro create_conftmpfile ((type ARG1))
                         (allow ARG1 conftmpfile (allfiles (create))))

                  (macro create_conftmpfile_blk_files ((type ARG1))
                         (allow ARG1 conftmpfile create_blk_file))

                  (macro create_conftmpfile_chr_files ((type ARG1))
                         (allow ARG1 conftmpfile create_chr_file))

                  (macro create_conftmpfile_dirs ((type ARG1))
                         (allow ARG1 conftmpfile create_dir))

                  (macro create_conftmpfile_fifo_files ((type ARG1))
                         (allow ARG1 conftmpfile create_fifo_file))

                  (macro create_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile create_file))

                  (macro create_conftmpfile_lnk_files ((type ARG1))
                         (allow ARG1 conftmpfile create_lnk_file))

                  (macro create_conftmpfile_sock_files ((type ARG1))
                         (allow ARG1 conftmpfile create_sock_file))

                  (macro deletename_conftmpfile_dirs ((type ARG1))
                         (allow ARG1 conftmpfile deletename_dir))

                  (macro delete_conftmpfile ((type ARG1))
                         (allow ARG1 conftmpfile (allfiles (delete))))

                  (macro delete_conftmpfile_blk_files ((type ARG1))
                         (allow ARG1 conftmpfile delete_blk_file))

                  (macro delete_conftmpfile_chr_files ((type ARG1))
                         (allow ARG1 conftmpfile delete_chr_file))

                  (macro delete_conftmpfile_dirs ((type ARG1))
                         (allow ARG1 conftmpfile delete_dir))

                  (macro delete_conftmpfile_fifo_files ((type ARG1))
                         (allow ARG1 conftmpfile delete_fifo_file))

                  (macro delete_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile delete_file))

                  (macro delete_conftmpfile_lnk_files ((type ARG1))
                         (allow ARG1 conftmpfile delete_lnk_file))

                  (macro delete_conftmpfile_sock_files ((type ARG1))
                         (allow ARG1 conftmpfile delete_sock_file))

                  (macro execute_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile execute_file))

                  (macro list_conftmpfile_dirs ((type ARG1))
                         (allow ARG1 conftmpfile list_dir))

                  (macro listinherited_conftmpfile_dirs ((type ARG1))
                         (allow ARG1 conftmpfile listinherited_dir))

                  (macro manage_conftmpfile ((type ARG1))
                         (allow ARG1 conftmpfile (allfiles (manage))))

                  (macro manage_conftmpfile_blk_files ((type ARG1))
                         (allow ARG1 conftmpfile manage_blk_file))

                  (macro manage_conftmpfile_chr_files ((type ARG1))
                         (allow ARG1 conftmpfile manage_chr_file))

                  (macro manage_conftmpfile_dirs ((type ARG1))
                         (allow ARG1 conftmpfile manage_dir))

                  (macro manage_conftmpfile_fifo_files ((type ARG1))
                         (allow ARG1 conftmpfile manage_fifo_file))

                  (macro manage_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile manage_file))

                  (macro manage_conftmpfile_lnk_files ((type ARG1))
                         (allow ARG1 conftmpfile manage_lnk_file))

                  (macro manage_conftmpfile_sock_files ((type ARG1))
                         (allow ARG1 conftmpfile manage_sock_file))

                  (macro mapexecute_conftmpfile_chr_files ((type ARG1))
                         (allow ARG1 conftmpfile mapexecute_chr_file))

                  (macro mapexecute_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile mapexecute_file))

                  (macro mounton_conftmpfile ((type ARG1))
                         (allow ARG1 conftmpfile (allfiles (mounton))))

                  (macro mounton_conftmpfile_blk_files ((type ARG1))
                         (allow ARG1 conftmpfile mounton_blk_file))

                  (macro mounton_conftmpfile_chr_files ((type ARG1))
                         (allow ARG1 conftmpfile mounton_chr_file))

                  (macro mounton_conftmpfile_dirs ((type ARG1))
                         (allow ARG1 conftmpfile mounton_dir))

                  (macro mounton_conftmpfile_fifo_files ((type ARG1))
                         (allow ARG1 conftmpfile mounton_fifo_file))

                  (macro mounton_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile mounton_file))

                  (macro mounton_conftmpfile_lnk_files ((type ARG1))
                         (allow ARG1 conftmpfile mounton_lnk_file))

                  (macro mounton_conftmpfile_sock_files ((type ARG1))
                         (allow ARG1 conftmpfile mounton_sock_file))

                  (macro read_conftmpfile ((type ARG1))
                         (allow ARG1 conftmpfile (allfiles (read))))

                  (macro read_conftmpfile_blk_files ((type ARG1))
                         (allow ARG1 conftmpfile read_blk_file))

                  (macro read_conftmpfile_chr_files ((type ARG1))
                         (allow ARG1 conftmpfile read_chr_file))

                  (macro read_conftmpfile_fifo_files ((type ARG1))
                         (allow ARG1 conftmpfile read_fifo_file))

                  (macro read_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile read_file))

                  (macro readinherited_conftmpfile_blk_files ((type ARG1))
                         (allow ARG1 conftmpfile readinherited_blk_file))

                  (macro readinherited_conftmpfile_chr_files ((type ARG1))
                         (allow ARG1 conftmpfile readinherited_chr_file))

                  (macro readinherited_conftmpfile_fifo_files ((type ARG1))
                         (allow ARG1 conftmpfile readinherited_fifo_file))

                  (macro readinherited_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile readinherited_file))

                  (macro readinherited_conftmpfile_sock_files ((type ARG1))
                         (allow ARG1 conftmpfile readinherited_sock_file))

                  (macro read_conftmpfile_lnk_files ((type ARG1))
                         (allow ARG1 conftmpfile read_lnk_file))

                  (macro read_conftmpfile_sock_files ((type ARG1))
                         (allow ARG1 conftmpfile read_sock_file))

                  (macro readwrite_conftmpfile ((type ARG1))
                         (allow ARG1 conftmpfile (allfiles (readwrite))))

                  (macro readwrite_conftmpfile_blk_files ((type ARG1))
                         (allow ARG1 conftmpfile readwrite_blk_file))

                  (macro readwrite_conftmpfile_chr_files ((type ARG1))
                         (allow ARG1 conftmpfile readwrite_chr_file))

                  (macro readwrite_conftmpfile_dirs ((type ARG1))
                         (allow ARG1 conftmpfile readwrite_dir))

                  (macro readwrite_conftmpfile_fifo_files ((type ARG1))
                         (allow ARG1 conftmpfile readwrite_fifo_file))

                  (macro readwrite_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile readwrite_file))

                  (macro readwriteinherited_conftmpfile_blk_files ((type ARG1))
                         (allow ARG1 conftmpfile readwriteinherited_blk_file))

                  (macro readwriteinherited_conftmpfile_chr_files ((type ARG1))
                         (allow ARG1 conftmpfile readwriteinherited_chr_file))

                  (macro readwriteinherited_conftmpfile_dirs ((type ARG1))
                         (allow ARG1 conftmpfile readwriteinherited_dir))

                  (macro readwriteinherited_conftmpfile_fifo_files ((type ARG1))
                         (allow ARG1 conftmpfile readwriteinherited_fifo_file))

                  (macro readwriteinherited_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile readwriteinherited_file))

                  (macro readwriteinherited_conftmpfile_sock_files ((type ARG1))
                         (allow ARG1 conftmpfile readwriteinherited_sock_file))

                  (macro readwrite_conftmpfile_lnk_files ((type ARG1))
                         (allow ARG1 conftmpfile readwrite_lnk_file))

                  (macro readwrite_conftmpfile_sock_files ((type ARG1))
                         (allow ARG1 conftmpfile readwrite_sock_file))

                  (macro relabel_conftmpfile ((type ARG1))
                         (allow ARG1 conftmpfile (allfiles (relabel))))

                  (macro relabel_conftmpfile_blk_files ((type ARG1))
                         (allow ARG1 conftmpfile relabel_blk_file))

                  (macro relabel_conftmpfile_chr_files ((type ARG1))
                         (allow ARG1 conftmpfile relabel_chr_file))

                  (macro relabel_conftmpfile_dirs ((type ARG1))
                         (allow ARG1 conftmpfile relabel_dir))

                  (macro relabel_conftmpfile_fifo_files ((type ARG1))
                         (allow ARG1 conftmpfile relabel_fifo_file))

                  (macro relabel_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile relabel_file))

                  (macro relabel_conftmpfile_lnk_files ((type ARG1))
                         (allow ARG1 conftmpfile relabel_lnk_file))

                  (macro relabel_conftmpfile_sock_files ((type ARG1))
                         (allow ARG1 conftmpfile relabel_sock_file))

                  (macro relabelfrom_conftmpfile ((type ARG1))
                         (allow ARG1 conftmpfile (allfiles (relabelfrom))))

                  (macro relabelfrom_conftmpfile_blk_files ((type ARG1))
                         (allow ARG1 conftmpfile relabelfrom_blk_file))

                  (macro relabelfrom_conftmpfile_chr_files ((type ARG1))
                         (allow ARG1 conftmpfile relabelfrom_chr_file))

                  (macro relabelfrom_conftmpfile_dirs ((type ARG1))
                         (allow ARG1 conftmpfile relabelfrom_dir))

                  (macro relabelfrom_conftmpfile_fifo_files ((type ARG1))
                         (allow ARG1 conftmpfile relabelfrom_fifo_file))

                  (macro relabelfrom_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile relabelfrom_file))

                  (macro relabelfrom_conftmpfile_lnk_files ((type ARG1))
                         (allow ARG1 conftmpfile relabelfrom_lnk_file))

                  (macro relabelfrom_conftmpfile_sock_files ((type ARG1))
                         (allow ARG1 conftmpfile relabelfrom_sock_file))

                  (macro relabelto_conftmpfile ((type ARG1))
                         (allow ARG1 conftmpfile (allfiles (relabelto))))

                  (macro relabelto_conftmpfile_blk_files ((type ARG1))
                         (allow ARG1 conftmpfile relabelto_blk_file))

                  (macro relabelto_conftmpfile_chr_files ((type ARG1))
                         (allow ARG1 conftmpfile relabelto_chr_file))

                  (macro relabelto_conftmpfile_dirs ((type ARG1))
                         (allow ARG1 conftmpfile relabelto_dir))

                  (macro relabelto_conftmpfile_fifo_files ((type ARG1))
                         (allow ARG1 conftmpfile relabelto_fifo_file))

                  (macro relabelto_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile relabelto_file))

                  (macro relabelto_conftmpfile_lnk_files ((type ARG1))
                         (allow ARG1 conftmpfile relabelto_lnk_file))

                  (macro relabelto_conftmpfile_sock_files ((type ARG1))
                         (allow ARG1 conftmpfile relabelto_sock_file))

                  (macro rename_conftmpfile ((type ARG1))
                         (allow ARG1 conftmpfile (allfiles (rename))))

                  (macro rename_conftmpfile_blk_files ((type ARG1))
                         (allow ARG1 conftmpfile rename_blk_file))

                  (macro rename_conftmpfile_chr_files ((type ARG1))
                         (allow ARG1 conftmpfile rename_chr_file))

                  (macro rename_conftmpfile_dirs ((type ARG1))
                         (allow ARG1 conftmpfile rename_dir))

                  (macro rename_conftmpfile_fifo_files ((type ARG1))
                         (allow ARG1 conftmpfile rename_fifo_file))

                  (macro rename_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile rename_file))

                  (macro rename_conftmpfile_lnk_files ((type ARG1))
                         (allow ARG1 conftmpfile rename_lnk_file))

                  (macro rename_conftmpfile_sock_files ((type ARG1))
                         (allow ARG1 conftmpfile rename_sock_file))

                  (macro search_conftmpfile_dirs ((type ARG1))
                         (allow ARG1 conftmpfile search_dir))

                  (macro write_conftmpfile ((type ARG1))
                         (allow ARG1 conftmpfile (allfiles (write))))

                  (macro write_conftmpfile_blk_files ((type ARG1))
                         (allow ARG1 conftmpfile write_blk_file))

                  (macro write_conftmpfile_chr_files ((type ARG1))
                         (allow ARG1 conftmpfile write_chr_file))

                  (macro write_conftmpfile_dirs ((type ARG1))
                         (allow ARG1 conftmpfile write_dir))

                  (macro write_conftmpfile_fifo_files ((type ARG1))
                         (allow ARG1 conftmpfile write_fifo_file))

                  (macro write_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile write_file))

                  (macro writeinherited_conftmpfile_blk_files ((type ARG1))
                         (allow ARG1 conftmpfile writeinherited_blk_file))

                  (macro writeinherited_conftmpfile_chr_files ((type ARG1))
                         (allow ARG1 conftmpfile writeinherited_chr_file))

                  (macro writeinherited_conftmpfile_dirs ((type ARG1))
                         (allow ARG1 conftmpfile writeinherited_dir))

                  (macro writeinherited_conftmpfile_fifo_files ((type ARG1))
                         (allow ARG1 conftmpfile writeinherited_fifo_file))

                  (macro writeinherited_conftmpfile_files ((type ARG1))
                         (allow ARG1 conftmpfile writeinherited_file))

                  (macro writeinherited_conftmpfile_sock_files ((type ARG1))
                         (allow ARG1 conftmpfile writeinherited_sock_file))

                  (macro write_conftmpfile_lnk_files ((type ARG1))
                         (allow ARG1 conftmpfile write_lnk_file))

                  (macro write_conftmpfile_sock_files ((type ARG1))
                         (allow ARG1 conftmpfile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .tmpfile.conf.obj_base_template)
                  (blockinherit .tmpfile.conf.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .resolv.obj_type_transition_tmpfile (unconfined.subj_typeattr)))

(block resolv

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/resolv\.conf"
        file
        tmpfile_file_context)
       (filecon
        "/tmp/resolv\.conf\.auto"
        file
        tmpfile_file_context)
       (filecon
        "/tmp/resolv\.conf\.ppp"
        file
        tmpfile_file_context)
       (filecon
        "/tmp/resolv\.conf\.d"
        dir
        tmpfile_file_context)
       (filecon
        "/tmp/resolv\.conf\,d/.*"
        any
        tmpfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_tmpfile ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile file "resolv.conf"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile file "resolv.conf.auto"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile file "resolv.conf.ppp"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile dir "resolv.conf.d")))

       (macro watch_tmpfile_dirs ((type ARG1))
              (allow ARG1 tmpfile (dir (watch))))

       ;;
       ;; Policy
       ;;

       (blockinherit .tmpfile.obj_template)

       (block read

              ;;
              ;; Policy
              ;;

              (blockinherit subj.subj_all_macro_template)

              (call read_tmpfile_files (subj_typeattr))
              (call search_tmpfile_dirs (subj_typeattr))

              (call .file.read_conffile_lnk_files (subj_typeattr))

              (call .tmp.read_fs_lnk_files (subj_typeattr))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .tmpfile.obj_type_transition_spooltmpfile
          (unconfined.subj_typeattr)))

(in .tmpfile

    ;;
    ;; Contexts
    ;;

    (filecon
     "/tmp/spool"
     dir
     spooltmpfile_file_context)
    (filecon
     "/tmp/spool/.*"
     any
     spooltmpfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_spooltmpfile ((type ARG1))
           (call .tmp.fs_obj_type_transition
                 (ARG1 spooltmpfile dir "spool")))

    ;;
    ;; Policy
    ;;

    (blockinherit spool.obj_template)

    (block spool

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (call tmpfile.obj_type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   spooltmpfile_file_context
                   (.u
                    .r
                    spooltmpfile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   spooltmpfile)

                  (call .tmpfile.spool.obj_type (spooltmpfile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_spooltmpfile_dirs ((type ARG1))
                         (allow ARG1 spooltmpfile addname_dir))

                  (macro append_spooltmpfile_blk_files ((type ARG1))
                         (allow ARG1 spooltmpfile append_blk_file))

                  (macro append_spooltmpfile_chr_files ((type ARG1))
                         (allow ARG1 spooltmpfile append_chr_file))

                  (macro append_spooltmpfile_fifo_files ((type ARG1))
                         (allow ARG1 spooltmpfile append_fifo_file))

                  (macro append_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile append_file))

                  (macro appendinherited_spooltmpfile_blk_files ((type ARG1))
                         (allow ARG1 spooltmpfile appendinherited_blk_file))

                  (macro appendinherited_spooltmpfile_chr_files ((type ARG1))
                         (allow ARG1 spooltmpfile appendinherited_chr_file))

                  (macro appendinherited_spooltmpfile_fifo_files ((type ARG1))
                         (allow ARG1 spooltmpfile appendinherited_fifo_file))

                  (macro appendinherited_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile appendinherited_file))

                  (macro create_spooltmpfile ((type ARG1))
                         (allow ARG1 spooltmpfile (allfiles (create))))

                  (macro create_spooltmpfile_blk_files ((type ARG1))
                         (allow ARG1 spooltmpfile create_blk_file))

                  (macro create_spooltmpfile_chr_files ((type ARG1))
                         (allow ARG1 spooltmpfile create_chr_file))

                  (macro create_spooltmpfile_dirs ((type ARG1))
                         (allow ARG1 spooltmpfile create_dir))

                  (macro create_spooltmpfile_fifo_files ((type ARG1))
                         (allow ARG1 spooltmpfile create_fifo_file))

                  (macro create_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile create_file))

                  (macro create_spooltmpfile_lnk_files ((type ARG1))
                         (allow ARG1 spooltmpfile create_lnk_file))

                  (macro create_spooltmpfile_sock_files ((type ARG1))
                         (allow ARG1 spooltmpfile create_sock_file))

                  (macro deletename_spooltmpfile_dirs ((type ARG1))
                         (allow ARG1 spooltmpfile deletename_dir))

                  (macro delete_spooltmpfile ((type ARG1))
                         (allow ARG1 spooltmpfile (allfiles (delete))))

                  (macro delete_spooltmpfile_blk_files ((type ARG1))
                         (allow ARG1 spooltmpfile delete_blk_file))

                  (macro delete_spooltmpfile_chr_files ((type ARG1))
                         (allow ARG1 spooltmpfile delete_chr_file))

                  (macro delete_spooltmpfile_dirs ((type ARG1))
                         (allow ARG1 spooltmpfile delete_dir))

                  (macro delete_spooltmpfile_fifo_files ((type ARG1))
                         (allow ARG1 spooltmpfile delete_fifo_file))

                  (macro delete_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile delete_file))

                  (macro delete_spooltmpfile_lnk_files ((type ARG1))
                         (allow ARG1 spooltmpfile delete_lnk_file))

                  (macro delete_spooltmpfile_sock_files ((type ARG1))
                         (allow ARG1 spooltmpfile delete_sock_file))

                  (macro execute_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile execute_file))

                  (macro list_spooltmpfile_dirs ((type ARG1))
                         (allow ARG1 spooltmpfile list_dir))

                  (macro listinherited_spooltmpfile_dirs ((type ARG1))
                         (allow ARG1 spooltmpfile listinherited_dir))

                  (macro manage_spooltmpfile ((type ARG1))
                         (allow ARG1 spooltmpfile (allfiles (manage))))

                  (macro manage_spooltmpfile_blk_files ((type ARG1))
                         (allow ARG1 spooltmpfile manage_blk_file))

                  (macro manage_spooltmpfile_chr_files ((type ARG1))
                         (allow ARG1 spooltmpfile manage_chr_file))

                  (macro manage_spooltmpfile_dirs ((type ARG1))
                         (allow ARG1 spooltmpfile manage_dir))

                  (macro manage_spooltmpfile_fifo_files ((type ARG1))
                         (allow ARG1 spooltmpfile manage_fifo_file))

                  (macro manage_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile manage_file))

                  (macro manage_spooltmpfile_lnk_files ((type ARG1))
                         (allow ARG1 spooltmpfile manage_lnk_file))

                  (macro manage_spooltmpfile_sock_files ((type ARG1))
                         (allow ARG1 spooltmpfile manage_sock_file))

                  (macro mapexecute_spooltmpfile_chr_files ((type ARG1))
                         (allow ARG1 spooltmpfile mapexecute_chr_file))

                  (macro mapexecute_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile mapexecute_file))

                  (macro mounton_spooltmpfile ((type ARG1))
                         (allow ARG1 spooltmpfile (allfiles (mounton))))

                  (macro mounton_spooltmpfile_blk_files ((type ARG1))
                         (allow ARG1 spooltmpfile mounton_blk_file))

                  (macro mounton_spooltmpfile_chr_files ((type ARG1))
                         (allow ARG1 spooltmpfile mounton_chr_file))

                  (macro mounton_spooltmpfile_dirs ((type ARG1))
                         (allow ARG1 spooltmpfile mounton_dir))

                  (macro mounton_spooltmpfile_fifo_files ((type ARG1))
                         (allow ARG1 spooltmpfile mounton_fifo_file))

                  (macro mounton_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile mounton_file))

                  (macro mounton_spooltmpfile_lnk_files ((type ARG1))
                         (allow ARG1 spooltmpfile mounton_lnk_file))

                  (macro mounton_spooltmpfile_sock_files ((type ARG1))
                         (allow ARG1 spooltmpfile mounton_sock_file))

                  (macro read_spooltmpfile ((type ARG1))
                         (allow ARG1 spooltmpfile (allfiles (read))))

                  (macro read_spooltmpfile_blk_files ((type ARG1))
                         (allow ARG1 spooltmpfile read_blk_file))

                  (macro read_spooltmpfile_chr_files ((type ARG1))
                         (allow ARG1 spooltmpfile read_chr_file))

                  (macro read_spooltmpfile_fifo_files ((type ARG1))
                         (allow ARG1 spooltmpfile read_fifo_file))

                  (macro read_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile read_file))

                  (macro readinherited_spooltmpfile_blk_files ((type ARG1))
                         (allow ARG1 spooltmpfile readinherited_blk_file))

                  (macro readinherited_spooltmpfile_chr_files ((type ARG1))
                         (allow ARG1 spooltmpfile readinherited_chr_file))

                  (macro readinherited_spooltmpfile_fifo_files ((type ARG1))
                         (allow ARG1 spooltmpfile readinherited_fifo_file))

                  (macro readinherited_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile readinherited_file))

                  (macro readinherited_spooltmpfile_sock_files ((type ARG1))
                         (allow ARG1 spooltmpfile readinherited_sock_file))

                  (macro read_spooltmpfile_lnk_files ((type ARG1))
                         (allow ARG1 spooltmpfile read_lnk_file))

                  (macro read_spooltmpfile_sock_files ((type ARG1))
                         (allow ARG1 spooltmpfile read_sock_file))

                  (macro readwrite_spooltmpfile ((type ARG1))
                         (allow ARG1 spooltmpfile (allfiles (readwrite))))

                  (macro readwrite_spooltmpfile_blk_files ((type ARG1))
                         (allow ARG1 spooltmpfile readwrite_blk_file))

                  (macro readwrite_spooltmpfile_chr_files ((type ARG1))
                         (allow ARG1 spooltmpfile readwrite_chr_file))

                  (macro readwrite_spooltmpfile_dirs ((type ARG1))
                         (allow ARG1 spooltmpfile readwrite_dir))

                  (macro readwrite_spooltmpfile_fifo_files ((type ARG1))
                         (allow ARG1 spooltmpfile readwrite_fifo_file))

                  (macro readwrite_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile readwrite_file))

                  (macro readwriteinherited_spooltmpfile_blk_files ((type ARG1))
                         (allow ARG1 spooltmpfile readwriteinherited_blk_file))

                  (macro readwriteinherited_spooltmpfile_chr_files ((type ARG1))
                         (allow ARG1 spooltmpfile readwriteinherited_chr_file))

                  (macro readwriteinherited_spooltmpfile_dirs ((type ARG1))
                         (allow ARG1 spooltmpfile readwriteinherited_dir))

                  (macro readwriteinherited_spooltmpfile_fifo_files ((type ARG1))
                         (allow ARG1 spooltmpfile readwriteinherited_fifo_file))

                  (macro readwriteinherited_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile readwriteinherited_file))

                  (macro readwriteinherited_spooltmpfile_sock_files ((type ARG1))
                         (allow ARG1 spooltmpfile readwriteinherited_sock_file))

                  (macro readwrite_spooltmpfile_lnk_files ((type ARG1))
                         (allow ARG1 spooltmpfile readwrite_lnk_file))

                  (macro readwrite_spooltmpfile_sock_files ((type ARG1))
                         (allow ARG1 spooltmpfile readwrite_sock_file))

                  (macro relabel_spooltmpfile ((type ARG1))
                         (allow ARG1 spooltmpfile (allfiles (relabel))))

                  (macro relabel_spooltmpfile_blk_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabel_blk_file))

                  (macro relabel_spooltmpfile_chr_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabel_chr_file))

                  (macro relabel_spooltmpfile_dirs ((type ARG1))
                         (allow ARG1 spooltmpfile relabel_dir))

                  (macro relabel_spooltmpfile_fifo_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabel_fifo_file))

                  (macro relabel_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabel_file))

                  (macro relabel_spooltmpfile_lnk_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabel_lnk_file))

                  (macro relabel_spooltmpfile_sock_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabel_sock_file))

                  (macro relabelfrom_spooltmpfile ((type ARG1))
                         (allow ARG1 spooltmpfile (allfiles (relabelfrom))))

                  (macro relabelfrom_spooltmpfile_blk_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabelfrom_blk_file))

                  (macro relabelfrom_spooltmpfile_chr_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabelfrom_chr_file))

                  (macro relabelfrom_spooltmpfile_dirs ((type ARG1))
                         (allow ARG1 spooltmpfile relabelfrom_dir))

                  (macro relabelfrom_spooltmpfile_fifo_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabelfrom_fifo_file))

                  (macro relabelfrom_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabelfrom_file))

                  (macro relabelfrom_spooltmpfile_lnk_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabelfrom_lnk_file))

                  (macro relabelfrom_spooltmpfile_sock_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabelfrom_sock_file))

                  (macro relabelto_spooltmpfile ((type ARG1))
                         (allow ARG1 spooltmpfile (allfiles (relabelto))))

                  (macro relabelto_spooltmpfile_blk_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabelto_blk_file))

                  (macro relabelto_spooltmpfile_chr_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabelto_chr_file))

                  (macro relabelto_spooltmpfile_dirs ((type ARG1))
                         (allow ARG1 spooltmpfile relabelto_dir))

                  (macro relabelto_spooltmpfile_fifo_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabelto_fifo_file))

                  (macro relabelto_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabelto_file))

                  (macro relabelto_spooltmpfile_lnk_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabelto_lnk_file))

                  (macro relabelto_spooltmpfile_sock_files ((type ARG1))
                         (allow ARG1 spooltmpfile relabelto_sock_file))

                  (macro rename_spooltmpfile ((type ARG1))
                         (allow ARG1 spooltmpfile (allfiles (rename))))

                  (macro rename_spooltmpfile_blk_files ((type ARG1))
                         (allow ARG1 spooltmpfile rename_blk_file))

                  (macro rename_spooltmpfile_chr_files ((type ARG1))
                         (allow ARG1 spooltmpfile rename_chr_file))

                  (macro rename_spooltmpfile_dirs ((type ARG1))
                         (allow ARG1 spooltmpfile rename_dir))

                  (macro rename_spooltmpfile_fifo_files ((type ARG1))
                         (allow ARG1 spooltmpfile rename_fifo_file))

                  (macro rename_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile rename_file))

                  (macro rename_spooltmpfile_lnk_files ((type ARG1))
                         (allow ARG1 spooltmpfile rename_lnk_file))

                  (macro rename_spooltmpfile_sock_files ((type ARG1))
                         (allow ARG1 spooltmpfile rename_sock_file))

                  (macro search_spooltmpfile_dirs ((type ARG1))
                         (allow ARG1 spooltmpfile search_dir))

                  (macro spooltmpfile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 spooltmpfile ARG3 ARG4 ARG2)
                         (call addname_spooltmpfile_dirs (ARG1)))

                  (macro write_spooltmpfile ((type ARG1))
                         (allow ARG1 spooltmpfile (allfiles (write))))

                  (macro write_spooltmpfile_blk_files ((type ARG1))
                         (allow ARG1 spooltmpfile write_blk_file))

                  (macro write_spooltmpfile_chr_files ((type ARG1))
                         (allow ARG1 spooltmpfile write_chr_file))

                  (macro write_spooltmpfile_dirs ((type ARG1))
                         (allow ARG1 spooltmpfile write_dir))

                  (macro write_spooltmpfile_fifo_files ((type ARG1))
                         (allow ARG1 spooltmpfile write_fifo_file))

                  (macro write_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile write_file))

                  (macro writeinherited_spooltmpfile_blk_files ((type ARG1))
                         (allow ARG1 spooltmpfile writeinherited_blk_file))

                  (macro writeinherited_spooltmpfile_chr_files ((type ARG1))
                         (allow ARG1 spooltmpfile writeinherited_chr_file))

                  (macro writeinherited_spooltmpfile_dirs ((type ARG1))
                         (allow ARG1 spooltmpfile writeinherited_dir))

                  (macro writeinherited_spooltmpfile_fifo_files ((type ARG1))
                         (allow ARG1 spooltmpfile writeinherited_fifo_file))

                  (macro writeinherited_spooltmpfile_files ((type ARG1))
                         (allow ARG1 spooltmpfile writeinherited_file))

                  (macro writeinherited_spooltmpfile_sock_files ((type ARG1))
                         (allow ARG1 spooltmpfile writeinherited_sock_file))

                  (macro write_spooltmpfile_lnk_files ((type ARG1))
                         (allow ARG1 spooltmpfile write_lnk_file))

                  (macro write_spooltmpfile_sock_files ((type ARG1))
                         (allow ARG1 spooltmpfile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .tmpfile.spool.obj_base_template)
                  (blockinherit .tmpfile.spool.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .tmpfile.obj_type_transition_logtmpfile (unconfined.subj_typeattr)))

(in .tmpfile

    ;;
    ;; Contexts
    ;;

    (filecon
     "/tmp/log"
     dir
     logtmpfile_file_context)
    (filecon
     "/tmp/log/.*"
     any
     logtmpfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_logtmpfile ((type ARG1))
           (call .tmp.fs_obj_type_transition
                 (ARG1 logtmpfile dir "log")))

    ;;
    ;; Policy
    ;;

    (blockinherit log.obj_template)

    (block log

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (call tmpfile.obj_type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   logtmpfile_file_context
                   (.u
                    .r
                    logtmpfile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   logtmpfile)

                  (call .tmpfile.log.obj_type (logtmpfile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_logtmpfile_dirs ((type ARG1))
                         (allow ARG1 logtmpfile addname_dir))

                  (macro append_logtmpfile_blk_files ((type ARG1))
                         (allow ARG1 logtmpfile append_blk_file))

                  (macro append_logtmpfile_chr_files ((type ARG1))
                         (allow ARG1 logtmpfile append_chr_file))

                  (macro append_logtmpfile_fifo_files ((type ARG1))
                         (allow ARG1 logtmpfile append_fifo_file))

                  (macro append_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile append_file))

                  (macro appendinherited_logtmpfile_blk_files ((type ARG1))
                         (allow ARG1 logtmpfile appendinherited_blk_file))

                  (macro appendinherited_logtmpfile_chr_files ((type ARG1))
                         (allow ARG1 logtmpfile appendinherited_chr_file))

                  (macro appendinherited_logtmpfile_fifo_files ((type ARG1))
                         (allow ARG1 logtmpfile appendinherited_fifo_file))

                  (macro appendinherited_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile appendinherited_file))

                  (macro create_logtmpfile ((type ARG1))
                         (allow ARG1 logtmpfile (allfiles (create))))

                  (macro create_logtmpfile_blk_files ((type ARG1))
                         (allow ARG1 logtmpfile create_blk_file))

                  (macro create_logtmpfile_chr_files ((type ARG1))
                         (allow ARG1 logtmpfile create_chr_file))

                  (macro create_logtmpfile_dirs ((type ARG1))
                         (allow ARG1 logtmpfile create_dir))

                  (macro create_logtmpfile_fifo_files ((type ARG1))
                         (allow ARG1 logtmpfile create_fifo_file))

                  (macro create_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile create_file))

                  (macro create_logtmpfile_lnk_files ((type ARG1))
                         (allow ARG1 logtmpfile create_lnk_file))

                  (macro create_logtmpfile_sock_files ((type ARG1))
                         (allow ARG1 logtmpfile create_sock_file))

                  (macro deletename_logtmpfile_dirs ((type ARG1))
                         (allow ARG1 logtmpfile deletename_dir))

                  (macro delete_logtmpfile ((type ARG1))
                         (allow ARG1 logtmpfile (allfiles (delete))))

                  (macro delete_logtmpfile_blk_files ((type ARG1))
                         (allow ARG1 logtmpfile delete_blk_file))

                  (macro delete_logtmpfile_chr_files ((type ARG1))
                         (allow ARG1 logtmpfile delete_chr_file))

                  (macro delete_logtmpfile_dirs ((type ARG1))
                         (allow ARG1 logtmpfile delete_dir))

                  (macro delete_logtmpfile_fifo_files ((type ARG1))
                         (allow ARG1 logtmpfile delete_fifo_file))

                  (macro delete_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile delete_file))

                  (macro delete_logtmpfile_lnk_files ((type ARG1))
                         (allow ARG1 logtmpfile delete_lnk_file))

                  (macro delete_logtmpfile_sock_files ((type ARG1))
                         (allow ARG1 logtmpfile delete_sock_file))

                  (macro execute_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile execute_file))

                  (macro list_logtmpfile_dirs ((type ARG1))
                         (allow ARG1 logtmpfile list_dir))

                  (macro listinherited_logtmpfile_dirs ((type ARG1))
                         (allow ARG1 logtmpfile listinherited_dir))

                  (macro logtmpfile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 logtmpfile ARG3 ARG4 ARG2)
                         (call addname_logtmpfile_dirs (ARG1)))

                  (macro manage_logtmpfile ((type ARG1))
                         (allow ARG1 logtmpfile (allfiles (manage))))

                  (macro manage_logtmpfile_blk_files ((type ARG1))
                         (allow ARG1 logtmpfile manage_blk_file))

                  (macro manage_logtmpfile_chr_files ((type ARG1))
                         (allow ARG1 logtmpfile manage_chr_file))

                  (macro manage_logtmpfile_dirs ((type ARG1))
                         (allow ARG1 logtmpfile manage_dir))

                  (macro manage_logtmpfile_fifo_files ((type ARG1))
                         (allow ARG1 logtmpfile manage_fifo_file))

                  (macro manage_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile manage_file))

                  (macro manage_logtmpfile_lnk_files ((type ARG1))
                         (allow ARG1 logtmpfile manage_lnk_file))

                  (macro manage_logtmpfile_sock_files ((type ARG1))
                         (allow ARG1 logtmpfile manage_sock_file))

                  (macro mapexecute_logtmpfile_chr_files ((type ARG1))
                         (allow ARG1 logtmpfile mapexecute_chr_file))

                  (macro mapexecute_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile mapexecute_file))

                  (macro mounton_logtmpfile ((type ARG1))
                         (allow ARG1 logtmpfile (allfiles (mounton))))

                  (macro mounton_logtmpfile_blk_files ((type ARG1))
                         (allow ARG1 logtmpfile mounton_blk_file))

                  (macro mounton_logtmpfile_chr_files ((type ARG1))
                         (allow ARG1 logtmpfile mounton_chr_file))

                  (macro mounton_logtmpfile_dirs ((type ARG1))
                         (allow ARG1 logtmpfile mounton_dir))

                  (macro mounton_logtmpfile_fifo_files ((type ARG1))
                         (allow ARG1 logtmpfile mounton_fifo_file))

                  (macro mounton_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile mounton_file))

                  (macro mounton_logtmpfile_lnk_files ((type ARG1))
                         (allow ARG1 logtmpfile mounton_lnk_file))

                  (macro mounton_logtmpfile_sock_files ((type ARG1))
                         (allow ARG1 logtmpfile mounton_sock_file))

                  (macro read_logtmpfile ((type ARG1))
                         (allow ARG1 logtmpfile (allfiles (read))))

                  (macro read_logtmpfile_blk_files ((type ARG1))
                         (allow ARG1 logtmpfile read_blk_file))

                  (macro read_logtmpfile_chr_files ((type ARG1))
                         (allow ARG1 logtmpfile read_chr_file))

                  (macro read_logtmpfile_fifo_files ((type ARG1))
                         (allow ARG1 logtmpfile read_fifo_file))

                  (macro read_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile read_file))

                  (macro readinherited_logtmpfile_blk_files ((type ARG1))
                         (allow ARG1 logtmpfile readinherited_blk_file))

                  (macro readinherited_logtmpfile_chr_files ((type ARG1))
                         (allow ARG1 logtmpfile readinherited_chr_file))

                  (macro readinherited_logtmpfile_fifo_files ((type ARG1))
                         (allow ARG1 logtmpfile readinherited_fifo_file))

                  (macro readinherited_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile readinherited_file))

                  (macro readinherited_logtmpfile_sock_files ((type ARG1))
                         (allow ARG1 logtmpfile readinherited_sock_file))

                  (macro read_logtmpfile_lnk_files ((type ARG1))
                         (allow ARG1 logtmpfile read_lnk_file))

                  (macro read_logtmpfile_sock_files ((type ARG1))
                         (allow ARG1 logtmpfile read_sock_file))

                  (macro readwrite_logtmpfile ((type ARG1))
                         (allow ARG1 logtmpfile (allfiles (readwrite))))

                  (macro readwrite_logtmpfile_blk_files ((type ARG1))
                         (allow ARG1 logtmpfile readwrite_blk_file))

                  (macro readwrite_logtmpfile_chr_files ((type ARG1))
                         (allow ARG1 logtmpfile readwrite_chr_file))

                  (macro readwrite_logtmpfile_dirs ((type ARG1))
                         (allow ARG1 logtmpfile readwrite_dir))

                  (macro readwrite_logtmpfile_fifo_files ((type ARG1))
                         (allow ARG1 logtmpfile readwrite_fifo_file))

                  (macro readwrite_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile readwrite_file))

                  (macro readwriteinherited_logtmpfile_blk_files ((type ARG1))
                         (allow ARG1 logtmpfile readwriteinherited_blk_file))

                  (macro readwriteinherited_logtmpfile_chr_files ((type ARG1))
                         (allow ARG1 logtmpfile readwriteinherited_chr_file))

                  (macro readwriteinherited_logtmpfile_dirs ((type ARG1))
                         (allow ARG1 logtmpfile readwriteinherited_dir))

                  (macro readwriteinherited_logtmpfile_fifo_files ((type ARG1))
                         (allow ARG1 logtmpfile readwriteinherited_fifo_file))

                  (macro readwriteinherited_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile readwriteinherited_file))

                  (macro readwriteinherited_logtmpfile_sock_files ((type ARG1))
                         (allow ARG1 logtmpfile readwriteinherited_sock_file))

                  (macro readwrite_logtmpfile_lnk_files ((type ARG1))
                         (allow ARG1 logtmpfile readwrite_lnk_file))

                  (macro readwrite_logtmpfile_sock_files ((type ARG1))
                         (allow ARG1 logtmpfile readwrite_sock_file))

                  (macro relabel_logtmpfile ((type ARG1))
                         (allow ARG1 logtmpfile (allfiles (relabel))))

                  (macro relabel_logtmpfile_blk_files ((type ARG1))
                         (allow ARG1 logtmpfile relabel_blk_file))

                  (macro relabel_logtmpfile_chr_files ((type ARG1))
                         (allow ARG1 logtmpfile relabel_chr_file))

                  (macro relabel_logtmpfile_dirs ((type ARG1))
                         (allow ARG1 logtmpfile relabel_dir))

                  (macro relabel_logtmpfile_fifo_files ((type ARG1))
                         (allow ARG1 logtmpfile relabel_fifo_file))

                  (macro relabel_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile relabel_file))

                  (macro relabel_logtmpfile_lnk_files ((type ARG1))
                         (allow ARG1 logtmpfile relabel_lnk_file))

                  (macro relabel_logtmpfile_sock_files ((type ARG1))
                         (allow ARG1 logtmpfile relabel_sock_file))

                  (macro relabelfrom_logtmpfile ((type ARG1))
                         (allow ARG1 logtmpfile (allfiles (relabelfrom))))

                  (macro relabelfrom_logtmpfile_blk_files ((type ARG1))
                         (allow ARG1 logtmpfile relabelfrom_blk_file))

                  (macro relabelfrom_logtmpfile_chr_files ((type ARG1))
                         (allow ARG1 logtmpfile relabelfrom_chr_file))

                  (macro relabelfrom_logtmpfile_dirs ((type ARG1))
                         (allow ARG1 logtmpfile relabelfrom_dir))

                  (macro relabelfrom_logtmpfile_fifo_files ((type ARG1))
                         (allow ARG1 logtmpfile relabelfrom_fifo_file))

                  (macro relabelfrom_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile relabelfrom_file))

                  (macro relabelfrom_logtmpfile_lnk_files ((type ARG1))
                         (allow ARG1 logtmpfile relabelfrom_lnk_file))

                  (macro relabelfrom_logtmpfile_sock_files ((type ARG1))
                         (allow ARG1 logtmpfile relabelfrom_sock_file))

                  (macro relabelto_logtmpfile ((type ARG1))
                         (allow ARG1 logtmpfile (allfiles (relabelto))))

                  (macro relabelto_logtmpfile_blk_files ((type ARG1))
                         (allow ARG1 logtmpfile relabelto_blk_file))

                  (macro relabelto_logtmpfile_chr_files ((type ARG1))
                         (allow ARG1 logtmpfile relabelto_chr_file))

                  (macro relabelto_logtmpfile_dirs ((type ARG1))
                         (allow ARG1 logtmpfile relabelto_dir))

                  (macro relabelto_logtmpfile_fifo_files ((type ARG1))
                         (allow ARG1 logtmpfile relabelto_fifo_file))

                  (macro relabelto_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile relabelto_file))

                  (macro relabelto_logtmpfile_lnk_files ((type ARG1))
                         (allow ARG1 logtmpfile relabelto_lnk_file))

                  (macro relabelto_logtmpfile_sock_files ((type ARG1))
                         (allow ARG1 logtmpfile relabelto_sock_file))

                  (macro rename_logtmpfile ((type ARG1))
                         (allow ARG1 logtmpfile (allfiles (rename))))

                  (macro rename_logtmpfile_blk_files ((type ARG1))
                         (allow ARG1 logtmpfile rename_blk_file))

                  (macro rename_logtmpfile_chr_files ((type ARG1))
                         (allow ARG1 logtmpfile rename_chr_file))

                  (macro rename_logtmpfile_dirs ((type ARG1))
                         (allow ARG1 logtmpfile rename_dir))

                  (macro rename_logtmpfile_fifo_files ((type ARG1))
                         (allow ARG1 logtmpfile rename_fifo_file))

                  (macro rename_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile rename_file))

                  (macro rename_logtmpfile_lnk_files ((type ARG1))
                         (allow ARG1 logtmpfile rename_lnk_file))

                  (macro rename_logtmpfile_sock_files ((type ARG1))
                         (allow ARG1 logtmpfile rename_sock_file))

                  (macro search_logtmpfile_dirs ((type ARG1))
                         (allow ARG1 logtmpfile search_dir))

                  (macro write_logtmpfile ((type ARG1))
                         (allow ARG1 logtmpfile (allfiles (write))))

                  (macro write_logtmpfile_blk_files ((type ARG1))
                         (allow ARG1 logtmpfile write_blk_file))

                  (macro write_logtmpfile_chr_files ((type ARG1))
                         (allow ARG1 logtmpfile write_chr_file))

                  (macro write_logtmpfile_dirs ((type ARG1))
                         (allow ARG1 logtmpfile write_dir))

                  (macro write_logtmpfile_fifo_files ((type ARG1))
                         (allow ARG1 logtmpfile write_fifo_file))

                  (macro write_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile write_file))

                  (macro writeinherited_logtmpfile_blk_files ((type ARG1))
                         (allow ARG1 logtmpfile writeinherited_blk_file))

                  (macro writeinherited_logtmpfile_chr_files ((type ARG1))
                         (allow ARG1 logtmpfile writeinherited_chr_file))

                  (macro writeinherited_logtmpfile_dirs ((type ARG1))
                         (allow ARG1 logtmpfile writeinherited_dir))

                  (macro writeinherited_logtmpfile_fifo_files ((type ARG1))
                         (allow ARG1 logtmpfile writeinherited_fifo_file))

                  (macro writeinherited_logtmpfile_files ((type ARG1))
                         (allow ARG1 logtmpfile writeinherited_file))

                  (macro writeinherited_logtmpfile_sock_files ((type ARG1))
                         (allow ARG1 logtmpfile writeinherited_sock_file))

                  (macro write_logtmpfile_lnk_files ((type ARG1))
                         (allow ARG1 logtmpfile write_lnk_file))

                  (macro write_logtmpfile_sock_files ((type ARG1))
                         (allow ARG1 logtmpfile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .tmpfile.log.obj_base_template)
                  (blockinherit .tmpfile.log.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .ntpd.obj_type_transition_runtimetmpfile (unconfined.subj_typeattr)))

(block ntpd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/run/ntpd\.pid"
        file
        runtimetmpfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_runtimetmpfile ((type ARG1))
              (call .tmpfile.runtimetmpfile_obj_type_transition
                    (ARG1 runtimetmpfile file "ntpd.pid")))

       ;;
       ;; Policy
       ;;

       (blockinherit .tmpfile.runtime.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .cron.obj_type_transition_runtimetmpfile (unconfined.subj_typeattr)))

(in .cron

    ;;
    ;; Contexts
    ;;

    (filecon
     "/tmp/run/crond\.pid"
     file
     runtimetmpfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_runtimetmpfile ((type ARG1))
           (call .tmpfile.runtimetmpfile_obj_type_transition
                 (ARG1 runtimetmpfile file "crond.pid")))

    ;;
    ;; Policy
    ;;

    (blockinherit .tmpfile.runtime.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .tmpfile.obj_type_transition_hoststmpfile
          (unconfined.subj_typeattr)))

(in .tmpfile

    ;;
    ;; Contexts
    ;;

    (filecon
     "/tmp/hosts"
     dir
     hoststmpfile_file_context)
    (filecon
     "/tmp/hosts/.*"
     any
     hoststmpfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_hoststmpfile ((type ARG1))
           (call .tmp.fs_obj_type_transition
                 (ARG1 hoststmpfile dir "hosts")))

    ;;
    ;; Policy
    ;;

    (blockinherit hosts.obj_template)

    (block hosts

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (call tmpfile.obj_type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   hoststmpfile_file_context
                   (.u
                    .r
                    hoststmpfile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   hoststmpfile)

                  (call .tmpfile.hosts.obj_type (hoststmpfile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_hoststmpfile_dirs ((type ARG1))
                         (allow ARG1 hoststmpfile addname_dir))

                  (macro append_hoststmpfile_blk_files ((type ARG1))
                         (allow ARG1 hoststmpfile append_blk_file))

                  (macro append_hoststmpfile_chr_files ((type ARG1))
                         (allow ARG1 hoststmpfile append_chr_file))

                  (macro append_hoststmpfile_fifo_files ((type ARG1))
                         (allow ARG1 hoststmpfile append_fifo_file))

                  (macro append_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile append_file))

                  (macro appendinherited_hoststmpfile_blk_files ((type ARG1))
                         (allow ARG1 hoststmpfile appendinherited_blk_file))

                  (macro appendinherited_hoststmpfile_chr_files ((type ARG1))
                         (allow ARG1 hoststmpfile appendinherited_chr_file))

                  (macro appendinherited_hoststmpfile_fifo_files ((type ARG1))
                         (allow ARG1 hoststmpfile appendinherited_fifo_file))

                  (macro appendinherited_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile appendinherited_file))

                  (macro create_hoststmpfile ((type ARG1))
                         (allow ARG1 hoststmpfile (allfiles (create))))

                  (macro create_hoststmpfile_blk_files ((type ARG1))
                         (allow ARG1 hoststmpfile create_blk_file))

                  (macro create_hoststmpfile_chr_files ((type ARG1))
                         (allow ARG1 hoststmpfile create_chr_file))

                  (macro create_hoststmpfile_dirs ((type ARG1))
                         (allow ARG1 hoststmpfile create_dir))

                  (macro create_hoststmpfile_fifo_files ((type ARG1))
                         (allow ARG1 hoststmpfile create_fifo_file))

                  (macro create_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile create_file))

                  (macro create_hoststmpfile_lnk_files ((type ARG1))
                         (allow ARG1 hoststmpfile create_lnk_file))

                  (macro create_hoststmpfile_sock_files ((type ARG1))
                         (allow ARG1 hoststmpfile create_sock_file))

                  (macro deletename_hoststmpfile_dirs ((type ARG1))
                         (allow ARG1 hoststmpfile deletename_dir))

                  (macro delete_hoststmpfile ((type ARG1))
                         (allow ARG1 hoststmpfile (allfiles (delete))))

                  (macro delete_hoststmpfile_blk_files ((type ARG1))
                         (allow ARG1 hoststmpfile delete_blk_file))

                  (macro delete_hoststmpfile_chr_files ((type ARG1))
                         (allow ARG1 hoststmpfile delete_chr_file))

                  (macro delete_hoststmpfile_dirs ((type ARG1))
                         (allow ARG1 hoststmpfile delete_dir))

                  (macro delete_hoststmpfile_fifo_files ((type ARG1))
                         (allow ARG1 hoststmpfile delete_fifo_file))

                  (macro delete_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile delete_file))

                  (macro delete_hoststmpfile_lnk_files ((type ARG1))
                         (allow ARG1 hoststmpfile delete_lnk_file))

                  (macro delete_hoststmpfile_sock_files ((type ARG1))
                         (allow ARG1 hoststmpfile delete_sock_file))

                  (macro execute_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile execute_file))

                  (macro hoststmpfile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 hoststmpfile ARG3 ARG4 ARG2)
                         (call addname_hoststmpfile_dirs (ARG1)))

                  (macro list_hoststmpfile_dirs ((type ARG1))
                         (allow ARG1 hoststmpfile list_dir))

                  (macro listinherited_hoststmpfile_dirs ((type ARG1))
                         (allow ARG1 hoststmpfile listinherited_dir))

                  (macro manage_hoststmpfile ((type ARG1))
                         (allow ARG1 hoststmpfile (allfiles (manage))))

                  (macro manage_hoststmpfile_blk_files ((type ARG1))
                         (allow ARG1 hoststmpfile manage_blk_file))

                  (macro manage_hoststmpfile_chr_files ((type ARG1))
                         (allow ARG1 hoststmpfile manage_chr_file))

                  (macro manage_hoststmpfile_dirs ((type ARG1))
                         (allow ARG1 hoststmpfile manage_dir))

                  (macro manage_hoststmpfile_fifo_files ((type ARG1))
                         (allow ARG1 hoststmpfile manage_fifo_file))

                  (macro manage_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile manage_file))

                  (macro manage_hoststmpfile_lnk_files ((type ARG1))
                         (allow ARG1 hoststmpfile manage_lnk_file))

                  (macro manage_hoststmpfile_sock_files ((type ARG1))
                         (allow ARG1 hoststmpfile manage_sock_file))

                  (macro mapexecute_hoststmpfile_chr_files ((type ARG1))
                         (allow ARG1 hoststmpfile mapexecute_chr_file))

                  (macro mapexecute_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile mapexecute_file))

                  (macro mounton_hoststmpfile ((type ARG1))
                         (allow ARG1 hoststmpfile (allfiles (mounton))))

                  (macro mounton_hoststmpfile_blk_files ((type ARG1))
                         (allow ARG1 hoststmpfile mounton_blk_file))

                  (macro mounton_hoststmpfile_chr_files ((type ARG1))
                         (allow ARG1 hoststmpfile mounton_chr_file))

                  (macro mounton_hoststmpfile_dirs ((type ARG1))
                         (allow ARG1 hoststmpfile mounton_dir))

                  (macro mounton_hoststmpfile_fifo_files ((type ARG1))
                         (allow ARG1 hoststmpfile mounton_fifo_file))

                  (macro mounton_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile mounton_file))

                  (macro mounton_hoststmpfile_lnk_files ((type ARG1))
                         (allow ARG1 hoststmpfile mounton_lnk_file))

                  (macro mounton_hoststmpfile_sock_files ((type ARG1))
                         (allow ARG1 hoststmpfile mounton_sock_file))

                  (macro read_hoststmpfile ((type ARG1))
                         (allow ARG1 hoststmpfile (allfiles (read))))

                  (macro read_hoststmpfile_blk_files ((type ARG1))
                         (allow ARG1 hoststmpfile read_blk_file))

                  (macro read_hoststmpfile_chr_files ((type ARG1))
                         (allow ARG1 hoststmpfile read_chr_file))

                  (macro read_hoststmpfile_fifo_files ((type ARG1))
                         (allow ARG1 hoststmpfile read_fifo_file))

                  (macro read_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile read_file))

                  (macro readinherited_hoststmpfile_blk_files ((type ARG1))
                         (allow ARG1 hoststmpfile readinherited_blk_file))

                  (macro readinherited_hoststmpfile_chr_files ((type ARG1))
                         (allow ARG1 hoststmpfile readinherited_chr_file))

                  (macro readinherited_hoststmpfile_fifo_files ((type ARG1))
                         (allow ARG1 hoststmpfile readinherited_fifo_file))

                  (macro readinherited_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile readinherited_file))

                  (macro readinherited_hoststmpfile_sock_files ((type ARG1))
                         (allow ARG1 hoststmpfile readinherited_sock_file))

                  (macro read_hoststmpfile_lnk_files ((type ARG1))
                         (allow ARG1 hoststmpfile read_lnk_file))

                  (macro read_hoststmpfile_sock_files ((type ARG1))
                         (allow ARG1 hoststmpfile read_sock_file))

                  (macro readwrite_hoststmpfile ((type ARG1))
                         (allow ARG1 hoststmpfile (allfiles (readwrite))))

                  (macro readwrite_hoststmpfile_blk_files ((type ARG1))
                         (allow ARG1 hoststmpfile readwrite_blk_file))

                  (macro readwrite_hoststmpfile_chr_files ((type ARG1))
                         (allow ARG1 hoststmpfile readwrite_chr_file))

                  (macro readwrite_hoststmpfile_dirs ((type ARG1))
                         (allow ARG1 hoststmpfile readwrite_dir))

                  (macro readwrite_hoststmpfile_fifo_files ((type ARG1))
                         (allow ARG1 hoststmpfile readwrite_fifo_file))

                  (macro readwrite_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile readwrite_file))

                  (macro readwriteinherited_hoststmpfile_blk_files ((type ARG1))
                         (allow ARG1 hoststmpfile readwriteinherited_blk_file))

                  (macro readwriteinherited_hoststmpfile_chr_files ((type ARG1))
                         (allow ARG1 hoststmpfile readwriteinherited_chr_file))

                  (macro readwriteinherited_hoststmpfile_dirs ((type ARG1))
                         (allow ARG1 hoststmpfile readwriteinherited_dir))

                  (macro readwriteinherited_hoststmpfile_fifo_files ((type ARG1))
                         (allow ARG1 hoststmpfile readwriteinherited_fifo_file))

                  (macro readwriteinherited_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile readwriteinherited_file))

                  (macro readwriteinherited_hoststmpfile_sock_files ((type ARG1))
                         (allow ARG1 hoststmpfile readwriteinherited_sock_file))

                  (macro readwrite_hoststmpfile_lnk_files ((type ARG1))
                         (allow ARG1 hoststmpfile readwrite_lnk_file))

                  (macro readwrite_hoststmpfile_sock_files ((type ARG1))
                         (allow ARG1 hoststmpfile readwrite_sock_file))

                  (macro relabel_hoststmpfile ((type ARG1))
                         (allow ARG1 hoststmpfile (allfiles (relabel))))

                  (macro relabel_hoststmpfile_blk_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabel_blk_file))

                  (macro relabel_hoststmpfile_chr_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabel_chr_file))

                  (macro relabel_hoststmpfile_dirs ((type ARG1))
                         (allow ARG1 hoststmpfile relabel_dir))

                  (macro relabel_hoststmpfile_fifo_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabel_fifo_file))

                  (macro relabel_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabel_file))

                  (macro relabel_hoststmpfile_lnk_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabel_lnk_file))

                  (macro relabel_hoststmpfile_sock_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabel_sock_file))

                  (macro relabelfrom_hoststmpfile ((type ARG1))
                         (allow ARG1 hoststmpfile (allfiles (relabelfrom))))

                  (macro relabelfrom_hoststmpfile_blk_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabelfrom_blk_file))

                  (macro relabelfrom_hoststmpfile_chr_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabelfrom_chr_file))

                  (macro relabelfrom_hoststmpfile_dirs ((type ARG1))
                         (allow ARG1 hoststmpfile relabelfrom_dir))

                  (macro relabelfrom_hoststmpfile_fifo_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabelfrom_fifo_file))

                  (macro relabelfrom_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabelfrom_file))

                  (macro relabelfrom_hoststmpfile_lnk_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabelfrom_lnk_file))

                  (macro relabelfrom_hoststmpfile_sock_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabelfrom_sock_file))

                  (macro relabelto_hoststmpfile ((type ARG1))
                         (allow ARG1 hoststmpfile (allfiles (relabelto))))

                  (macro relabelto_hoststmpfile_blk_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabelto_blk_file))

                  (macro relabelto_hoststmpfile_chr_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabelto_chr_file))

                  (macro relabelto_hoststmpfile_dirs ((type ARG1))
                         (allow ARG1 hoststmpfile relabelto_dir))

                  (macro relabelto_hoststmpfile_fifo_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabelto_fifo_file))

                  (macro relabelto_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabelto_file))

                  (macro relabelto_hoststmpfile_lnk_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabelto_lnk_file))

                  (macro relabelto_hoststmpfile_sock_files ((type ARG1))
                         (allow ARG1 hoststmpfile relabelto_sock_file))

                  (macro rename_hoststmpfile ((type ARG1))
                         (allow ARG1 hoststmpfile (allfiles (rename))))

                  (macro rename_hoststmpfile_blk_files ((type ARG1))
                         (allow ARG1 hoststmpfile rename_blk_file))

                  (macro rename_hoststmpfile_chr_files ((type ARG1))
                         (allow ARG1 hoststmpfile rename_chr_file))

                  (macro rename_hoststmpfile_dirs ((type ARG1))
                         (allow ARG1 hoststmpfile rename_dir))

                  (macro rename_hoststmpfile_fifo_files ((type ARG1))
                         (allow ARG1 hoststmpfile rename_fifo_file))

                  (macro rename_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile rename_file))

                  (macro rename_hoststmpfile_lnk_files ((type ARG1))
                         (allow ARG1 hoststmpfile rename_lnk_file))

                  (macro rename_hoststmpfile_sock_files ((type ARG1))
                         (allow ARG1 hoststmpfile rename_sock_file))

                  (macro search_hoststmpfile_dirs ((type ARG1))
                         (allow ARG1 hoststmpfile search_dir))

                  (macro write_hoststmpfile ((type ARG1))
                         (allow ARG1 hoststmpfile (allfiles (write))))

                  (macro write_hoststmpfile_blk_files ((type ARG1))
                         (allow ARG1 hoststmpfile write_blk_file))

                  (macro write_hoststmpfile_chr_files ((type ARG1))
                         (allow ARG1 hoststmpfile write_chr_file))

                  (macro write_hoststmpfile_dirs ((type ARG1))
                         (allow ARG1 hoststmpfile write_dir))

                  (macro write_hoststmpfile_fifo_files ((type ARG1))
                         (allow ARG1 hoststmpfile write_fifo_file))

                  (macro write_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile write_file))

                  (macro writeinherited_hoststmpfile_blk_files ((type ARG1))
                         (allow ARG1 hoststmpfile writeinherited_blk_file))

                  (macro writeinherited_hoststmpfile_chr_files ((type ARG1))
                         (allow ARG1 hoststmpfile writeinherited_chr_file))

                  (macro writeinherited_hoststmpfile_dirs ((type ARG1))
                         (allow ARG1 hoststmpfile writeinherited_dir))

                  (macro writeinherited_hoststmpfile_fifo_files ((type ARG1))
                         (allow ARG1 hoststmpfile writeinherited_fifo_file))

                  (macro writeinherited_hoststmpfile_files ((type ARG1))
                         (allow ARG1 hoststmpfile writeinherited_file))

                  (macro writeinherited_hoststmpfile_sock_files ((type ARG1))
                         (allow ARG1 hoststmpfile writeinherited_sock_file))

                  (macro write_hoststmpfile_lnk_files ((type ARG1))
                         (allow ARG1 hoststmpfile write_lnk_file))

                  (macro write_hoststmpfile_sock_files ((type ARG1))
                         (allow ARG1 hoststmpfile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .tmpfile.hosts.obj_base_template)
                  (blockinherit .tmpfile.hosts.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .tmpfile.obj_type_transition_runtimetmpfile
          (unconfined.subj_typeattr)))

(in .tmpfile

    ;;
    ;; Contexts
    ;;

    (filecon
     "/tmp/run"
     dir
     runtimetmpfile_file_context)
    (filecon
     "/tmp/run/.*"
     any
     runtimetmpfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_runtimetmpfile ((type ARG1))
           (call .tmp.fs_obj_type_transition
                 (ARG1 runtimetmpfile dir "run")))

    ;;
    ;; Policy
    ;;

    (blockinherit runtime.obj_template)

    (block runtime

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (call tmpfile.obj_type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   runtimetmpfile_file_context
                   (.u
                    .r
                    runtimetmpfile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   runtimetmpfile)

                  (call .tmpfile.runtime.obj_type (runtimetmpfile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_runtimetmpfile_dirs ((type ARG1))
                         (allow ARG1 runtimetmpfile addname_dir))

                  (macro append_runtimetmpfile_blk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile append_blk_file))

                  (macro append_runtimetmpfile_chr_files ((type ARG1))
                         (allow ARG1 runtimetmpfile append_chr_file))

                  (macro append_runtimetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 runtimetmpfile append_fifo_file))

                  (macro append_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile append_file))

                  (macro appendinherited_runtimetmpfile_blk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile appendinherited_blk_file))

                  (macro appendinherited_runtimetmpfile_chr_files ((type ARG1))
                         (allow ARG1 runtimetmpfile appendinherited_chr_file))

                  (macro appendinherited_runtimetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 runtimetmpfile appendinherited_fifo_file))

                  (macro appendinherited_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile appendinherited_file))

                  (macro create_runtimetmpfile ((type ARG1))
                         (allow ARG1 runtimetmpfile (allfiles (create))))

                  (macro create_runtimetmpfile_blk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile create_blk_file))

                  (macro create_runtimetmpfile_chr_files ((type ARG1))
                         (allow ARG1 runtimetmpfile create_chr_file))

                  (macro create_runtimetmpfile_dirs ((type ARG1))
                         (allow ARG1 runtimetmpfile create_dir))

                  (macro create_runtimetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 runtimetmpfile create_fifo_file))

                  (macro create_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile create_file))

                  (macro create_runtimetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile create_lnk_file))

                  (macro create_runtimetmpfile_sock_files ((type ARG1))
                         (allow ARG1 runtimetmpfile create_sock_file))

                  (macro deletename_runtimetmpfile_dirs ((type ARG1))
                         (allow ARG1 runtimetmpfile deletename_dir))

                  (macro delete_runtimetmpfile ((type ARG1))
                         (allow ARG1 runtimetmpfile (allfiles (delete))))

                  (macro delete_runtimetmpfile_blk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile delete_blk_file))

                  (macro delete_runtimetmpfile_chr_files ((type ARG1))
                         (allow ARG1 runtimetmpfile delete_chr_file))

                  (macro delete_runtimetmpfile_dirs ((type ARG1))
                         (allow ARG1 runtimetmpfile delete_dir))

                  (macro delete_runtimetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 runtimetmpfile delete_fifo_file))

                  (macro delete_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile delete_file))

                  (macro delete_runtimetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile delete_lnk_file))

                  (macro delete_runtimetmpfile_sock_files ((type ARG1))
                         (allow ARG1 runtimetmpfile delete_sock_file))

                  (macro execute_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile execute_file))

                  (macro list_runtimetmpfile_dirs ((type ARG1))
                         (allow ARG1 runtimetmpfile list_dir))

                  (macro listinherited_runtimetmpfile_dirs ((type ARG1))
                         (allow ARG1 runtimetmpfile listinherited_dir))

                  (macro manage_runtimetmpfile ((type ARG1))
                         (allow ARG1 runtimetmpfile (allfiles (manage))))

                  (macro manage_runtimetmpfile_blk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile manage_blk_file))

                  (macro manage_runtimetmpfile_chr_files ((type ARG1))
                         (allow ARG1 runtimetmpfile manage_chr_file))

                  (macro manage_runtimetmpfile_dirs ((type ARG1))
                         (allow ARG1 runtimetmpfile manage_dir))

                  (macro manage_runtimetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 runtimetmpfile manage_fifo_file))

                  (macro manage_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile manage_file))

                  (macro manage_runtimetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile manage_lnk_file))

                  (macro manage_runtimetmpfile_sock_files ((type ARG1))
                         (allow ARG1 runtimetmpfile manage_sock_file))

                  (macro mapexecute_runtimetmpfile_chr_files ((type ARG1))
                         (allow ARG1 runtimetmpfile mapexecute_chr_file))

                  (macro mapexecute_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile mapexecute_file))

                  (macro mounton_runtimetmpfile ((type ARG1))
                         (allow ARG1 runtimetmpfile (allfiles (mounton))))

                  (macro mounton_runtimetmpfile_blk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile mounton_blk_file))

                  (macro mounton_runtimetmpfile_chr_files ((type ARG1))
                         (allow ARG1 runtimetmpfile mounton_chr_file))

                  (macro mounton_runtimetmpfile_dirs ((type ARG1))
                         (allow ARG1 runtimetmpfile mounton_dir))

                  (macro mounton_runtimetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 runtimetmpfile mounton_fifo_file))

                  (macro mounton_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile mounton_file))

                  (macro mounton_runtimetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile mounton_lnk_file))

                  (macro mounton_runtimetmpfile_sock_files ((type ARG1))
                         (allow ARG1 runtimetmpfile mounton_sock_file))

                  (macro read_runtimetmpfile ((type ARG1))
                         (allow ARG1 runtimetmpfile (allfiles (read))))

                  (macro read_runtimetmpfile_blk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile read_blk_file))

                  (macro read_runtimetmpfile_chr_files ((type ARG1))
                         (allow ARG1 runtimetmpfile read_chr_file))

                  (macro read_runtimetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 runtimetmpfile read_fifo_file))

                  (macro read_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile read_file))

                  (macro readinherited_runtimetmpfile_blk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile readinherited_blk_file))

                  (macro readinherited_runtimetmpfile_chr_files ((type ARG1))
                         (allow ARG1 runtimetmpfile readinherited_chr_file))

                  (macro readinherited_runtimetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 runtimetmpfile readinherited_fifo_file))

                  (macro readinherited_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile readinherited_file))

                  (macro readinherited_runtimetmpfile_sock_files ((type ARG1))
                         (allow ARG1 runtimetmpfile readinherited_sock_file))

                  (macro read_runtimetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile read_lnk_file))

                  (macro read_runtimetmpfile_sock_files ((type ARG1))
                         (allow ARG1 runtimetmpfile read_sock_file))

                  (macro readwrite_runtimetmpfile ((type ARG1))
                         (allow ARG1 runtimetmpfile (allfiles (readwrite))))

                  (macro readwrite_runtimetmpfile_blk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile readwrite_blk_file))

                  (macro readwrite_runtimetmpfile_chr_files ((type ARG1))
                         (allow ARG1 runtimetmpfile readwrite_chr_file))

                  (macro readwrite_runtimetmpfile_dirs ((type ARG1))
                         (allow ARG1 runtimetmpfile readwrite_dir))

                  (macro readwrite_runtimetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 runtimetmpfile readwrite_fifo_file))

                  (macro readwrite_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile readwrite_file))

                  (macro readwriteinherited_runtimetmpfile_blk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile readwriteinherited_blk_file))

                  (macro readwriteinherited_runtimetmpfile_chr_files ((type ARG1))
                         (allow ARG1 runtimetmpfile readwriteinherited_chr_file))

                  (macro readwriteinherited_runtimetmpfile_dirs ((type ARG1))
                         (allow ARG1 runtimetmpfile readwriteinherited_dir))

                  (macro readwriteinherited_runtimetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 runtimetmpfile readwriteinherited_fifo_file))

                  (macro readwriteinherited_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile readwriteinherited_file))

                  (macro readwriteinherited_runtimetmpfile_sock_files ((type ARG1))
                         (allow ARG1 runtimetmpfile readwriteinherited_sock_file))

                  (macro readwrite_runtimetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile readwrite_lnk_file))

                  (macro readwrite_runtimetmpfile_sock_files ((type ARG1))
                         (allow ARG1 runtimetmpfile readwrite_sock_file))

                  (macro relabel_runtimetmpfile ((type ARG1))
                         (allow ARG1 runtimetmpfile (allfiles (relabel))))

                  (macro relabel_runtimetmpfile_blk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabel_blk_file))

                  (macro relabel_runtimetmpfile_chr_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabel_chr_file))

                  (macro relabel_runtimetmpfile_dirs ((type ARG1))
                         (allow ARG1 runtimetmpfile relabel_dir))

                  (macro relabel_runtimetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabel_fifo_file))

                  (macro relabel_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabel_file))

                  (macro relabel_runtimetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabel_lnk_file))

                  (macro relabel_runtimetmpfile_sock_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabel_sock_file))

                  (macro relabelfrom_runtimetmpfile ((type ARG1))
                         (allow ARG1 runtimetmpfile (allfiles (relabelfrom))))

                  (macro relabelfrom_runtimetmpfile_blk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabelfrom_blk_file))

                  (macro relabelfrom_runtimetmpfile_chr_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabelfrom_chr_file))

                  (macro relabelfrom_runtimetmpfile_dirs ((type ARG1))
                         (allow ARG1 runtimetmpfile relabelfrom_dir))

                  (macro relabelfrom_runtimetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabelfrom_fifo_file))

                  (macro relabelfrom_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabelfrom_file))

                  (macro relabelfrom_runtimetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabelfrom_lnk_file))

                  (macro relabelfrom_runtimetmpfile_sock_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabelfrom_sock_file))

                  (macro relabelto_runtimetmpfile ((type ARG1))
                         (allow ARG1 runtimetmpfile (allfiles (relabelto))))

                  (macro relabelto_runtimetmpfile_blk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabelto_blk_file))

                  (macro relabelto_runtimetmpfile_chr_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabelto_chr_file))

                  (macro relabelto_runtimetmpfile_dirs ((type ARG1))
                         (allow ARG1 runtimetmpfile relabelto_dir))

                  (macro relabelto_runtimetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabelto_fifo_file))

                  (macro relabelto_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabelto_file))

                  (macro relabelto_runtimetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabelto_lnk_file))

                  (macro relabelto_runtimetmpfile_sock_files ((type ARG1))
                         (allow ARG1 runtimetmpfile relabelto_sock_file))

                  (macro rename_runtimetmpfile ((type ARG1))
                         (allow ARG1 runtimetmpfile (allfiles (rename))))

                  (macro rename_runtimetmpfile_blk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile rename_blk_file))

                  (macro rename_runtimetmpfile_chr_files ((type ARG1))
                         (allow ARG1 runtimetmpfile rename_chr_file))

                  (macro rename_runtimetmpfile_dirs ((type ARG1))
                         (allow ARG1 runtimetmpfile rename_dir))

                  (macro rename_runtimetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 runtimetmpfile rename_fifo_file))

                  (macro rename_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile rename_file))

                  (macro rename_runtimetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile rename_lnk_file))

                  (macro rename_runtimetmpfile_sock_files ((type ARG1))
                         (allow ARG1 runtimetmpfile rename_sock_file))

                  (macro runtimetmpfile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 runtimetmpfile ARG3 ARG4 ARG2)
                         (call addname_runtimetmpfile_dirs (ARG1)))

                  (macro search_runtimetmpfile_dirs ((type ARG1))
                         (allow ARG1 runtimetmpfile search_dir))

                  (macro write_runtimetmpfile ((type ARG1))
                         (allow ARG1 runtimetmpfile (allfiles (write))))

                  (macro write_runtimetmpfile_blk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile write_blk_file))

                  (macro write_runtimetmpfile_chr_files ((type ARG1))
                         (allow ARG1 runtimetmpfile write_chr_file))

                  (macro write_runtimetmpfile_dirs ((type ARG1))
                         (allow ARG1 runtimetmpfile write_dir))

                  (macro write_runtimetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 runtimetmpfile write_fifo_file))

                  (macro write_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile write_file))

                  (macro writeinherited_runtimetmpfile_blk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile writeinherited_blk_file))

                  (macro writeinherited_runtimetmpfile_chr_files ((type ARG1))
                         (allow ARG1 runtimetmpfile writeinherited_chr_file))

                  (macro writeinherited_runtimetmpfile_dirs ((type ARG1))
                         (allow ARG1 runtimetmpfile writeinherited_dir))

                  (macro writeinherited_runtimetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 runtimetmpfile writeinherited_fifo_file))

                  (macro writeinherited_runtimetmpfile_files ((type ARG1))
                         (allow ARG1 runtimetmpfile writeinherited_file))

                  (macro writeinherited_runtimetmpfile_sock_files ((type ARG1))
                         (allow ARG1 runtimetmpfile writeinherited_sock_file))

                  (macro write_runtimetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 runtimetmpfile write_lnk_file))

                  (macro write_runtimetmpfile_sock_files ((type ARG1))
                         (allow ARG1 runtimetmpfile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .tmpfile.runtime.obj_base_template)
                  (blockinherit .tmpfile.runtime.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .tmpfile.obj_type_transition_statetmpfile
          (unconfined.subj_typeattr)))

(in .tmpfile

    ;;
    ;; Contexts
    ;;

    (filecon
     "/tmp/lib"
     dir
     statetmpfile_file_context)
    (filecon
     "/tmp/lib/.*"
     any
     statetmpfile_file_context)

    (filecon
     "/tmp/state"
     dir
     statetmpfile_file_context)
    (filecon
     "/tmp/state/.*"
     any
     statetmpfile_file_context)

    (filecon
     "/tmp/usr"
     dir
     statetmpfile_file_context)
    (filecon
     "/tmp/usr/.*"
     any
     statetmpfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_statetmpfile ((type ARG1))
           (call .tmp.fs_obj_type_transition
                 (ARG1 statetmpfile dir "lib"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 statetmpfile dir "state"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 statetmpfile dir "usr")))

    ;;
    ;; Policy
    ;;

    (blockinherit state.obj_template)

    (block state

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (call tmpfile.obj_type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   statetmpfile_file_context
                   (.u
                    .r
                    statetmpfile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   statetmpfile)

                  (call .tmpfile.state.obj_type (statetmpfile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_statetmpfile_dirs ((type ARG1))
                         (allow ARG1 statetmpfile addname_dir))

                  (macro append_statetmpfile_blk_files ((type ARG1))
                         (allow ARG1 statetmpfile append_blk_file))

                  (macro append_statetmpfile_chr_files ((type ARG1))
                         (allow ARG1 statetmpfile append_chr_file))

                  (macro append_statetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 statetmpfile append_fifo_file))

                  (macro append_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile append_file))

                  (macro appendinherited_statetmpfile_blk_files ((type ARG1))
                         (allow ARG1 statetmpfile appendinherited_blk_file))

                  (macro appendinherited_statetmpfile_chr_files ((type ARG1))
                         (allow ARG1 statetmpfile appendinherited_chr_file))

                  (macro appendinherited_statetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 statetmpfile appendinherited_fifo_file))

                  (macro appendinherited_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile appendinherited_file))

                  (macro create_statetmpfile ((type ARG1))
                         (allow ARG1 statetmpfile (allfiles (create))))

                  (macro create_statetmpfile_blk_files ((type ARG1))
                         (allow ARG1 statetmpfile create_blk_file))

                  (macro create_statetmpfile_chr_files ((type ARG1))
                         (allow ARG1 statetmpfile create_chr_file))

                  (macro create_statetmpfile_dirs ((type ARG1))
                         (allow ARG1 statetmpfile create_dir))

                  (macro create_statetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 statetmpfile create_fifo_file))

                  (macro create_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile create_file))

                  (macro create_statetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 statetmpfile create_lnk_file))

                  (macro create_statetmpfile_sock_files ((type ARG1))
                         (allow ARG1 statetmpfile create_sock_file))

                  (macro deletename_statetmpfile_dirs ((type ARG1))
                         (allow ARG1 statetmpfile deletename_dir))

                  (macro delete_statetmpfile ((type ARG1))
                         (allow ARG1 statetmpfile (allfiles (delete))))

                  (macro delete_statetmpfile_blk_files ((type ARG1))
                         (allow ARG1 statetmpfile delete_blk_file))

                  (macro delete_statetmpfile_chr_files ((type ARG1))
                         (allow ARG1 statetmpfile delete_chr_file))

                  (macro delete_statetmpfile_dirs ((type ARG1))
                         (allow ARG1 statetmpfile delete_dir))

                  (macro delete_statetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 statetmpfile delete_fifo_file))

                  (macro delete_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile delete_file))

                  (macro delete_statetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 statetmpfile delete_lnk_file))

                  (macro delete_statetmpfile_sock_files ((type ARG1))
                         (allow ARG1 statetmpfile delete_sock_file))

                  (macro execute_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile execute_file))

                  (macro list_statetmpfile_dirs ((type ARG1))
                         (allow ARG1 statetmpfile list_dir))

                  (macro listinherited_statetmpfile_dirs ((type ARG1))
                         (allow ARG1 statetmpfile listinherited_dir))

                  (macro manage_statetmpfile ((type ARG1))
                         (allow ARG1 statetmpfile (allfiles (manage))))

                  (macro manage_statetmpfile_blk_files ((type ARG1))
                         (allow ARG1 statetmpfile manage_blk_file))

                  (macro manage_statetmpfile_chr_files ((type ARG1))
                         (allow ARG1 statetmpfile manage_chr_file))

                  (macro manage_statetmpfile_dirs ((type ARG1))
                         (allow ARG1 statetmpfile manage_dir))

                  (macro manage_statetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 statetmpfile manage_fifo_file))

                  (macro manage_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile manage_file))

                  (macro manage_statetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 statetmpfile manage_lnk_file))

                  (macro manage_statetmpfile_sock_files ((type ARG1))
                         (allow ARG1 statetmpfile manage_sock_file))

                  (macro mapexecute_statetmpfile_chr_files ((type ARG1))
                         (allow ARG1 statetmpfile mapexecute_chr_file))

                  (macro mapexecute_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile mapexecute_file))

                  (macro mounton_statetmpfile ((type ARG1))
                         (allow ARG1 statetmpfile (allfiles (mounton))))

                  (macro mounton_statetmpfile_blk_files ((type ARG1))
                         (allow ARG1 statetmpfile mounton_blk_file))

                  (macro mounton_statetmpfile_chr_files ((type ARG1))
                         (allow ARG1 statetmpfile mounton_chr_file))

                  (macro mounton_statetmpfile_dirs ((type ARG1))
                         (allow ARG1 statetmpfile mounton_dir))

                  (macro mounton_statetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 statetmpfile mounton_fifo_file))

                  (macro mounton_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile mounton_file))

                  (macro mounton_statetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 statetmpfile mounton_lnk_file))

                  (macro mounton_statetmpfile_sock_files ((type ARG1))
                         (allow ARG1 statetmpfile mounton_sock_file))

                  (macro read_statetmpfile ((type ARG1))
                         (allow ARG1 statetmpfile (allfiles (read))))

                  (macro read_statetmpfile_blk_files ((type ARG1))
                         (allow ARG1 statetmpfile read_blk_file))

                  (macro read_statetmpfile_chr_files ((type ARG1))
                         (allow ARG1 statetmpfile read_chr_file))

                  (macro read_statetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 statetmpfile read_fifo_file))

                  (macro read_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile read_file))

                  (macro readinherited_statetmpfile_blk_files ((type ARG1))
                         (allow ARG1 statetmpfile readinherited_blk_file))

                  (macro readinherited_statetmpfile_chr_files ((type ARG1))
                         (allow ARG1 statetmpfile readinherited_chr_file))

                  (macro readinherited_statetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 statetmpfile readinherited_fifo_file))

                  (macro readinherited_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile readinherited_file))

                  (macro readinherited_statetmpfile_sock_files ((type ARG1))
                         (allow ARG1 statetmpfile readinherited_sock_file))

                  (macro read_statetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 statetmpfile read_lnk_file))

                  (macro read_statetmpfile_sock_files ((type ARG1))
                         (allow ARG1 statetmpfile read_sock_file))

                  (macro readwrite_statetmpfile ((type ARG1))
                         (allow ARG1 statetmpfile (allfiles (readwrite))))

                  (macro readwrite_statetmpfile_blk_files ((type ARG1))
                         (allow ARG1 statetmpfile readwrite_blk_file))

                  (macro readwrite_statetmpfile_chr_files ((type ARG1))
                         (allow ARG1 statetmpfile readwrite_chr_file))

                  (macro readwrite_statetmpfile_dirs ((type ARG1))
                         (allow ARG1 statetmpfile readwrite_dir))

                  (macro readwrite_statetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 statetmpfile readwrite_fifo_file))

                  (macro readwrite_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile readwrite_file))

                  (macro readwriteinherited_statetmpfile_blk_files ((type ARG1))
                         (allow ARG1 statetmpfile readwriteinherited_blk_file))

                  (macro readwriteinherited_statetmpfile_chr_files ((type ARG1))
                         (allow ARG1 statetmpfile readwriteinherited_chr_file))

                  (macro readwriteinherited_statetmpfile_dirs ((type ARG1))
                         (allow ARG1 statetmpfile readwriteinherited_dir))

                  (macro readwriteinherited_statetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 statetmpfile readwriteinherited_fifo_file))

                  (macro readwriteinherited_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile readwriteinherited_file))

                  (macro readwriteinherited_statetmpfile_sock_files ((type ARG1))
                         (allow ARG1 statetmpfile readwriteinherited_sock_file))

                  (macro readwrite_statetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 statetmpfile readwrite_lnk_file))

                  (macro readwrite_statetmpfile_sock_files ((type ARG1))
                         (allow ARG1 statetmpfile readwrite_sock_file))

                  (macro relabel_statetmpfile ((type ARG1))
                         (allow ARG1 statetmpfile (allfiles (relabel))))

                  (macro relabel_statetmpfile_blk_files ((type ARG1))
                         (allow ARG1 statetmpfile relabel_blk_file))

                  (macro relabel_statetmpfile_chr_files ((type ARG1))
                         (allow ARG1 statetmpfile relabel_chr_file))

                  (macro relabel_statetmpfile_dirs ((type ARG1))
                         (allow ARG1 statetmpfile relabel_dir))

                  (macro relabel_statetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 statetmpfile relabel_fifo_file))

                  (macro relabel_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile relabel_file))

                  (macro relabel_statetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 statetmpfile relabel_lnk_file))

                  (macro relabel_statetmpfile_sock_files ((type ARG1))
                         (allow ARG1 statetmpfile relabel_sock_file))

                  (macro relabelfrom_statetmpfile ((type ARG1))
                         (allow ARG1 statetmpfile (allfiles (relabelfrom))))

                  (macro relabelfrom_statetmpfile_blk_files ((type ARG1))
                         (allow ARG1 statetmpfile relabelfrom_blk_file))

                  (macro relabelfrom_statetmpfile_chr_files ((type ARG1))
                         (allow ARG1 statetmpfile relabelfrom_chr_file))

                  (macro relabelfrom_statetmpfile_dirs ((type ARG1))
                         (allow ARG1 statetmpfile relabelfrom_dir))

                  (macro relabelfrom_statetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 statetmpfile relabelfrom_fifo_file))

                  (macro relabelfrom_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile relabelfrom_file))

                  (macro relabelfrom_statetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 statetmpfile relabelfrom_lnk_file))

                  (macro relabelfrom_statetmpfile_sock_files ((type ARG1))
                         (allow ARG1 statetmpfile relabelfrom_sock_file))

                  (macro relabelto_statetmpfile ((type ARG1))
                         (allow ARG1 statetmpfile (allfiles (relabelto))))

                  (macro relabelto_statetmpfile_blk_files ((type ARG1))
                         (allow ARG1 statetmpfile relabelto_blk_file))

                  (macro relabelto_statetmpfile_chr_files ((type ARG1))
                         (allow ARG1 statetmpfile relabelto_chr_file))

                  (macro relabelto_statetmpfile_dirs ((type ARG1))
                         (allow ARG1 statetmpfile relabelto_dir))

                  (macro relabelto_statetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 statetmpfile relabelto_fifo_file))

                  (macro relabelto_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile relabelto_file))

                  (macro relabelto_statetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 statetmpfile relabelto_lnk_file))

                  (macro relabelto_statetmpfile_sock_files ((type ARG1))
                         (allow ARG1 statetmpfile relabelto_sock_file))

                  (macro rename_statetmpfile ((type ARG1))
                         (allow ARG1 statetmpfile (allfiles (rename))))

                  (macro rename_statetmpfile_blk_files ((type ARG1))
                         (allow ARG1 statetmpfile rename_blk_file))

                  (macro rename_statetmpfile_chr_files ((type ARG1))
                         (allow ARG1 statetmpfile rename_chr_file))

                  (macro rename_statetmpfile_dirs ((type ARG1))
                         (allow ARG1 statetmpfile rename_dir))

                  (macro rename_statetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 statetmpfile rename_fifo_file))

                  (macro rename_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile rename_file))

                  (macro rename_statetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 statetmpfile rename_lnk_file))

                  (macro rename_statetmpfile_sock_files ((type ARG1))
                         (allow ARG1 statetmpfile rename_sock_file))

                  (macro search_statetmpfile_dirs ((type ARG1))
                         (allow ARG1 statetmpfile search_dir))

                  (macro statetmpfile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 statetmpfile ARG3 ARG4 ARG2)
                         (call addname_statetmpfile_dirs (ARG1)))

                  (macro write_statetmpfile ((type ARG1))
                         (allow ARG1 statetmpfile (allfiles (write))))

                  (macro write_statetmpfile_blk_files ((type ARG1))
                         (allow ARG1 statetmpfile write_blk_file))

                  (macro write_statetmpfile_chr_files ((type ARG1))
                         (allow ARG1 statetmpfile write_chr_file))

                  (macro write_statetmpfile_dirs ((type ARG1))
                         (allow ARG1 statetmpfile write_dir))

                  (macro write_statetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 statetmpfile write_fifo_file))

                  (macro write_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile write_file))

                  (macro writeinherited_statetmpfile_blk_files ((type ARG1))
                         (allow ARG1 statetmpfile writeinherited_blk_file))

                  (macro writeinherited_statetmpfile_chr_files ((type ARG1))
                         (allow ARG1 statetmpfile writeinherited_chr_file))

                  (macro writeinherited_statetmpfile_dirs ((type ARG1))
                         (allow ARG1 statetmpfile writeinherited_dir))

                  (macro writeinherited_statetmpfile_fifo_files ((type ARG1))
                         (allow ARG1 statetmpfile writeinherited_fifo_file))

                  (macro writeinherited_statetmpfile_files ((type ARG1))
                         (allow ARG1 statetmpfile writeinherited_file))

                  (macro writeinherited_statetmpfile_sock_files ((type ARG1))
                         (allow ARG1 statetmpfile writeinherited_sock_file))

                  (macro write_statetmpfile_lnk_files ((type ARG1))
                         (allow ARG1 statetmpfile write_lnk_file))

                  (macro write_statetmpfile_sock_files ((type ARG1))
                         (allow ARG1 statetmpfile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .tmpfile.state.obj_base_template)
                  (blockinherit .tmpfile.state.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .file
    (call .tmpfile.obj_type_transition_locktmpfile (unconfined.subj_typeattr)))

(in .tmpfile

    ;;
    ;; Contexts
    ;;

    (filecon
     "/tmp/lock"
     dir
     locktmpfile_file_context)
    (filecon
     "/tmp/lock/.*"
     any
     locktmpfile_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_locktmpfile ((type ARG1))
           (call .tmp.fs_obj_type_transition
                 (ARG1 locktmpfile dir "lock")))

    ;;
    ;; Policy
    ;;

    (blockinherit lock.obj_template)

    (block lock

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (call tmpfile.obj_type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   locktmpfile_file_context
                   (.u
                    .r
                    locktmpfile
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   locktmpfile)

                  (call .tmpfile.lock.obj_type (locktmpfile)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_locktmpfile_dirs ((type ARG1))
                         (allow ARG1 locktmpfile addname_dir))

                  (macro append_locktmpfile_blk_files ((type ARG1))
                         (allow ARG1 locktmpfile append_blk_file))

                  (macro append_locktmpfile_chr_files ((type ARG1))
                         (allow ARG1 locktmpfile append_chr_file))

                  (macro append_locktmpfile_fifo_files ((type ARG1))
                         (allow ARG1 locktmpfile append_fifo_file))

                  (macro append_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile append_file))

                  (macro appendinherited_locktmpfile_blk_files ((type ARG1))
                         (allow ARG1 locktmpfile appendinherited_blk_file))

                  (macro appendinherited_locktmpfile_chr_files ((type ARG1))
                         (allow ARG1 locktmpfile appendinherited_chr_file))

                  (macro appendinherited_locktmpfile_fifo_files ((type ARG1))
                         (allow ARG1 locktmpfile appendinherited_fifo_file))

                  (macro appendinherited_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile appendinherited_file))

                  (macro create_locktmpfile ((type ARG1))
                         (allow ARG1 locktmpfile (allfiles (create))))

                  (macro create_locktmpfile_blk_files ((type ARG1))
                         (allow ARG1 locktmpfile create_blk_file))

                  (macro create_locktmpfile_chr_files ((type ARG1))
                         (allow ARG1 locktmpfile create_chr_file))

                  (macro create_locktmpfile_dirs ((type ARG1))
                         (allow ARG1 locktmpfile create_dir))

                  (macro create_locktmpfile_fifo_files ((type ARG1))
                         (allow ARG1 locktmpfile create_fifo_file))

                  (macro create_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile create_file))

                  (macro create_locktmpfile_lnk_files ((type ARG1))
                         (allow ARG1 locktmpfile create_lnk_file))

                  (macro create_locktmpfile_sock_files ((type ARG1))
                         (allow ARG1 locktmpfile create_sock_file))

                  (macro deletename_locktmpfile_dirs ((type ARG1))
                         (allow ARG1 locktmpfile deletename_dir))

                  (macro delete_locktmpfile ((type ARG1))
                         (allow ARG1 locktmpfile (allfiles (delete))))

                  (macro delete_locktmpfile_blk_files ((type ARG1))
                         (allow ARG1 locktmpfile delete_blk_file))

                  (macro delete_locktmpfile_chr_files ((type ARG1))
                         (allow ARG1 locktmpfile delete_chr_file))

                  (macro delete_locktmpfile_dirs ((type ARG1))
                         (allow ARG1 locktmpfile delete_dir))

                  (macro delete_locktmpfile_fifo_files ((type ARG1))
                         (allow ARG1 locktmpfile delete_fifo_file))

                  (macro delete_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile delete_file))

                  (macro delete_locktmpfile_lnk_files ((type ARG1))
                         (allow ARG1 locktmpfile delete_lnk_file))

                  (macro delete_locktmpfile_sock_files ((type ARG1))
                         (allow ARG1 locktmpfile delete_sock_file))

                  (macro execute_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile execute_file))

                  (macro list_locktmpfile_dirs ((type ARG1))
                         (allow ARG1 locktmpfile list_dir))

                  (macro listinherited_locktmpfile_dirs ((type ARG1))
                         (allow ARG1 locktmpfile listinherited_dir))

                  (macro locktmpfile_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 locktmpfile ARG3 ARG4 ARG2)
                         (call addname_locktmpfile_dirs (ARG1)))

                  (macro manage_locktmpfile ((type ARG1))
                         (allow ARG1 locktmpfile (allfiles (manage))))

                  (macro manage_locktmpfile_blk_files ((type ARG1))
                         (allow ARG1 locktmpfile manage_blk_file))

                  (macro manage_locktmpfile_chr_files ((type ARG1))
                         (allow ARG1 locktmpfile manage_chr_file))

                  (macro manage_locktmpfile_dirs ((type ARG1))
                         (allow ARG1 locktmpfile manage_dir))

                  (macro manage_locktmpfile_fifo_files ((type ARG1))
                         (allow ARG1 locktmpfile manage_fifo_file))

                  (macro manage_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile manage_file))

                  (macro manage_locktmpfile_lnk_files ((type ARG1))
                         (allow ARG1 locktmpfile manage_lnk_file))

                  (macro manage_locktmpfile_sock_files ((type ARG1))
                         (allow ARG1 locktmpfile manage_sock_file))

                  (macro mapexecute_locktmpfile_chr_files ((type ARG1))
                         (allow ARG1 locktmpfile mapexecute_chr_file))

                  (macro mapexecute_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile mapexecute_file))

                  (macro mounton_locktmpfile ((type ARG1))
                         (allow ARG1 locktmpfile (allfiles (mounton))))

                  (macro mounton_locktmpfile_blk_files ((type ARG1))
                         (allow ARG1 locktmpfile mounton_blk_file))

                  (macro mounton_locktmpfile_chr_files ((type ARG1))
                         (allow ARG1 locktmpfile mounton_chr_file))

                  (macro mounton_locktmpfile_dirs ((type ARG1))
                         (allow ARG1 locktmpfile mounton_dir))

                  (macro mounton_locktmpfile_fifo_files ((type ARG1))
                         (allow ARG1 locktmpfile mounton_fifo_file))

                  (macro mounton_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile mounton_file))

                  (macro mounton_locktmpfile_lnk_files ((type ARG1))
                         (allow ARG1 locktmpfile mounton_lnk_file))

                  (macro mounton_locktmpfile_sock_files ((type ARG1))
                         (allow ARG1 locktmpfile mounton_sock_file))

                  (macro read_locktmpfile ((type ARG1))
                         (allow ARG1 locktmpfile (allfiles (read))))

                  (macro read_locktmpfile_blk_files ((type ARG1))
                         (allow ARG1 locktmpfile read_blk_file))

                  (macro read_locktmpfile_chr_files ((type ARG1))
                         (allow ARG1 locktmpfile read_chr_file))

                  (macro read_locktmpfile_fifo_files ((type ARG1))
                         (allow ARG1 locktmpfile read_fifo_file))

                  (macro read_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile read_file))

                  (macro readinherited_locktmpfile_blk_files ((type ARG1))
                         (allow ARG1 locktmpfile readinherited_blk_file))

                  (macro readinherited_locktmpfile_chr_files ((type ARG1))
                         (allow ARG1 locktmpfile readinherited_chr_file))

                  (macro readinherited_locktmpfile_fifo_files ((type ARG1))
                         (allow ARG1 locktmpfile readinherited_fifo_file))

                  (macro readinherited_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile readinherited_file))

                  (macro readinherited_locktmpfile_sock_files ((type ARG1))
                         (allow ARG1 locktmpfile readinherited_sock_file))

                  (macro read_locktmpfile_lnk_files ((type ARG1))
                         (allow ARG1 locktmpfile read_lnk_file))

                  (macro read_locktmpfile_sock_files ((type ARG1))
                         (allow ARG1 locktmpfile read_sock_file))

                  (macro readwrite_locktmpfile ((type ARG1))
                         (allow ARG1 locktmpfile (allfiles (readwrite))))

                  (macro readwrite_locktmpfile_blk_files ((type ARG1))
                         (allow ARG1 locktmpfile readwrite_blk_file))

                  (macro readwrite_locktmpfile_chr_files ((type ARG1))
                         (allow ARG1 locktmpfile readwrite_chr_file))

                  (macro readwrite_locktmpfile_dirs ((type ARG1))
                         (allow ARG1 locktmpfile readwrite_dir))

                  (macro readwrite_locktmpfile_fifo_files ((type ARG1))
                         (allow ARG1 locktmpfile readwrite_fifo_file))

                  (macro readwrite_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile readwrite_file))

                  (macro readwriteinherited_locktmpfile_blk_files ((type ARG1))
                         (allow ARG1 locktmpfile readwriteinherited_blk_file))

                  (macro readwriteinherited_locktmpfile_chr_files ((type ARG1))
                         (allow ARG1 locktmpfile readwriteinherited_chr_file))

                  (macro readwriteinherited_locktmpfile_dirs ((type ARG1))
                         (allow ARG1 locktmpfile readwriteinherited_dir))

                  (macro readwriteinherited_locktmpfile_fifo_files ((type ARG1))
                         (allow ARG1 locktmpfile readwriteinherited_fifo_file))

                  (macro readwriteinherited_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile readwriteinherited_file))

                  (macro readwriteinherited_locktmpfile_sock_files ((type ARG1))
                         (allow ARG1 locktmpfile readwriteinherited_sock_file))

                  (macro readwrite_locktmpfile_lnk_files ((type ARG1))
                         (allow ARG1 locktmpfile readwrite_lnk_file))

                  (macro readwrite_locktmpfile_sock_files ((type ARG1))
                         (allow ARG1 locktmpfile readwrite_sock_file))

                  (macro relabel_locktmpfile ((type ARG1))
                         (allow ARG1 locktmpfile (allfiles (relabel))))

                  (macro relabel_locktmpfile_blk_files ((type ARG1))
                         (allow ARG1 locktmpfile relabel_blk_file))

                  (macro relabel_locktmpfile_chr_files ((type ARG1))
                         (allow ARG1 locktmpfile relabel_chr_file))

                  (macro relabel_locktmpfile_dirs ((type ARG1))
                         (allow ARG1 locktmpfile relabel_dir))

                  (macro relabel_locktmpfile_fifo_files ((type ARG1))
                         (allow ARG1 locktmpfile relabel_fifo_file))

                  (macro relabel_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile relabel_file))

                  (macro relabel_locktmpfile_lnk_files ((type ARG1))
                         (allow ARG1 locktmpfile relabel_lnk_file))

                  (macro relabel_locktmpfile_sock_files ((type ARG1))
                         (allow ARG1 locktmpfile relabel_sock_file))

                  (macro relabelfrom_locktmpfile ((type ARG1))
                         (allow ARG1 locktmpfile (allfiles (relabelfrom))))

                  (macro relabelfrom_locktmpfile_blk_files ((type ARG1))
                         (allow ARG1 locktmpfile relabelfrom_blk_file))

                  (macro relabelfrom_locktmpfile_chr_files ((type ARG1))
                         (allow ARG1 locktmpfile relabelfrom_chr_file))

                  (macro relabelfrom_locktmpfile_dirs ((type ARG1))
                         (allow ARG1 locktmpfile relabelfrom_dir))

                  (macro relabelfrom_locktmpfile_fifo_files ((type ARG1))
                         (allow ARG1 locktmpfile relabelfrom_fifo_file))

                  (macro relabelfrom_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile relabelfrom_file))

                  (macro relabelfrom_locktmpfile_lnk_files ((type ARG1))
                         (allow ARG1 locktmpfile relabelfrom_lnk_file))

                  (macro relabelfrom_locktmpfile_sock_files ((type ARG1))
                         (allow ARG1 locktmpfile relabelfrom_sock_file))

                  (macro relabelto_locktmpfile ((type ARG1))
                         (allow ARG1 locktmpfile (allfiles (relabelto))))

                  (macro relabelto_locktmpfile_blk_files ((type ARG1))
                         (allow ARG1 locktmpfile relabelto_blk_file))

                  (macro relabelto_locktmpfile_chr_files ((type ARG1))
                         (allow ARG1 locktmpfile relabelto_chr_file))

                  (macro relabelto_locktmpfile_dirs ((type ARG1))
                         (allow ARG1 locktmpfile relabelto_dir))

                  (macro relabelto_locktmpfile_fifo_files ((type ARG1))
                         (allow ARG1 locktmpfile relabelto_fifo_file))

                  (macro relabelto_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile relabelto_file))

                  (macro relabelto_locktmpfile_lnk_files ((type ARG1))
                         (allow ARG1 locktmpfile relabelto_lnk_file))

                  (macro relabelto_locktmpfile_sock_files ((type ARG1))
                         (allow ARG1 locktmpfile relabelto_sock_file))

                  (macro rename_locktmpfile ((type ARG1))
                         (allow ARG1 locktmpfile (allfiles (rename))))

                  (macro rename_locktmpfile_blk_files ((type ARG1))
                         (allow ARG1 locktmpfile rename_blk_file))

                  (macro rename_locktmpfile_chr_files ((type ARG1))
                         (allow ARG1 locktmpfile rename_chr_file))

                  (macro rename_locktmpfile_dirs ((type ARG1))
                         (allow ARG1 locktmpfile rename_dir))

                  (macro rename_locktmpfile_fifo_files ((type ARG1))
                         (allow ARG1 locktmpfile rename_fifo_file))

                  (macro rename_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile rename_file))

                  (macro rename_locktmpfile_lnk_files ((type ARG1))
                         (allow ARG1 locktmpfile rename_lnk_file))

                  (macro rename_locktmpfile_sock_files ((type ARG1))
                         (allow ARG1 locktmpfile rename_sock_file))

                  (macro search_locktmpfile_dirs ((type ARG1))
                         (allow ARG1 locktmpfile search_dir))

                  (macro write_locktmpfile ((type ARG1))
                         (allow ARG1 locktmpfile (allfiles (write))))

                  (macro write_locktmpfile_blk_files ((type ARG1))
                         (allow ARG1 locktmpfile write_blk_file))

                  (macro write_locktmpfile_chr_files ((type ARG1))
                         (allow ARG1 locktmpfile write_chr_file))

                  (macro write_locktmpfile_dirs ((type ARG1))
                         (allow ARG1 locktmpfile write_dir))

                  (macro write_locktmpfile_fifo_files ((type ARG1))
                         (allow ARG1 locktmpfile write_fifo_file))

                  (macro write_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile write_file))

                  (macro writeinherited_locktmpfile_blk_files ((type ARG1))
                         (allow ARG1 locktmpfile writeinherited_blk_file))

                  (macro writeinherited_locktmpfile_chr_files ((type ARG1))
                         (allow ARG1 locktmpfile writeinherited_chr_file))

                  (macro writeinherited_locktmpfile_dirs ((type ARG1))
                         (allow ARG1 locktmpfile writeinherited_dir))

                  (macro writeinherited_locktmpfile_fifo_files ((type ARG1))
                         (allow ARG1 locktmpfile writeinherited_fifo_file))

                  (macro writeinherited_locktmpfile_files ((type ARG1))
                         (allow ARG1 locktmpfile writeinherited_file))

                  (macro writeinherited_locktmpfile_sock_files ((type ARG1))
                         (allow ARG1 locktmpfile writeinherited_sock_file))

                  (macro write_locktmpfile_lnk_files ((type ARG1))
                         (allow ARG1 locktmpfile write_lnk_file))

                  (macro write_locktmpfile_sock_files ((type ARG1))
                         (allow ARG1 locktmpfile write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .tmpfile.lock.obj_base_template)
                  (blockinherit .tmpfile.lock.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .qos.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block qos

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/cpu_dma_latency"
        char
        nodedev_file_context)
       (filecon
        "/dev/memory_bandwidth"
        char
        nodedev_file_context)
       (filecon
        "/dev/network_latency"
        char
        nodedev_file_context)
       (filecon
        "/dev/network_throughput"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "cpu_dma_latency"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "memory_bandwith"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "network_latency"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "network_throughput")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .random.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block random

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/hw_random"
        char
        nodedev_file_context)
       (filecon
        "/dev/hwrng"
        char
        nodedev_file_context)
       (filecon
        "/dev/random"
        char
        nodedev_file_context)
       (filecon
        "/dev/urandom"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "hw_random"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "hwrng"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "random"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "urandom")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .i2c.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block i2c

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/i2c-[0-9]+"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "i2c-0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "i2c-1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "i2c-2")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .framebuf.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block framebuf

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/fb([0-9]+)?"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "fb0")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .nvram.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block nvram

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/nvram"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "nvram")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .dmctl.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block dmctl

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/btrfs-control"
        char
        nodedev_file_context)
       (filecon
        "/dev/mapper/control"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "btrfs-control"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "control")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .dri.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block dri

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/dri/.+"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "card0")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .vmci.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block vmci

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/vmci"
        char
        nodedev_file_context)
       (filecon
        "/dev/vsock"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "vmci"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "vsock")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .cpu.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(in .cpu

    ;;
    ;; Contexts
    ;;

    (filecon
     "/dev/cpu([0-9]+)?"
     char
     nodedev_file_context)
    (filecon
     "/dev/cpu/.+"
     char
     nodedev_file_context)
    (filecon
     "/dev/msr([0-9]+)?"
     char
     nodedev_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_nodedev ((type ARG1))
           (call .tmp.fs_obj_type_transition
                 (ARG1 nodedev chr_file "cpu0"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 nodedev chr_file "cpu1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 nodedev chr_file "cpu2"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 nodedev chr_file "cpu3"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 nodedev chr_file "cpuid"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 nodedev chr_file "microcode"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 nodedev chr_file "msr"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 nodedev chr_file "msr0"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 nodedev chr_file "msr1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 nodedev chr_file "msr2"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 nodedev chr_file "msr3")))

    ;;
    ;; Policy
    ;;

    (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .ppp.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block ppp

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/ppp"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "ppp")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .usb.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block usb

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/bus/usb/.+"
        char
        nodedev_file_context)

       (filecon
        "/dev/usb([0-9]+)?"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "001"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "002"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "003"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "004"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "005"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "006"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "007"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "008"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "009"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "010"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "011"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "012"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "013"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "014"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "015"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "016"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "017"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "018"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "019"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "020"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "usb1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "usb2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "usb3")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .gpio.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block gpio

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/gpiochip([0-9]+)?"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "gpiochip0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "gpiochip1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "gpiochip2")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(sid
 devnull)

(sidcontext
 devnull
 (.u
  .r
  .null.nodedev
  (systemlow
   systemlow)))

(block null

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/full"
        char
        nodedev_file_context)
       (filecon
        "/dev/null"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "full"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "null")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template)

       (call obj_type_transition_nodedev (unconfined.subj_typeattr)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .zero.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block zero

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/zero"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro map_nodedev_chr_files ((type ARG1))
              (allow ARG1 nodedev (chr_file (map))))

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "zero")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .iio.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block iio

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/iio:device[0-9]+"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "iio:device0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "iio:device1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "iio:device2")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .autofs.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block autofs

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/autofs"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "autofs")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .tty.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block tty

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/tty"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "tty")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .ptmx.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block ptmx

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/ptmx"
        char
        nodedev_file_context)
       (filecon
        "/dev/pts/ptmx"
        char
        ())

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "ptmx")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .watchdog.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block watchdog

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/watchdog([0-9]+)?"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "watchdog"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "watchdog0")))

       (macro dontaudit_writeinherited_nodedev_chr_files ((type ARG1))
              (dontaudit ARG1 nodedev writeinherited_chr_file))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .clock.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block clock

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/hpet"
        char
        nodedev_file_context)
       (filecon
        "/dev/rtc([0-9]+)?"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "hpet"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "rtc0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "rtc1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "rtc2")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .kmsg.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block kmsg

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/kmsg"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "kmsg")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .loopctl.obj_type_transition_nodedev (unconfined.subj_typeattr)))

(block loopctl

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/loop-control"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "loop-control")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block mem

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/kmem"
        char
        nodedev_file_context)
       (filecon
        "/dev/mem"
        char
        nodedev_file_context)
       (filecon
        "/dev/port"
        char
        nodedev_file_context)

       ;;
       ;; Macros
       ;;

       (macro getattr_nodedev_chr_files ((type ARG1))
              (allow ARG1 nodedev (chr_file (getattr))))

       (macro obj_type_transition_nodedev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "kmem"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "mem"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 nodedev chr_file "port")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.node.obj_template)

       (call obj_type_transition_nodedev (unconfined.subj_typeattr))

       (call readwrite.subj_type (unconfined.subj_typeattr))

       (block read

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (typeattribute
               not_subj_typeattr)

              (typeattributeset
               not_subj_typeattr
               (not
                subj_typeattr))

              (neverallow not_subj_typeattr nodedev (chr_file (read)))
              )

       (block readwrite

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (call read.subj_type (subj_typeattr))
              (call write.subj_type (subj_typeattr))

              (call subj_type (unconfined.subj_typeattr)))

       (block write

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (typeattribute
               not_subj_typeattr)

              (typeattributeset
               not_subj_typeattr
               (not
                subj_typeattr))

              (neverallow not_subj_typeattr nodedev
                          (chr_file (append write)))
       ))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev

    ;;
    ;; Policy
    ;;

    (call stor.readwrite.subj_type (unconfined.subj_typeattr))

    (block stor

           ;;
           ;; Macros
           ;;

           (macro getattr_all_blk_files ((type ARG1))
                  (allow ARG1 obj_typeattr (blk_file (getattr))))

           (macro getattr_all_chr_files ((type ARG1))
                  (allow ARG1 obj_typeattr (chr_file (getattr))))

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (call dev.obj_type (obj_typeattr))

           (call readwrite.subj_type (unconfined.subj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   stordev_file_context
                   (.u
                    .r
                    stordev
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   stordev)

                  (call .dev.stor.obj_type (stordev)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_stordev_dirs ((type ARG1))
                         (allow ARG1 stordev addname_dir))

                  (macro append_stordev_blk_files ((type ARG1))
                         (allow ARG1 stordev append_blk_file))

                  (macro append_stordev_chr_files ((type ARG1))
                         (allow ARG1 stordev append_chr_file))

                  (macro append_stordev_fifo_files ((type ARG1))
                         (allow ARG1 stordev append_fifo_file))

                  (macro append_stordev_files ((type ARG1))
                         (allow ARG1 stordev append_file))

                  (macro appendinherited_stordev_blk_files ((type ARG1))
                         (allow ARG1 stordev appendinherited_blk_file))

                  (macro appendinherited_stordev_chr_files ((type ARG1))
                         (allow ARG1 stordev appendinherited_chr_file))

                  (macro appendinherited_stordev_fifo_files ((type ARG1))
                         (allow ARG1 stordev appendinherited_fifo_file))

                  (macro appendinherited_stordev_files ((type ARG1))
                         (allow ARG1 stordev appendinherited_file))

                  (macro create_stordev ((type ARG1))
                         (allow ARG1 stordev (allfiles (create))))

                  (macro create_stordev_blk_files ((type ARG1))
                         (allow ARG1 stordev create_blk_file))

                  (macro create_stordev_chr_files ((type ARG1))
                         (allow ARG1 stordev create_chr_file))

                  (macro create_stordev_dirs ((type ARG1))
                         (allow ARG1 stordev create_dir))

                  (macro create_stordev_fifo_files ((type ARG1))
                         (allow ARG1 stordev create_fifo_file))

                  (macro create_stordev_files ((type ARG1))
                         (allow ARG1 stordev create_file))

                  (macro create_stordev_lnk_files ((type ARG1))
                         (allow ARG1 stordev create_lnk_file))

                  (macro create_stordev_sock_files ((type ARG1))
                         (allow ARG1 stordev create_sock_file))

                  (macro deletename_stordev_dirs ((type ARG1))
                         (allow ARG1 stordev deletename_dir))

                  (macro delete_stordev ((type ARG1))
                         (allow ARG1 stordev (allfiles (delete))))

                  (macro delete_stordev_blk_files ((type ARG1))
                         (allow ARG1 stordev delete_blk_file))

                  (macro delete_stordev_chr_files ((type ARG1))
                         (allow ARG1 stordev delete_chr_file))

                  (macro delete_stordev_dirs ((type ARG1))
                         (allow ARG1 stordev delete_dir))

                  (macro delete_stordev_fifo_files ((type ARG1))
                         (allow ARG1 stordev delete_fifo_file))

                  (macro delete_stordev_files ((type ARG1))
                         (allow ARG1 stordev delete_file))

                  (macro delete_stordev_lnk_files ((type ARG1))
                         (allow ARG1 stordev delete_lnk_file))

                  (macro delete_stordev_sock_files ((type ARG1))
                         (allow ARG1 stordev delete_sock_file))

                  (macro execute_stordev_files ((type ARG1))
                         (allow ARG1 stordev execute_file))

                  (macro list_stordev_dirs ((type ARG1))
                         (allow ARG1 stordev list_dir))

                  (macro listinherited_stordev_dirs ((type ARG1))
                         (allow ARG1 stordev listinherited_dir))

                  (macro manage_stordev ((type ARG1))
                         (allow ARG1 stordev (allfiles (manage))))

                  (macro manage_stordev_blk_files ((type ARG1))
                         (allow ARG1 stordev manage_blk_file))

                  (macro manage_stordev_chr_files ((type ARG1))
                         (allow ARG1 stordev manage_chr_file))

                  (macro manage_stordev_dirs ((type ARG1))
                         (allow ARG1 stordev manage_dir))

                  (macro manage_stordev_fifo_files ((type ARG1))
                         (allow ARG1 stordev manage_fifo_file))

                  (macro manage_stordev_files ((type ARG1))
                         (allow ARG1 stordev manage_file))

                  (macro manage_stordev_lnk_files ((type ARG1))
                         (allow ARG1 stordev manage_lnk_file))

                  (macro manage_stordev_sock_files ((type ARG1))
                         (allow ARG1 stordev manage_sock_file))

                  (macro mapexecute_stordev_chr_files ((type ARG1))
                         (allow ARG1 stordev mapexecute_chr_file))

                  (macro mapexecute_stordev_files ((type ARG1))
                         (allow ARG1 stordev mapexecute_file))

                  (macro mounton_stordev ((type ARG1))
                         (allow ARG1 stordev (allfiles (mounton))))

                  (macro mounton_stordev_blk_files ((type ARG1))
                         (allow ARG1 stordev mounton_blk_file))

                  (macro mounton_stordev_chr_files ((type ARG1))
                         (allow ARG1 stordev mounton_chr_file))

                  (macro mounton_stordev_dirs ((type ARG1))
                         (allow ARG1 stordev mounton_dir))

                  (macro mounton_stordev_fifo_files ((type ARG1))
                         (allow ARG1 stordev mounton_fifo_file))

                  (macro mounton_stordev_files ((type ARG1))
                         (allow ARG1 stordev mounton_file))

                  (macro mounton_stordev_lnk_files ((type ARG1))
                         (allow ARG1 stordev mounton_lnk_file))

                  (macro mounton_stordev_sock_files ((type ARG1))
                         (allow ARG1 stordev mounton_sock_file))

                  (macro read_stordev ((type ARG1))
                         (allow ARG1 stordev (allfiles (read))))

                  (macro read_stordev_blk_files ((type ARG1))
                         (allow ARG1 stordev read_blk_file))

                  (macro read_stordev_chr_files ((type ARG1))
                         (allow ARG1 stordev read_chr_file))

                  (macro read_stordev_fifo_files ((type ARG1))
                         (allow ARG1 stordev read_fifo_file))

                  (macro read_stordev_files ((type ARG1))
                         (allow ARG1 stordev read_file))

                  (macro readinherited_stordev_blk_files ((type ARG1))
                         (allow ARG1 stordev readinherited_blk_file))

                  (macro readinherited_stordev_chr_files ((type ARG1))
                         (allow ARG1 stordev readinherited_chr_file))

                  (macro readinherited_stordev_fifo_files ((type ARG1))
                         (allow ARG1 stordev readinherited_fifo_file))

                  (macro readinherited_stordev_files ((type ARG1))
                         (allow ARG1 stordev readinherited_file))

                  (macro readinherited_stordev_sock_files ((type ARG1))
                         (allow ARG1 stordev readinherited_sock_file))

                  (macro read_stordev_lnk_files ((type ARG1))
                         (allow ARG1 stordev read_lnk_file))

                  (macro read_stordev_sock_files ((type ARG1))
                         (allow ARG1 stordev read_sock_file))

                  (macro readwrite_stordev ((type ARG1))
                         (allow ARG1 stordev (allfiles (readwrite))))

                  (macro readwrite_stordev_blk_files ((type ARG1))
                         (allow ARG1 stordev readwrite_blk_file))

                  (macro readwrite_stordev_chr_files ((type ARG1))
                         (allow ARG1 stordev readwrite_chr_file))

                  (macro readwrite_stordev_dirs ((type ARG1))
                         (allow ARG1 stordev readwrite_dir))

                  (macro readwrite_stordev_fifo_files ((type ARG1))
                         (allow ARG1 stordev readwrite_fifo_file))

                  (macro readwrite_stordev_files ((type ARG1))
                         (allow ARG1 stordev readwrite_file))

                  (macro readwriteinherited_stordev_blk_files ((type ARG1))
                         (allow ARG1 stordev readwriteinherited_blk_file))

                  (macro readwriteinherited_stordev_chr_files ((type ARG1))
                         (allow ARG1 stordev readwriteinherited_chr_file))

                  (macro readwriteinherited_stordev_dirs ((type ARG1))
                         (allow ARG1 stordev readwriteinherited_dir))

                  (macro readwriteinherited_stordev_fifo_files ((type ARG1))
                         (allow ARG1 stordev readwriteinherited_fifo_file))

                  (macro readwriteinherited_stordev_files ((type ARG1))
                         (allow ARG1 stordev readwriteinherited_file))

                  (macro readwriteinherited_stordev_sock_files ((type ARG1))
                         (allow ARG1 stordev readwriteinherited_sock_file))

                  (macro readwrite_stordev_lnk_files ((type ARG1))
                         (allow ARG1 stordev readwrite_lnk_file))

                  (macro readwrite_stordev_sock_files ((type ARG1))
                         (allow ARG1 stordev readwrite_sock_file))

                  (macro relabel_stordev ((type ARG1))
                         (allow ARG1 stordev (allfiles (relabel))))

                  (macro relabel_stordev_blk_files ((type ARG1))
                         (allow ARG1 stordev relabel_blk_file))

                  (macro relabel_stordev_chr_files ((type ARG1))
                         (allow ARG1 stordev relabel_chr_file))

                  (macro relabel_stordev_dirs ((type ARG1))
                         (allow ARG1 stordev relabel_dir))

                  (macro relabel_stordev_fifo_files ((type ARG1))
                         (allow ARG1 stordev relabel_fifo_file))

                  (macro relabel_stordev_files ((type ARG1))
                         (allow ARG1 stordev relabel_file))

                  (macro relabel_stordev_lnk_files ((type ARG1))
                         (allow ARG1 stordev relabel_lnk_file))

                  (macro relabel_stordev_sock_files ((type ARG1))
                         (allow ARG1 stordev relabel_sock_file))

                  (macro relabelfrom_stordev ((type ARG1))
                         (allow ARG1 stordev (allfiles (relabelfrom))))

                  (macro relabelfrom_stordev_blk_files ((type ARG1))
                         (allow ARG1 stordev relabelfrom_blk_file))

                  (macro relabelfrom_stordev_chr_files ((type ARG1))
                         (allow ARG1 stordev relabelfrom_chr_file))

                  (macro relabelfrom_stordev_dirs ((type ARG1))
                         (allow ARG1 stordev relabelfrom_dir))

                  (macro relabelfrom_stordev_fifo_files ((type ARG1))
                         (allow ARG1 stordev relabelfrom_fifo_file))

                  (macro relabelfrom_stordev_files ((type ARG1))
                         (allow ARG1 stordev relabelfrom_file))

                  (macro relabelfrom_stordev_lnk_files ((type ARG1))
                         (allow ARG1 stordev relabelfrom_lnk_file))

                  (macro relabelfrom_stordev_sock_files ((type ARG1))
                         (allow ARG1 stordev relabelfrom_sock_file))

                  (macro relabelto_stordev ((type ARG1))
                         (allow ARG1 stordev (allfiles (relabelto))))

                  (macro relabelto_stordev_blk_files ((type ARG1))
                         (allow ARG1 stordev relabelto_blk_file))

                  (macro relabelto_stordev_chr_files ((type ARG1))
                         (allow ARG1 stordev relabelto_chr_file))

                  (macro relabelto_stordev_dirs ((type ARG1))
                         (allow ARG1 stordev relabelto_dir))

                  (macro relabelto_stordev_fifo_files ((type ARG1))
                         (allow ARG1 stordev relabelto_fifo_file))

                  (macro relabelto_stordev_files ((type ARG1))
                         (allow ARG1 stordev relabelto_file))

                  (macro relabelto_stordev_lnk_files ((type ARG1))
                         (allow ARG1 stordev relabelto_lnk_file))

                  (macro relabelto_stordev_sock_files ((type ARG1))
                         (allow ARG1 stordev relabelto_sock_file))

                  (macro rename_stordev ((type ARG1))
                         (allow ARG1 stordev (allfiles (rename))))

                  (macro rename_stordev_blk_files ((type ARG1))
                         (allow ARG1 stordev rename_blk_file))

                  (macro rename_stordev_chr_files ((type ARG1))
                         (allow ARG1 stordev rename_chr_file))

                  (macro rename_stordev_dirs ((type ARG1))
                         (allow ARG1 stordev rename_dir))

                  (macro rename_stordev_fifo_files ((type ARG1))
                         (allow ARG1 stordev rename_fifo_file))

                  (macro rename_stordev_files ((type ARG1))
                         (allow ARG1 stordev rename_file))

                  (macro rename_stordev_lnk_files ((type ARG1))
                         (allow ARG1 stordev rename_lnk_file))

                  (macro rename_stordev_sock_files ((type ARG1))
                         (allow ARG1 stordev rename_sock_file))

                  (macro search_stordev_dirs ((type ARG1))
                         (allow ARG1 stordev search_dir))

                  (macro stordev_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 stordev ARG3 ARG4 ARG2)
                         (call addname_stordev_dirs (ARG1)))

                  (macro write_stordev ((type ARG1))
                         (allow ARG1 stordev (allfiles (write))))

                  (macro write_stordev_blk_files ((type ARG1))
                         (allow ARG1 stordev write_blk_file))

                  (macro write_stordev_chr_files ((type ARG1))
                         (allow ARG1 stordev write_chr_file))

                  (macro write_stordev_dirs ((type ARG1))
                         (allow ARG1 stordev write_dir))

                  (macro write_stordev_fifo_files ((type ARG1))
                         (allow ARG1 stordev write_fifo_file))

                  (macro write_stordev_files ((type ARG1))
                         (allow ARG1 stordev write_file))

                  (macro writeinherited_stordev_blk_files ((type ARG1))
                         (allow ARG1 stordev writeinherited_blk_file))

                  (macro writeinherited_stordev_chr_files ((type ARG1))
                         (allow ARG1 stordev writeinherited_chr_file))

                  (macro writeinherited_stordev_dirs ((type ARG1))
                         (allow ARG1 stordev writeinherited_dir))

                  (macro writeinherited_stordev_fifo_files ((type ARG1))
                         (allow ARG1 stordev writeinherited_fifo_file))

                  (macro writeinherited_stordev_files ((type ARG1))
                         (allow ARG1 stordev writeinherited_file))

                  (macro writeinherited_stordev_sock_files ((type ARG1))
                         (allow ARG1 stordev writeinherited_sock_file))

                  (macro write_stordev_lnk_files ((type ARG1))
                         (allow ARG1 stordev write_lnk_file))

                  (macro write_stordev_sock_files ((type ARG1))
                         (allow ARG1 stordev write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .dev.stor.obj_base_template)
                  (blockinherit .dev.stor.obj_macro_template))

           (block read

                  ;;
                  ;; Policy
                  ;;

                  (blockinherit .subj.subj_all_macro_template)

                  (typeattribute
                   not_subj_typeattr)

                  (typeattributeset
                   not_subj_typeattr
                   (not
                    subj_typeattr))

                  (neverallow not_subj_typeattr obj_typeattr (blk_file (read)))
                  (neverallow not_subj_typeattr obj_typeattr
                              (chr_file (read)))
              )

           (block readwrite

                  ;;
                  ;; Policy
                  ;;

                  (blockinherit .subj.subj_all_macro_template)

                  (call read.subj_type (subj_typeattr))
                  (call write.subj_type (subj_typeattr)))

           (block unconfined

                  ;;
                  ;; Policy
                  ;;

                  (blockinherit .subj.subj_all_macro_template)

                  (allow subj_typeattr obj_typeattr
                         (blk_file (not (execmod map mounton))))
                  (allow subj_typeattr obj_typeattr
                         (chr_file (not execmod))))

           (block write

                  ;;
                  ;; Policy
                  ;;

                  (blockinherit .subj.subj_all_macro_template)

                  (typeattribute
                   not_subj_typeattr)

                  (typeattributeset
                   not_subj_typeattr
                   (not
                    subj_typeattr))

                  (neverallow not_subj_typeattr obj_typeattr
                              (blk_file (append write)))
                  (neverallow not_subj_typeattr obj_typeattr
                              (chr_file (append write)))
       )))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_ptydev ((type ARG1))
           (call .pts.fs_obj_type_transition
                 (ARG1 ptydev chr_file "*")))

    (macro readwriteinherited_ptydev_chr_files ((type ARG1))
           (typeattributeset readwriteinherited_ptydev.subj_typeattr ARG1))

    (macro setattr_ptydev_chr_files ((type ARG1))
           (allow ARG1 ptydev (chr_file (setattr))))

    (macro dontaudit_readwriteinherited_ptydev_chr_files ((type ARG1))
           (dontaudit ARG1 ptydev readwriteinherited_chr_file))

    ;;
    ;; Policy
    ;;

    (blockinherit .dev.pty.obj_template)

    (call obj_type_transition_ptydev (subj))

    (block readwriteinherited_ptydev

           ;;
           ;; Policy
           ;;

           (blockinherit .subj.subj_all_macro_template)

           (allowx subj_typeattr ptydev (ioctl chr_file (not (0x5412))))
           (allow subj_typeattr ptydev readwriteinherited_chr_file)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev

    (block pty

           ;;
           ;;  Macros
           ;;

           (macro readwriteinherited_all_chr_files ((type ARG1))
                  (typeattributeset readwriteinherited_all.subj_typeattr ARG1))

           (macro writeinherited_all_chr_files ((type ARG1))
                  (allowx ARG1 obj_typeattr (ioctl chr_file (not (0x5412))))
                  (allow ARG1 obj_typeattr writeinherited_chr_file))

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (call dev.obj_type (obj_typeattr))

           (call .pts.associate_filesystems (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   ptydev_file_context
                   (.u
                    .r
                    ptydev
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   ptydev)

                  (call .dev.pty.obj_type (ptydev)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_ptydev_dirs ((type ARG1))
                         (allow ARG1 ptydev addname_dir))

                  (macro append_ptydev_blk_files ((type ARG1))
                         (allow ARG1 ptydev append_blk_file))

                  (macro append_ptydev_chr_files ((type ARG1))
                         (allow ARG1 ptydev append_chr_file))

                  (macro append_ptydev_fifo_files ((type ARG1))
                         (allow ARG1 ptydev append_fifo_file))

                  (macro append_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev append_file))

                  (macro appendinherited_ptydev_blk_files ((type ARG1))
                         (allow ARG1 ptydev appendinherited_blk_file))

                  (macro appendinherited_ptydev_chr_files ((type ARG1))
                         (allow ARG1 ptydev appendinherited_chr_file))

                  (macro appendinherited_ptydev_fifo_files ((type ARG1))
                         (allow ARG1 ptydev appendinherited_fifo_file))

                  (macro appendinherited_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev appendinherited_file))

                  (macro create_ptydev ((type ARG1))
                         (allow ARG1 ptydev (allfiles (create))))

                  (macro create_ptydev_blk_files ((type ARG1))
                         (allow ARG1 ptydev create_blk_file))

                  (macro create_ptydev_chr_files ((type ARG1))
                         (allow ARG1 ptydev create_chr_file))

                  (macro create_ptydev_dirs ((type ARG1))
                         (allow ARG1 ptydev create_dir))

                  (macro create_ptydev_fifo_files ((type ARG1))
                         (allow ARG1 ptydev create_fifo_file))

                  (macro create_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev create_file))

                  (macro create_ptydev_lnk_files ((type ARG1))
                         (allow ARG1 ptydev create_lnk_file))

                  (macro create_ptydev_sock_files ((type ARG1))
                         (allow ARG1 ptydev create_sock_file))

                  (macro deletename_ptydev_dirs ((type ARG1))
                         (allow ARG1 ptydev deletename_dir))

                  (macro delete_ptydev ((type ARG1))
                         (allow ARG1 ptydev (allfiles (delete))))

                  (macro delete_ptydev_blk_files ((type ARG1))
                         (allow ARG1 ptydev delete_blk_file))

                  (macro delete_ptydev_chr_files ((type ARG1))
                         (allow ARG1 ptydev delete_chr_file))

                  (macro delete_ptydev_dirs ((type ARG1))
                         (allow ARG1 ptydev delete_dir))

                  (macro delete_ptydev_fifo_files ((type ARG1))
                         (allow ARG1 ptydev delete_fifo_file))

                  (macro delete_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev delete_file))

                  (macro delete_ptydev_lnk_files ((type ARG1))
                         (allow ARG1 ptydev delete_lnk_file))

                  (macro delete_ptydev_sock_files ((type ARG1))
                         (allow ARG1 ptydev delete_sock_file))

                  (macro execute_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev execute_file))

                  (macro list_ptydev_dirs ((type ARG1))
                         (allow ARG1 ptydev list_dir))

                  (macro listinherited_ptydev_dirs ((type ARG1))
                         (allow ARG1 ptydev listinherited_dir))

                  (macro manage_ptydev ((type ARG1))
                         (allow ARG1 ptydev (allfiles (manage))))

                  (macro manage_ptydev_blk_files ((type ARG1))
                         (allow ARG1 ptydev manage_blk_file))

                  (macro manage_ptydev_chr_files ((type ARG1))
                         (allow ARG1 ptydev manage_chr_file))

                  (macro manage_ptydev_dirs ((type ARG1))
                         (allow ARG1 ptydev manage_dir))

                  (macro manage_ptydev_fifo_files ((type ARG1))
                         (allow ARG1 ptydev manage_fifo_file))

                  (macro manage_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev manage_file))

                  (macro manage_ptydev_lnk_files ((type ARG1))
                         (allow ARG1 ptydev manage_lnk_file))

                  (macro manage_ptydev_sock_files ((type ARG1))
                         (allow ARG1 ptydev manage_sock_file))

                  (macro mapexecute_ptydev_chr_files ((type ARG1))
                         (allow ARG1 ptydev mapexecute_chr_file))

                  (macro mapexecute_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev mapexecute_file))

                  (macro mounton_ptydev ((type ARG1))
                         (allow ARG1 ptydev (allfiles (mounton))))

                  (macro mounton_ptydev_blk_files ((type ARG1))
                         (allow ARG1 ptydev mounton_blk_file))

                  (macro mounton_ptydev_chr_files ((type ARG1))
                         (allow ARG1 ptydev mounton_chr_file))

                  (macro mounton_ptydev_dirs ((type ARG1))
                         (allow ARG1 ptydev mounton_dir))

                  (macro mounton_ptydev_fifo_files ((type ARG1))
                         (allow ARG1 ptydev mounton_fifo_file))

                  (macro mounton_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev mounton_file))

                  (macro mounton_ptydev_lnk_files ((type ARG1))
                         (allow ARG1 ptydev mounton_lnk_file))

                  (macro mounton_ptydev_sock_files ((type ARG1))
                         (allow ARG1 ptydev mounton_sock_file))

                  (macro ptydev_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 ptydev ARG3 ARG4 ARG2)
                         (call addname_ptydev_dirs (ARG1)))

                  (macro read_ptydev ((type ARG1))
                         (allow ARG1 ptydev (allfiles (read))))

                  (macro read_ptydev_blk_files ((type ARG1))
                         (allow ARG1 ptydev read_blk_file))

                  (macro read_ptydev_chr_files ((type ARG1))
                         (allow ARG1 ptydev read_chr_file))

                  (macro read_ptydev_fifo_files ((type ARG1))
                         (allow ARG1 ptydev read_fifo_file))

                  (macro read_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev read_file))

                  (macro readinherited_ptydev_blk_files ((type ARG1))
                         (allow ARG1 ptydev readinherited_blk_file))

                  (macro readinherited_ptydev_chr_files ((type ARG1))
                         (allow ARG1 ptydev readinherited_chr_file))

                  (macro readinherited_ptydev_fifo_files ((type ARG1))
                         (allow ARG1 ptydev readinherited_fifo_file))

                  (macro readinherited_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev readinherited_file))

                  (macro readinherited_ptydev_sock_files ((type ARG1))
                         (allow ARG1 ptydev readinherited_sock_file))

                  (macro read_ptydev_lnk_files ((type ARG1))
                         (allow ARG1 ptydev read_lnk_file))

                  (macro read_ptydev_sock_files ((type ARG1))
                         (allow ARG1 ptydev read_sock_file))

                  (macro readwrite_ptydev ((type ARG1))
                         (allow ARG1 ptydev (allfiles (readwrite))))

                  (macro readwrite_ptydev_blk_files ((type ARG1))
                         (allow ARG1 ptydev readwrite_blk_file))

                  (macro readwrite_ptydev_chr_files ((type ARG1))
                         (allow ARG1 ptydev readwrite_chr_file))

                  (macro readwrite_ptydev_dirs ((type ARG1))
                         (allow ARG1 ptydev readwrite_dir))

                  (macro readwrite_ptydev_fifo_files ((type ARG1))
                         (allow ARG1 ptydev readwrite_fifo_file))

                  (macro readwrite_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev readwrite_file))

                  (macro readwriteinherited_ptydev_blk_files ((type ARG1))
                         (allow ARG1 ptydev readwriteinherited_blk_file))

                  (macro readwriteinherited_ptydev_chr_files ((type ARG1))
                         (allowx ARG1 ptydev (ioctl chr_file (not (0x5412))))
                         (allow ARG1 ptydev readwriteinherited_chr_file))

                  (macro readwriteinherited_ptydev_dirs ((type ARG1))
                         (allow ARG1 ptydev readwriteinherited_dir))

                  (macro readwriteinherited_ptydev_fifo_files ((type ARG1))
                         (allow ARG1 ptydev readwriteinherited_fifo_file))

                  (macro readwriteinherited_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev readwriteinherited_file))

                  (macro readwriteinherited_ptydev_sock_files ((type ARG1))
                         (allow ARG1 ptydev readwriteinherited_sock_file))

                  (macro readwrite_ptydev_lnk_files ((type ARG1))
                         (allow ARG1 ptydev readwrite_lnk_file))

                  (macro readwrite_ptydev_sock_files ((type ARG1))
                         (allow ARG1 ptydev readwrite_sock_file))

                  (macro relabel_ptydev ((type ARG1))
                         (allow ARG1 ptydev (allfiles (relabel))))

                  (macro relabel_ptydev_blk_files ((type ARG1))
                         (allow ARG1 ptydev relabel_blk_file))

                  (macro relabel_ptydev_chr_files ((type ARG1))
                         (allow ARG1 ptydev relabel_chr_file))

                  (macro relabel_ptydev_dirs ((type ARG1))
                         (allow ARG1 ptydev relabel_dir))

                  (macro relabel_ptydev_fifo_files ((type ARG1))
                         (allow ARG1 ptydev relabel_fifo_file))

                  (macro relabel_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev relabel_file))

                  (macro relabel_ptydev_lnk_files ((type ARG1))
                         (allow ARG1 ptydev relabel_lnk_file))

                  (macro relabel_ptydev_sock_files ((type ARG1))
                         (allow ARG1 ptydev relabel_sock_file))

                  (macro relabelfrom_ptydev ((type ARG1))
                         (allow ARG1 ptydev (allfiles (relabelfrom))))

                  (macro relabelfrom_ptydev_blk_files ((type ARG1))
                         (allow ARG1 ptydev relabelfrom_blk_file))

                  (macro relabelfrom_ptydev_chr_files ((type ARG1))
                         (allow ARG1 ptydev relabelfrom_chr_file))

                  (macro relabelfrom_ptydev_dirs ((type ARG1))
                         (allow ARG1 ptydev relabelfrom_dir))

                  (macro relabelfrom_ptydev_fifo_files ((type ARG1))
                         (allow ARG1 ptydev relabelfrom_fifo_file))

                  (macro relabelfrom_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev relabelfrom_file))

                  (macro relabelfrom_ptydev_lnk_files ((type ARG1))
                         (allow ARG1 ptydev relabelfrom_lnk_file))

                  (macro relabelfrom_ptydev_sock_files ((type ARG1))
                         (allow ARG1 ptydev relabelfrom_sock_file))

                  (macro relabelto_ptydev ((type ARG1))
                         (allow ARG1 ptydev (allfiles (relabelto))))

                  (macro relabelto_ptydev_blk_files ((type ARG1))
                         (allow ARG1 ptydev relabelto_blk_file))

                  (macro relabelto_ptydev_chr_files ((type ARG1))
                         (allow ARG1 ptydev relabelto_chr_file))

                  (macro relabelto_ptydev_dirs ((type ARG1))
                         (allow ARG1 ptydev relabelto_dir))

                  (macro relabelto_ptydev_fifo_files ((type ARG1))
                         (allow ARG1 ptydev relabelto_fifo_file))

                  (macro relabelto_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev relabelto_file))

                  (macro relabelto_ptydev_lnk_files ((type ARG1))
                         (allow ARG1 ptydev relabelto_lnk_file))

                  (macro relabelto_ptydev_sock_files ((type ARG1))
                         (allow ARG1 ptydev relabelto_sock_file))

                  (macro rename_ptydev ((type ARG1))
                         (allow ARG1 ptydev (allfiles (rename))))

                  (macro rename_ptydev_blk_files ((type ARG1))
                         (allow ARG1 ptydev rename_blk_file))

                  (macro rename_ptydev_chr_files ((type ARG1))
                         (allow ARG1 ptydev rename_chr_file))

                  (macro rename_ptydev_dirs ((type ARG1))
                         (allow ARG1 ptydev rename_dir))

                  (macro rename_ptydev_fifo_files ((type ARG1))
                         (allow ARG1 ptydev rename_fifo_file))

                  (macro rename_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev rename_file))

                  (macro rename_ptydev_lnk_files ((type ARG1))
                         (allow ARG1 ptydev rename_lnk_file))

                  (macro rename_ptydev_sock_files ((type ARG1))
                         (allow ARG1 ptydev rename_sock_file))

                  (macro search_ptydev_dirs ((type ARG1))
                         (allow ARG1 ptydev search_dir))

                  (macro write_ptydev ((type ARG1))
                         (allow ARG1 ptydev (allfiles (write))))

                  (macro write_ptydev_blk_files ((type ARG1))
                         (allow ARG1 ptydev write_blk_file))

                  (macro write_ptydev_chr_files ((type ARG1))
                         (allow ARG1 ptydev write_chr_file))

                  (macro write_ptydev_dirs ((type ARG1))
                         (allow ARG1 ptydev write_dir))

                  (macro write_ptydev_fifo_files ((type ARG1))
                         (allow ARG1 ptydev write_fifo_file))

                  (macro write_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev write_file))

                  (macro writeinherited_ptydev_blk_files ((type ARG1))
                         (allow ARG1 ptydev writeinherited_blk_file))

                  (macro writeinherited_ptydev_chr_files ((type ARG1))
                         (allowx ARG1 ptydev (ioctl chr_file (not (0x5412))))
                         (allow ARG1 ptydev writeinherited_chr_file))

                  (macro writeinherited_ptydev_dirs ((type ARG1))
                         (allow ARG1 ptydev writeinherited_dir))

                  (macro writeinherited_ptydev_fifo_files ((type ARG1))
                         (allow ARG1 ptydev writeinherited_fifo_file))

                  (macro writeinherited_ptydev_files ((type ARG1))
                         (allow ARG1 ptydev writeinherited_file))

                  (macro writeinherited_ptydev_sock_files ((type ARG1))
                         (allow ARG1 ptydev writeinherited_sock_file))

                  (macro write_ptydev_lnk_files ((type ARG1))
                         (allow ARG1 ptydev write_lnk_file))

                  (macro write_ptydev_sock_files ((type ARG1))
                         (allow ARG1 ptydev write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .dev.pty.obj_base_template)
                  (blockinherit .dev.pty.obj_macro_template))

           (block readwriteinherited_all

                  ;;
                  ;; Policy
                  ;;

                  (blockinherit .subj.subj_all_macro_template)

                  (allowx subj_typeattr obj_typeattr
                          (ioctl chr_file (not (0x5412))))
                  (allow subj_typeattr obj_typeattr
                         readwriteinherited_chr_file))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev

    (block node

           ;;
           ;; Macros
           ;;

           (macro getattr_all_chr_files ((type ARG1))
                  (allow ARG1 obj_typeattr (chr_file (getattr))))

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (call dev.obj_type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   nodedev_file_context
                   (.u
                    .r
                    nodedev
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   nodedev)

                  (call .dev.node.obj_type (nodedev)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_nodedev_dirs ((type ARG1))
                         (allow ARG1 nodedev addname_dir))

                  (macro append_nodedev_blk_files ((type ARG1))
                         (allow ARG1 nodedev append_blk_file))

                  (macro append_nodedev_chr_files ((type ARG1))
                         (allow ARG1 nodedev append_chr_file))

                  (macro append_nodedev_fifo_files ((type ARG1))
                         (allow ARG1 nodedev append_fifo_file))

                  (macro append_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev append_file))

                  (macro appendinherited_nodedev_blk_files ((type ARG1))
                         (allow ARG1 nodedev appendinherited_blk_file))

                  (macro appendinherited_nodedev_chr_files ((type ARG1))
                         (allow ARG1 nodedev appendinherited_chr_file))

                  (macro appendinherited_nodedev_fifo_files ((type ARG1))
                         (allow ARG1 nodedev appendinherited_fifo_file))

                  (macro appendinherited_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev appendinherited_file))

                  (macro create_nodedev ((type ARG1))
                         (allow ARG1 nodedev (allfiles (create))))

                  (macro create_nodedev_blk_files ((type ARG1))
                         (allow ARG1 nodedev create_blk_file))

                  (macro create_nodedev_chr_files ((type ARG1))
                         (allow ARG1 nodedev create_chr_file))

                  (macro create_nodedev_dirs ((type ARG1))
                         (allow ARG1 nodedev create_dir))

                  (macro create_nodedev_fifo_files ((type ARG1))
                         (allow ARG1 nodedev create_fifo_file))

                  (macro create_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev create_file))

                  (macro create_nodedev_lnk_files ((type ARG1))
                         (allow ARG1 nodedev create_lnk_file))

                  (macro create_nodedev_sock_files ((type ARG1))
                         (allow ARG1 nodedev create_sock_file))

                  (macro deletename_nodedev_dirs ((type ARG1))
                         (allow ARG1 nodedev deletename_dir))

                  (macro delete_nodedev ((type ARG1))
                         (allow ARG1 nodedev (allfiles (delete))))

                  (macro delete_nodedev_blk_files ((type ARG1))
                         (allow ARG1 nodedev delete_blk_file))

                  (macro delete_nodedev_chr_files ((type ARG1))
                         (allow ARG1 nodedev delete_chr_file))

                  (macro delete_nodedev_dirs ((type ARG1))
                         (allow ARG1 nodedev delete_dir))

                  (macro delete_nodedev_fifo_files ((type ARG1))
                         (allow ARG1 nodedev delete_fifo_file))

                  (macro delete_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev delete_file))

                  (macro delete_nodedev_lnk_files ((type ARG1))
                         (allow ARG1 nodedev delete_lnk_file))

                  (macro delete_nodedev_sock_files ((type ARG1))
                         (allow ARG1 nodedev delete_sock_file))

                  (macro execute_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev execute_file))

                  (macro list_nodedev_dirs ((type ARG1))
                         (allow ARG1 nodedev list_dir))

                  (macro listinherited_nodedev_dirs ((type ARG1))
                         (allow ARG1 nodedev listinherited_dir))

                  (macro manage_nodedev ((type ARG1))
                         (allow ARG1 nodedev (allfiles (manage))))

                  (macro manage_nodedev_blk_files ((type ARG1))
                         (allow ARG1 nodedev manage_blk_file))

                  (macro manage_nodedev_chr_files ((type ARG1))
                         (allow ARG1 nodedev manage_chr_file))

                  (macro manage_nodedev_dirs ((type ARG1))
                         (allow ARG1 nodedev manage_dir))

                  (macro manage_nodedev_fifo_files ((type ARG1))
                         (allow ARG1 nodedev manage_fifo_file))

                  (macro manage_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev manage_file))

                  (macro manage_nodedev_lnk_files ((type ARG1))
                         (allow ARG1 nodedev manage_lnk_file))

                  (macro manage_nodedev_sock_files ((type ARG1))
                         (allow ARG1 nodedev manage_sock_file))

                  (macro mapexecute_nodedev_chr_files ((type ARG1))
                         (allow ARG1 nodedev mapexecute_chr_file))

                  (macro mapexecute_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev mapexecute_file))

                  (macro mounton_nodedev ((type ARG1))
                         (allow ARG1 nodedev (allfiles (mounton))))

                  (macro mounton_nodedev_blk_files ((type ARG1))
                         (allow ARG1 nodedev mounton_blk_file))

                  (macro mounton_nodedev_chr_files ((type ARG1))
                         (allow ARG1 nodedev mounton_chr_file))

                  (macro mounton_nodedev_dirs ((type ARG1))
                         (allow ARG1 nodedev mounton_dir))

                  (macro mounton_nodedev_fifo_files ((type ARG1))
                         (allow ARG1 nodedev mounton_fifo_file))

                  (macro mounton_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev mounton_file))

                  (macro mounton_nodedev_lnk_files ((type ARG1))
                         (allow ARG1 nodedev mounton_lnk_file))

                  (macro mounton_nodedev_sock_files ((type ARG1))
                         (allow ARG1 nodedev mounton_sock_file))

                  (macro nodedev_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 nodedev ARG3 ARG4 ARG2)
                         (call addname_nodedev_dirs (ARG1)))

                  (macro read_nodedev ((type ARG1))
                         (allow ARG1 nodedev (allfiles (read))))

                  (macro read_nodedev_blk_files ((type ARG1))
                         (allow ARG1 nodedev read_blk_file))

                  (macro read_nodedev_chr_files ((type ARG1))
                         (allow ARG1 nodedev read_chr_file))

                  (macro read_nodedev_fifo_files ((type ARG1))
                         (allow ARG1 nodedev read_fifo_file))

                  (macro read_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev read_file))

                  (macro readinherited_nodedev_blk_files ((type ARG1))
                         (allow ARG1 nodedev readinherited_blk_file))

                  (macro readinherited_nodedev_chr_files ((type ARG1))
                         (allow ARG1 nodedev readinherited_chr_file))

                  (macro readinherited_nodedev_fifo_files ((type ARG1))
                         (allow ARG1 nodedev readinherited_fifo_file))

                  (macro readinherited_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev readinherited_file))

                  (macro readinherited_nodedev_sock_files ((type ARG1))
                         (allow ARG1 nodedev readinherited_sock_file))

                  (macro read_nodedev_lnk_files ((type ARG1))
                         (allow ARG1 nodedev read_lnk_file))

                  (macro read_nodedev_sock_files ((type ARG1))
                         (allow ARG1 nodedev read_sock_file))

                  (macro readwrite_nodedev ((type ARG1))
                         (allow ARG1 nodedev (allfiles (readwrite))))

                  (macro readwrite_nodedev_blk_files ((type ARG1))
                         (allow ARG1 nodedev readwrite_blk_file))

                  (macro readwrite_nodedev_chr_files ((type ARG1))
                         (allow ARG1 nodedev readwrite_chr_file))

                  (macro readwrite_nodedev_dirs ((type ARG1))
                         (allow ARG1 nodedev readwrite_dir))

                  (macro readwrite_nodedev_fifo_files ((type ARG1))
                         (allow ARG1 nodedev readwrite_fifo_file))

                  (macro readwrite_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev readwrite_file))

                  (macro readwriteinherited_nodedev_blk_files ((type ARG1))
                         (allow ARG1 nodedev readwriteinherited_blk_file))

                  (macro readwriteinherited_nodedev_chr_files ((type ARG1))
                         (allow ARG1 nodedev readwriteinherited_chr_file))

                  (macro readwriteinherited_nodedev_dirs ((type ARG1))
                         (allow ARG1 nodedev readwriteinherited_dir))

                  (macro readwriteinherited_nodedev_fifo_files ((type ARG1))
                         (allow ARG1 nodedev readwriteinherited_fifo_file))

                  (macro readwriteinherited_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev readwriteinherited_file))

                  (macro readwriteinherited_nodedev_sock_files ((type ARG1))
                         (allow ARG1 nodedev readwriteinherited_sock_file))

                  (macro readwrite_nodedev_lnk_files ((type ARG1))
                         (allow ARG1 nodedev readwrite_lnk_file))

                  (macro readwrite_nodedev_sock_files ((type ARG1))
                         (allow ARG1 nodedev readwrite_sock_file))

                  (macro relabel_nodedev ((type ARG1))
                         (allow ARG1 nodedev (allfiles (relabel))))

                  (macro relabel_nodedev_blk_files ((type ARG1))
                         (allow ARG1 nodedev relabel_blk_file))

                  (macro relabel_nodedev_chr_files ((type ARG1))
                         (allow ARG1 nodedev relabel_chr_file))

                  (macro relabel_nodedev_dirs ((type ARG1))
                         (allow ARG1 nodedev relabel_dir))

                  (macro relabel_nodedev_fifo_files ((type ARG1))
                         (allow ARG1 nodedev relabel_fifo_file))

                  (macro relabel_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev relabel_file))

                  (macro relabel_nodedev_lnk_files ((type ARG1))
                         (allow ARG1 nodedev relabel_lnk_file))

                  (macro relabel_nodedev_sock_files ((type ARG1))
                         (allow ARG1 nodedev relabel_sock_file))

                  (macro relabelfrom_nodedev ((type ARG1))
                         (allow ARG1 nodedev (allfiles (relabelfrom))))

                  (macro relabelfrom_nodedev_blk_files ((type ARG1))
                         (allow ARG1 nodedev relabelfrom_blk_file))

                  (macro relabelfrom_nodedev_chr_files ((type ARG1))
                         (allow ARG1 nodedev relabelfrom_chr_file))

                  (macro relabelfrom_nodedev_dirs ((type ARG1))
                         (allow ARG1 nodedev relabelfrom_dir))

                  (macro relabelfrom_nodedev_fifo_files ((type ARG1))
                         (allow ARG1 nodedev relabelfrom_fifo_file))

                  (macro relabelfrom_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev relabelfrom_file))

                  (macro relabelfrom_nodedev_lnk_files ((type ARG1))
                         (allow ARG1 nodedev relabelfrom_lnk_file))

                  (macro relabelfrom_nodedev_sock_files ((type ARG1))
                         (allow ARG1 nodedev relabelfrom_sock_file))

                  (macro relabelto_nodedev ((type ARG1))
                         (allow ARG1 nodedev (allfiles (relabelto))))

                  (macro relabelto_nodedev_blk_files ((type ARG1))
                         (allow ARG1 nodedev relabelto_blk_file))

                  (macro relabelto_nodedev_chr_files ((type ARG1))
                         (allow ARG1 nodedev relabelto_chr_file))

                  (macro relabelto_nodedev_dirs ((type ARG1))
                         (allow ARG1 nodedev relabelto_dir))

                  (macro relabelto_nodedev_fifo_files ((type ARG1))
                         (allow ARG1 nodedev relabelto_fifo_file))

                  (macro relabelto_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev relabelto_file))

                  (macro relabelto_nodedev_lnk_files ((type ARG1))
                         (allow ARG1 nodedev relabelto_lnk_file))

                  (macro relabelto_nodedev_sock_files ((type ARG1))
                         (allow ARG1 nodedev relabelto_sock_file))

                  (macro rename_nodedev ((type ARG1))
                         (allow ARG1 nodedev (allfiles (rename))))

                  (macro rename_nodedev_blk_files ((type ARG1))
                         (allow ARG1 nodedev rename_blk_file))

                  (macro rename_nodedev_chr_files ((type ARG1))
                         (allow ARG1 nodedev rename_chr_file))

                  (macro rename_nodedev_dirs ((type ARG1))
                         (allow ARG1 nodedev rename_dir))

                  (macro rename_nodedev_fifo_files ((type ARG1))
                         (allow ARG1 nodedev rename_fifo_file))

                  (macro rename_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev rename_file))

                  (macro rename_nodedev_lnk_files ((type ARG1))
                         (allow ARG1 nodedev rename_lnk_file))

                  (macro rename_nodedev_sock_files ((type ARG1))
                         (allow ARG1 nodedev rename_sock_file))

                  (macro search_nodedev_dirs ((type ARG1))
                         (allow ARG1 nodedev search_dir))

                  (macro write_nodedev ((type ARG1))
                         (allow ARG1 nodedev (allfiles (write))))

                  (macro write_nodedev_blk_files ((type ARG1))
                         (allow ARG1 nodedev write_blk_file))

                  (macro write_nodedev_chr_files ((type ARG1))
                         (allow ARG1 nodedev write_chr_file))

                  (macro write_nodedev_dirs ((type ARG1))
                         (allow ARG1 nodedev write_dir))

                  (macro write_nodedev_fifo_files ((type ARG1))
                         (allow ARG1 nodedev write_fifo_file))

                  (macro write_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev write_file))

                  (macro writeinherited_nodedev_blk_files ((type ARG1))
                         (allow ARG1 nodedev writeinherited_blk_file))

                  (macro writeinherited_nodedev_chr_files ((type ARG1))
                         (allow ARG1 nodedev writeinherited_chr_file))

                  (macro writeinherited_nodedev_dirs ((type ARG1))
                         (allow ARG1 nodedev writeinherited_dir))

                  (macro writeinherited_nodedev_fifo_files ((type ARG1))
                         (allow ARG1 nodedev writeinherited_fifo_file))

                  (macro writeinherited_nodedev_files ((type ARG1))
                         (allow ARG1 nodedev writeinherited_file))

                  (macro writeinherited_nodedev_sock_files ((type ARG1))
                         (allow ARG1 nodedev writeinherited_sock_file))

                  (macro write_nodedev_lnk_files ((type ARG1))
                         (allow ARG1 nodedev write_lnk_file))

                  (macro write_nodedev_sock_files ((type ARG1))
                         (allow ARG1 nodedev write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .dev.node.obj_base_template)
                  (blockinherit .dev.node.obj_macro_template))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call console.obj_type_transition_ttydev (unconfined.subj_typeattr)))

(block console

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/console"
        char
        ttydev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_ttydev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 ttydev chr_file "console")))

       (macro readwriteinherited_ttydev_chr_files ((type ARG1))
              (typeattributeset readwriteinherited_ttydev.subj_typeattr ARG1))

       (macro dontaudit_readwriteinherited_ttydev_chr_files ((type ARG1))
              (dontaudit ARG1 ttydev readwriteinherited_chr_file))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.tty.obj_template)

       (block readwriteinherited_ttydev

              ;;
              ;; Policy
              ;;

              (blockinherit .subj.subj_all_macro_template)

              (allowx subj_typeattr ttydev (ioctl chr_file (not (0x5412))))
              (allow subj_typeattr ttydev readwriteinherited_chr_file)))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .dm.obj_type_transition_stordev (unconfined.subj_typeattr)))

(in .dev.stor
    (call .dm.obj_type_transition_stordev (unconfined.subj_typeattr)))

(block dm

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/dm-[0-9]+"
        block
        stordev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_stordev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "dm-0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "dm-1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "dm-2")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.stor.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .sr.obj_type_transition_stordev (unconfined.subj_typeattr)))

(in .dev.stor
    (call .sr.obj_type_transition_stordev (unconfined.subj_typeattr)))

(block sr

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/sr[0-9]+"
        block
        stordev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_stordev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sr0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sr1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sr2")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.stor.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .mtd.obj_type_transition_stordev (unconfined.subj_typeattr)))

(in .dev.stor
    (call .mtd.obj_type_transition_stordev (unconfined.subj_typeattr)))

(in .mtd

    ;;
    ;; Contexts
    ;;

    (filecon
     "/dev/mtd[0-9]+"
     char
     stordev_file_context)
    (filecon
     "/dev/mtd[0-9]+ro"
     char
     stordev_file_context)
    (filecon
     "/dev/mtdblock[0-9]+"
     block
     stordev_file_context)

    (filecon
     "/dev/ubi[0-9]+_[0-9]+"
     char
     stordev_file_context)
    (filecon
     "/dev/ubi_ctrl"
     char
     stordev_file_context)
    (filecon
     "/dev/ubiblock[0-9]+_[0-9]+"
     block
     stordev_file_context)
    (filecon
     "/dev/ubiblock[0-9]+_[0-9]+p[0-9]+"
     block
     stordev_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_stordev ((type ARG1))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd0"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd0ro"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd1ro"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd2"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd2ro"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd3"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd3ro"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd4"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd4ro"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd5"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd5ro"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd6"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd6ro"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd7"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd7ro"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd8"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd8ro"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd9"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd9ro"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd10"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd10ro"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd11"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd11ro"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd12"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd12ro"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd13"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd13ro"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd14"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd14ro"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd15"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "mtd15ro"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "mtdblock0"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "mtdblock1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "mtdblock2"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "mtdblock3"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "mtdblock4"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "mtdblock5"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "mtdblock6"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "mtdblock7"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "mtdblock8"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "mtdblock9"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "mtdblock10"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "mtdblock11"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "mtdblock12"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "mtdblock13"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "mtdblock14"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "mtdblock15"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi_ctrl"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi0"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi0_0"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi0_1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi0_2"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi0_3"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi0_4"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi0_5"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi0_6"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi0_7"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi0_8"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi0_9"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi1_0"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi1_1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi1_2"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi1_3"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi1_4"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi1_5"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi1_6"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi1_7"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi1_8"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi1_9"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi2"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi2_0"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi2_1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi2_2"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi2_3"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi2_4"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi2_5"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi2_6"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi2_7"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi2_8"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev chr_file "ubi2_9"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock0"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock0_0"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock0_1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock0_2"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock0_3"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock0_4"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock0_4p1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock0_5"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock0_6"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock0_7"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock0_8"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock0_9"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock1_0"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock1_1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock1_2"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock1_3"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock1_4"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock1_5"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock1_6"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock1_7"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock1_8"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock1_9"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock2"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock2_0"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock2_1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock2_2"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock2_3"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock2_4"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock2_5"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock2_6"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock2_7"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock2_8"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 stordev blk_file "ubiblock2_9")))

    ;;
    ;; Policy
    ;;

    (blockinherit .dev.stor.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .fuse.obj_type_transition_stordev (unconfined.subj_typeattr)))

(in .dev.stor
    (call .fuse.obj_type_transition_stordev (unconfined.subj_typeattr)))

(block fuse

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/fuse"
        char
        stordev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_stordev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "fuse")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.stor.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .vd.obj_type_transition_stordev (unconfined.subj_typeattr)))

(in .dev.stor
    (call .vd.obj_type_transition_stordev (unconfined.subj_typeattr)))

(block vd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/vd[^/]+"
        block
        stordev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_stordev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vda"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vda1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vda2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vda3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vda4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vda5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vda6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vda7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vda8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vda9"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vda128"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdb"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdb1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdb2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdb3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdb4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdb5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdb6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdb7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdb8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdb9"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdc"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdc1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdc2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdc3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdc4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdc5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdc6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdc7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdc8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "vdc9")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.stor.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .hd.obj_type_transition_stordev (unconfined.subj_typeattr)))

(in .dev.stor
    (call .hd.obj_type_transition_stordev (unconfined.subj_typeattr)))

(block hd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/hd[^/]+"
        block
        stordev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_stordev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hda"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hda1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hda2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hda3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hda4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hda5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hda6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hda7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hda8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hda9"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hda128"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdb"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdb1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdb2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdb3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdb4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdb5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdb6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdb7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdb8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdb9"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdc"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdc1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdc2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdc3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdc4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdc5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdc6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdc7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdc8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "hdc9")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.stor.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .bsg.obj_type_transition_stordev (unconfined.subj_typeattr)))

(in .dev.stor
    (call .bsg.obj_type_transition_stordev (unconfined.subj_typeattr)))

(block bsg

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/bsg/.+"
        char
        stordev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_stordev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "0:0:0:0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "1:0:0:0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "2:0:0:0")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.stor.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .raw.obj_type_transition_stordev (unconfined.subj_typeattr)))

(in .dev.stor
    (call .raw.obj_type_transition_stordev (unconfined.subj_typeattr)))

(block raw

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/raw/.+"
        char
        stordev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_stordev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "rawctl"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "raw1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "raw2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "raw3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "raw4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "raw5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "raw6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "raw6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "raw8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "raw9")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.stor.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .nvme.obj_type_transition_stordev (unconfined.subj_typeattr)))

(in .dev.stor
    (call .nvme.obj_type_transition_stordev (unconfined.subj_typeattr)))

(block nvme

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/nvme[0-9]+"
        char
        stordev_file_context)
       (filecon
        "/dev/nvme[0-9]n[^/]+"
        block
        stordev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_stordev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "nvme0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "nvme0n1p1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "nvme0n1p2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "nvme0n1p3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "nvme0n1p4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "nvme0n1p5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "nvme0n1p6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "nvme0n1p7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "nvme0n1p8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "nvme0n1p9")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.stor.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .sd.obj_type_transition_stordev (unconfined.subj_typeattr)))

(in .dev.stor
    (call .sd.obj_type_transition_stordev (unconfined.subj_typeattr)))

(block sd

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/sd[^/]+"
        block
        stordev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_stordev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sda"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sda1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sda2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sda3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sda4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sda5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sda6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sda7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sda8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sda9"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sda128"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdb"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdb1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdb2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdb3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdb4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdb5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdb6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdb7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdb8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdb9"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdc"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdc1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdc2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdc3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdc4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdc5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdc6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdc7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdc8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "sdc9")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.stor.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .zram.obj_type_transition_stordev (unconfined.subj_typeattr)))

(in .dev.stor
    (call .zram.obj_type_transition_stordev (unconfined.subj_typeattr)))

(block zram

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/zram[0-9]+"
        block
        stordev_file_context)

       ;;
       ;; Macros
       ;;

       (macro getattr_stordev_blk_files ((type ARG1))
              (allow ARG1 stordev (blk_file (getattr))))

       (macro obj_type_transition_stordev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "zram0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "zram1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "zram2")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.stor.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .loop.obj_type_transition_stordev (unconfined.subj_typeattr)))

(in .dev.stor
    (call .loop.obj_type_transition_stordev (unconfined.subj_typeattr)))

(block loop

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/loop.+"
        block
        stordev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_stordev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop0p1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop0p2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop0p3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop0p4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop0p5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop0p6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop0p7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop0p8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop0p9"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop1p1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop1p2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop1p3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop1p4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop1p5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop1p6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop1p7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop1p8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop1p9"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop2p1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop2p2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop2p3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop2p4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop2p5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop2p6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop2p7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop2p8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop2p9"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop3p1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop3p2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop3p3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop3p4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop3p5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop3p6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop3p7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop3p8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop3p9"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop4p1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop4p2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop4p3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop4p4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop4p5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop4p6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop4p7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop4p8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop4p9"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop5p1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop5p2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop5p3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop5p4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop5p5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop5p6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop5p7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop5p8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop5p9"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop6p1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop6p2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop6p3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop6p4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop6p5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop6p6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop6p7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop6p8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop6p9"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop7p1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop7p2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop7p3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop7p4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop7p5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop7p6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop7p7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop7p8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "loop7p9")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.stor.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .mmc.obj_type_transition_stordev (unconfined.subj_typeattr)))

(in .dev.stor
    (call .mmc.obj_type_transition_stordev (unconfined.subj_typeattr)))

(block mmc

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/mmcblk[0-9]+"
        block
        stordev_file_context)
       (filecon
        "/dev/mmcblk[0-9]+boot[0-9]+"
        block
        stordev_file_context)
       (filecon
        "/dev/mmcblk[0-9]+p[0-9]+"
        block
        stordev_file_context)
       (filecon
        "/dev/mmcblk[0-9]+rpmb"
        char
        stordev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_stordev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk0boot0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk0boot1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk0p0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk0p1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk0p2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk0p3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk0p4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk0p5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk0p6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk0p7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk0p8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk0p9"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk0p130"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "mmcblk0rpmb"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk1boot0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk1boot1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk1p0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk1p1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk1p2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk1p3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk1p4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk1p5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk1p6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk1p7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk1p8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk1p9"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk1p130"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "mmcblk1rpmb"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk2boot0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk2boot1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk2p0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk2p1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk2p2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk2p3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk2p4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk2p5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk2p6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk2p7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk2p8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk2p9"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "mmcblk2p130"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev chr_file "mmcblk2rpmb")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.stor.obj_template))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev

    ;;
    ;; Contexts
    ;;

    (filecon
     "/dev/tty.+"
     char
     ttydev_file_context)
    (filecon
     "/dev/vcs[^/]*"
     char
     ttydev_file_context)

    ;;
    ;; Macros
    ;;

    (macro obj_type_transition_ttydev ((type ARG1))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty0"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty10"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty11"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty12"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty13"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty14"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty15"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty16"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty17"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty18"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty19"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty2"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty20"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty21"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty22"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty23"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty24"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty25"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty26"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty27"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty28"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty29"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty3"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty30"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty31"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty32"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty33"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty34"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty35"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty36"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty37"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty38"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty39"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty4"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty40"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty41"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty42"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty43"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty44"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty45"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty46"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty47"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty48"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty49"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty5"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty50"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty51"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty52"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty53"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty54"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty55"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty56"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty57"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty58"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty59"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty6"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty60"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty61"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty62"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty63"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty7"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty8"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "tty9"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyS0"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyS1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyS2"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyS3"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyS4"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyS5"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyS6"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyS7"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyS8"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyS9"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyMSM0"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyMSM1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyPCI0"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyPCI1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyS10"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyS11"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyS12"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyS13"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyS14"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyS15"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyUSB0"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyUSB1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyUSB2"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "ttyUSB3"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "vcs"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "vcs1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "vcsa"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "vcsa1"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "vcsu"))
           (call .tmp.fs_obj_type_transition
                 (ARG1 ttydev chr_file "vcsu1")))

    (macro readwriteinherited_ttydev_chr_files ((type ARG1))
           (typeattributeset readwriteinherited_ttydev.subj_typeattr ARG1))

    (macro dontaudit_readwriteinherited_ttydev_chr_files ((type ARG1))
           (dontaudit ARG1 ttydev readwriteinherited_chr_file))

    ;;
    ;; Policy
    ;;

    (blockinherit tty.obj_template)

    (call obj_type_transition_ttydev (unconfined.subj_typeattr))

    (block readwriteinherited_ttydev

           ;;
           ;; Policy
           ;;

           (blockinherit .subj.subj_all_macro_template)

           (allowx subj_typeattr ttydev (ioctl chr_file (not (0x5412))))
           (allow subj_typeattr ttydev readwriteinherited_chr_file))

    (block tty

           ;;
           ;; Macros
           ;;

           (macro readwriteinherited_all_chr_files ((type ARG1))
                  (typeattributeset readwriteinherited_all.subj_typeattr ARG1))

           (macro writeinherited_all_chr_files ((type ARG1))
                  (allowx ARG1 obj_typeattr (ioctl chr_file (not (0x5412))))
                  (allow ARG1 obj_typeattr writeinherited_chr_file))

           ;;
           ;; Policy
           ;;

           (blockinherit .file.obj_all_macro_template)

           (call dev.obj_type (obj_typeattr))

           ;;
           ;; Templates
           ;;

           (block obj_base_template

                  ;;
                  ;; Contexts
                  ;;

                  (context
                   ttydev_file_context
                   (.u
                    .r
                    ttydev
                    (systemlow
                     systemlow)))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_base_template)

                  (type
                   ttydev)

                  (call .dev.tty.obj_type (ttydev)))

           (block obj_macro_template

                  ;;
                  ;; Macros
                  ;;

                  (macro addname_ttydev_dirs ((type ARG1))
                         (allow ARG1 ttydev addname_dir))

                  (macro append_ttydev_blk_files ((type ARG1))
                         (allow ARG1 ttydev append_blk_file))

                  (macro append_ttydev_chr_files ((type ARG1))
                         (allow ARG1 ttydev append_chr_file))

                  (macro append_ttydev_fifo_files ((type ARG1))
                         (allow ARG1 ttydev append_fifo_file))

                  (macro append_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev append_file))

                  (macro appendinherited_ttydev_blk_files ((type ARG1))
                         (allow ARG1 ttydev appendinherited_blk_file))

                  (macro appendinherited_ttydev_chr_files ((type ARG1))
                         (allow ARG1 ttydev appendinherited_chr_file))

                  (macro appendinherited_ttydev_fifo_files ((type ARG1))
                         (allow ARG1 ttydev appendinherited_fifo_file))

                  (macro appendinherited_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev appendinherited_file))

                  (macro create_ttydev ((type ARG1))
                         (allow ARG1 ttydev (allfiles (create))))

                  (macro create_ttydev_blk_files ((type ARG1))
                         (allow ARG1 ttydev create_blk_file))

                  (macro create_ttydev_chr_files ((type ARG1))
                         (allow ARG1 ttydev create_chr_file))

                  (macro create_ttydev_dirs ((type ARG1))
                         (allow ARG1 ttydev create_dir))

                  (macro create_ttydev_fifo_files ((type ARG1))
                         (allow ARG1 ttydev create_fifo_file))

                  (macro create_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev create_file))

                  (macro create_ttydev_lnk_files ((type ARG1))
                         (allow ARG1 ttydev create_lnk_file))

                  (macro create_ttydev_sock_files ((type ARG1))
                         (allow ARG1 ttydev create_sock_file))

                  (macro deletename_ttydev_dirs ((type ARG1))
                         (allow ARG1 ttydev deletename_dir))

                  (macro delete_ttydev ((type ARG1))
                         (allow ARG1 ttydev (allfiles (delete))))

                  (macro delete_ttydev_blk_files ((type ARG1))
                         (allow ARG1 ttydev delete_blk_file))

                  (macro delete_ttydev_chr_files ((type ARG1))
                         (allow ARG1 ttydev delete_chr_file))

                  (macro delete_ttydev_dirs ((type ARG1))
                         (allow ARG1 ttydev delete_dir))

                  (macro delete_ttydev_fifo_files ((type ARG1))
                         (allow ARG1 ttydev delete_fifo_file))

                  (macro delete_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev delete_file))

                  (macro delete_ttydev_lnk_files ((type ARG1))
                         (allow ARG1 ttydev delete_lnk_file))

                  (macro delete_ttydev_sock_files ((type ARG1))
                         (allow ARG1 ttydev delete_sock_file))

                  (macro execute_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev execute_file))

                  (macro list_ttydev_dirs ((type ARG1))
                         (allow ARG1 ttydev list_dir))

                  (macro listinherited_ttydev_dirs ((type ARG1))
                         (allow ARG1 ttydev listinherited_dir))

                  (macro manage_ttydev ((type ARG1))
                         (allow ARG1 ttydev (allfiles (manage))))

                  (macro manage_ttydev_blk_files ((type ARG1))
                         (allow ARG1 ttydev manage_blk_file))

                  (macro manage_ttydev_chr_files ((type ARG1))
                         (allow ARG1 ttydev manage_chr_file))

                  (macro manage_ttydev_dirs ((type ARG1))
                         (allow ARG1 ttydev manage_dir))

                  (macro manage_ttydev_fifo_files ((type ARG1))
                         (allow ARG1 ttydev manage_fifo_file))

                  (macro manage_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev manage_file))

                  (macro manage_ttydev_lnk_files ((type ARG1))
                         (allow ARG1 ttydev manage_lnk_file))

                  (macro manage_ttydev_sock_files ((type ARG1))
                         (allow ARG1 ttydev manage_sock_file))

                  (macro mapexecute_ttydev_chr_files ((type ARG1))
                         (allow ARG1 ttydev mapexecute_chr_file))

                  (macro mapexecute_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev mapexecute_file))

                  (macro mounton_ttydev ((type ARG1))
                         (allow ARG1 ttydev (allfiles (mounton))))

                  (macro mounton_ttydev_blk_files ((type ARG1))
                         (allow ARG1 ttydev mounton_blk_file))

                  (macro mounton_ttydev_chr_files ((type ARG1))
                         (allow ARG1 ttydev mounton_chr_file))

                  (macro mounton_ttydev_dirs ((type ARG1))
                         (allow ARG1 ttydev mounton_dir))

                  (macro mounton_ttydev_fifo_files ((type ARG1))
                         (allow ARG1 ttydev mounton_fifo_file))

                  (macro mounton_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev mounton_file))

                  (macro mounton_ttydev_lnk_files ((type ARG1))
                         (allow ARG1 ttydev mounton_lnk_file))

                  (macro mounton_ttydev_sock_files ((type ARG1))
                         (allow ARG1 ttydev mounton_sock_file))

                  (macro read_ttydev ((type ARG1))
                         (allow ARG1 ttydev (allfiles (read))))

                  (macro read_ttydev_blk_files ((type ARG1))
                         (allow ARG1 ttydev read_blk_file))

                  (macro read_ttydev_chr_files ((type ARG1))
                         (allow ARG1 ttydev read_chr_file))

                  (macro read_ttydev_fifo_files ((type ARG1))
                         (allow ARG1 ttydev read_fifo_file))

                  (macro read_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev read_file))

                  (macro readinherited_ttydev_blk_files ((type ARG1))
                         (allow ARG1 ttydev readinherited_blk_file))

                  (macro readinherited_ttydev_chr_files ((type ARG1))
                         (allow ARG1 ttydev readinherited_chr_file))

                  (macro readinherited_ttydev_fifo_files ((type ARG1))
                         (allow ARG1 ttydev readinherited_fifo_file))

                  (macro readinherited_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev readinherited_file))

                  (macro readinherited_ttydev_sock_files ((type ARG1))
                         (allow ARG1 ttydev readinherited_sock_file))

                  (macro read_ttydev_lnk_files ((type ARG1))
                         (allow ARG1 ttydev read_lnk_file))

                  (macro read_ttydev_sock_files ((type ARG1))
                         (allow ARG1 ttydev read_sock_file))

                  (macro readwrite_ttydev ((type ARG1))
                         (allow ARG1 ttydev (allfiles (readwrite))))

                  (macro readwrite_ttydev_blk_files ((type ARG1))
                         (allow ARG1 ttydev readwrite_blk_file))

                  (macro readwrite_ttydev_chr_files ((type ARG1))
                         (allow ARG1 ttydev readwrite_chr_file))

                  (macro readwrite_ttydev_dirs ((type ARG1))
                         (allow ARG1 ttydev readwrite_dir))

                  (macro readwrite_ttydev_fifo_files ((type ARG1))
                         (allow ARG1 ttydev readwrite_fifo_file))

                  (macro readwrite_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev readwrite_file))

                  (macro readwriteinherited_ttydev_blk_files ((type ARG1))
                         (allow ARG1 ttydev readwriteinherited_blk_file))

                  (macro readwriteinherited_ttydev_chr_files ((type ARG1))
                         (allowx ARG1 ttydev (ioctl chr_file (not (0x5412))))
                         (allow ARG1 ttydev readwriteinherited_chr_file))

                  (macro readwriteinherited_ttydev_dirs ((type ARG1))
                         (allow ARG1 ttydev readwriteinherited_dir))

                  (macro readwriteinherited_ttydev_fifo_files ((type ARG1))
                         (allow ARG1 ttydev readwriteinherited_fifo_file))

                  (macro readwriteinherited_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev readwriteinherited_file))

                  (macro readwriteinherited_ttydev_sock_files ((type ARG1))
                         (allow ARG1 ttydev readwriteinherited_sock_file))

                  (macro readwrite_ttydev_lnk_files ((type ARG1))
                         (allow ARG1 ttydev readwrite_lnk_file))

                  (macro readwrite_ttydev_sock_files ((type ARG1))
                         (allow ARG1 ttydev readwrite_sock_file))

                  (macro relabel_ttydev ((type ARG1))
                         (allow ARG1 ttydev (allfiles (relabel))))

                  (macro relabel_ttydev_blk_files ((type ARG1))
                         (allow ARG1 ttydev relabel_blk_file))

                  (macro relabel_ttydev_chr_files ((type ARG1))
                         (allow ARG1 ttydev relabel_chr_file))

                  (macro relabel_ttydev_dirs ((type ARG1))
                         (allow ARG1 ttydev relabel_dir))

                  (macro relabel_ttydev_fifo_files ((type ARG1))
                         (allow ARG1 ttydev relabel_fifo_file))

                  (macro relabel_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev relabel_file))

                  (macro relabel_ttydev_lnk_files ((type ARG1))
                         (allow ARG1 ttydev relabel_lnk_file))

                  (macro relabel_ttydev_sock_files ((type ARG1))
                         (allow ARG1 ttydev relabel_sock_file))

                  (macro relabelfrom_ttydev ((type ARG1))
                         (allow ARG1 ttydev (allfiles (relabelfrom))))

                  (macro relabelfrom_ttydev_blk_files ((type ARG1))
                         (allow ARG1 ttydev relabelfrom_blk_file))

                  (macro relabelfrom_ttydev_chr_files ((type ARG1))
                         (allow ARG1 ttydev relabelfrom_chr_file))

                  (macro relabelfrom_ttydev_dirs ((type ARG1))
                         (allow ARG1 ttydev relabelfrom_dir))

                  (macro relabelfrom_ttydev_fifo_files ((type ARG1))
                         (allow ARG1 ttydev relabelfrom_fifo_file))

                  (macro relabelfrom_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev relabelfrom_file))

                  (macro relabelfrom_ttydev_lnk_files ((type ARG1))
                         (allow ARG1 ttydev relabelfrom_lnk_file))

                  (macro relabelfrom_ttydev_sock_files ((type ARG1))
                         (allow ARG1 ttydev relabelfrom_sock_file))

                  (macro relabelto_ttydev ((type ARG1))
                         (allow ARG1 ttydev (allfiles (relabelto))))

                  (macro relabelto_ttydev_blk_files ((type ARG1))
                         (allow ARG1 ttydev relabelto_blk_file))

                  (macro relabelto_ttydev_chr_files ((type ARG1))
                         (allow ARG1 ttydev relabelto_chr_file))

                  (macro relabelto_ttydev_dirs ((type ARG1))
                         (allow ARG1 ttydev relabelto_dir))

                  (macro relabelto_ttydev_fifo_files ((type ARG1))
                         (allow ARG1 ttydev relabelto_fifo_file))

                  (macro relabelto_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev relabelto_file))

                  (macro relabelto_ttydev_lnk_files ((type ARG1))
                         (allow ARG1 ttydev relabelto_lnk_file))

                  (macro relabelto_ttydev_sock_files ((type ARG1))
                         (allow ARG1 ttydev relabelto_sock_file))

                  (macro rename_ttydev ((type ARG1))
                         (allow ARG1 ttydev (allfiles (rename))))

                  (macro rename_ttydev_blk_files ((type ARG1))
                         (allow ARG1 ttydev rename_blk_file))

                  (macro rename_ttydev_chr_files ((type ARG1))
                         (allow ARG1 ttydev rename_chr_file))

                  (macro rename_ttydev_dirs ((type ARG1))
                         (allow ARG1 ttydev rename_dir))

                  (macro rename_ttydev_fifo_files ((type ARG1))
                         (allow ARG1 ttydev rename_fifo_file))

                  (macro rename_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev rename_file))

                  (macro rename_ttydev_lnk_files ((type ARG1))
                         (allow ARG1 ttydev rename_lnk_file))

                  (macro rename_ttydev_sock_files ((type ARG1))
                         (allow ARG1 ttydev rename_sock_file))

                  (macro search_ttydev_dirs ((type ARG1))
                         (allow ARG1 ttydev search_dir))

                  (macro ttydev_obj_type_transition
                         ((type ARG1)(type ARG2)(class ARG3)(name ARG4))
                         (typetransition ARG1 ttydev ARG3 ARG4 ARG2)
                         (call addname_ttydev_dirs (ARG1)))

                  (macro write_ttydev ((type ARG1))
                         (allow ARG1 ttydev (allfiles (write))))

                  (macro write_ttydev_blk_files ((type ARG1))
                         (allow ARG1 ttydev write_blk_file))

                  (macro write_ttydev_chr_files ((type ARG1))
                         (allow ARG1 ttydev write_chr_file))

                  (macro write_ttydev_dirs ((type ARG1))
                         (allow ARG1 ttydev write_dir))

                  (macro write_ttydev_fifo_files ((type ARG1))
                         (allow ARG1 ttydev write_fifo_file))

                  (macro write_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev write_file))

                  (macro writeinherited_ttydev_blk_files ((type ARG1))
                         (allow ARG1 ttydev writeinherited_blk_file))

                  (macro writeinherited_ttydev_chr_files ((type ARG1))
                         (allowx ARG1 ttydev (ioctl chr_file (not (0x5412))))
                         (allow ARG1 ttydev writeinherited_chr_file))

                  (macro writeinherited_ttydev_dirs ((type ARG1))
                         (allow ARG1 ttydev writeinherited_dir))

                  (macro writeinherited_ttydev_fifo_files ((type ARG1))
                         (allow ARG1 ttydev writeinherited_fifo_file))

                  (macro writeinherited_ttydev_files ((type ARG1))
                         (allow ARG1 ttydev writeinherited_file))

                  (macro writeinherited_ttydev_sock_files ((type ARG1))
                         (allow ARG1 ttydev writeinherited_sock_file))

                  (macro write_ttydev_lnk_files ((type ARG1))
                         (allow ARG1 ttydev write_lnk_file))

                  (macro write_ttydev_sock_files ((type ARG1))
                         (allow ARG1 ttydev write_sock_file))

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_macro_template))

           (block obj_template

                  ;;
                  ;; Policy
                  ;;

                  (blockabstract obj_template)

                  (blockinherit .dev.tty.obj_base_template)
                  (blockinherit .dev.tty.obj_macro_template))

           (block readwriteinherited_all

                  ;;
                  ;; Policy
                  ;;

                  (blockinherit .subj.subj_all_macro_template)

                  (allowx subj_typeattr obj_typeattr
                          (ioctl chr_file (not (0x5412))))
                  (allow subj_typeattr obj_typeattr
                         readwriteinherited_chr_file))))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(class
 appletalk_socket
 ())
(class
 association
 (polmatch recvfrom sendto setcontext))
(class
 bpf
 (map_create map_read map_write prog_load prog_run))
(class
 binder
 (call impersonate set_context_mgr transfer))
(class
 blk_file
 (watch watch_mount watch_reads watch_sb watch_with_perm))
(class
 cap_userns
 ())
(class
 cap2_userns
 ())
(class
 capability
 ())
(class
 capability2
 ())
(class
 chr_file
 (watch watch_mount watch_reads watch_sb watch_with_perm))
(class
 dccp_socket
 (name_connect node_bind))
(class
 dir
 (add_name remove_name reparent rmdir search watch watch_mount watch_reads
           watch_sb watch_with_perm))
(class
 fd
 (use))
(class
 fifo_file
 (watch watch_mount watch_reads watch_sb watch_with_perm))
(class
 file
 (entrypoint execute_no_trans watch watch_mount watch_reads watch_sb
             watch_with_perm))
(class
 filesystem
 (associate getattr mount quotaget quotamod relabelfrom relabelto remount
            unmount watch))
(class
 infiniband_endport
 (manage_subnet))
(class
 infiniband_pkey
 (access))
(class
 ipc
 ())
(class
 kernel_service
 (create_files_as use_as_override))
(class
 key
 (create link read search setattr view write))
(class
 key_socket
 ())
(class
 lnk_file
 (watch watch_mount watch_reads watch_sb watch_with_perm))
(class
 lockdown
 (confidentiality integrity))
(class
 memprotect
 (mmap_zero))
(class
 msg
 (receive send))
(class
 msgq
 (enqueue))
(class
 netif
 (egress ingress))
(class
 netlink_audit_socket
 (nlmsg_read nlmsg_readpriv nlmsg_relay nlmsg_tty_audit nlmsg_write))
(class
 netlink_connector_socket
 ())
(class
 netlink_crypto_socket
 ())
(class
 netlink_dnrt_socket
 ())
(class
 netlink_fib_lookup_socket
 ())
(class
 netlink_generic_socket
 ())
(class
 netlink_iscsi_socket
 ())
(class
 netlink_kobject_uevent_socket
 ())
(class
 netlink_netfilter_socket
 ())
(class
 netlink_nflog_socket
 ())
(class
 netlink_rdma_socket
 ())
(class
 netlink_route_socket
 (nlmsg_read nlmsg_write))
(class
 netlink_scsitransport_socket
 ())
(class
 netlink_selinux_socket
 ())
(class
 netlink_socket
 ())
(class
 netlink_tcpdiag_socket
 (nlmsg_read nlmsg_write))
(class
 netlink_xfrm_socket
 (nlmsg_read nlmsg_write))
(class
 node
 (recvfrom sendto))
(class
 packet
 (forward_in forward_out recv relabelto send))
(class
 packet_socket
 ())
(class
 passwd
 (chfn chsh crontab passwd rootok))
(class
 peer
 (recv))
(class
 perf_event
 (cpu kernel open read tracepoint write))
(class
 process
 (dyntransition execheap execmem execstack fork getattr getcap getpgid
                getrlimit getsched getsession noatsecure ptrace rlimitinh
                setexec setcap setcurrent setfscreate setkeycreate setpgid
                setrlimit setsched setsockcreate share sigchld siginh sigkill
                signal signull sigstop transition))
(class
 process2
 (nnp_transition nosuid_transition))
(class
 rawip_socket
 (node_bind))
(class
 security
 (check_context compute_av compute_create compute_member compute_relabel
                compute_user load_policy read_policy setbool setcheckreqprot
                setenforce setsecparam validate_trans))
(class
 sem
 ())
(class
 shm
 (lock))
(class
 sock_file
 (watch watch_mount watch_reads watch_sb watch_with_perm))
(class
 socket
 ())
(class
 system
 (ipc_info module_load module_request syslog_console syslog_mod syslog_read))
(class
 tcp_socket
 (name_connect node_bind))
(class
 tun_socket
 (attach_queue))
(class
 udp_socket
 (node_bind))
(class
 unix_dgram_socket
 ())
(class
 unix_stream_socket
 (connectto))

(classcommon appletalk_socket common_socket)
(classcommon blk_file common_file)
(classcommon cap_userns common_capability)
(classcommon cap2_userns common_capability2)
(classcommon capability common_capability)
(classcommon capability2 common_capability2)
(classcommon chr_file common_file)
(classcommon dccp_socket common_socket)
(classcommon dir common_file)
(classcommon fifo_file common_file)
(classcommon file common_file)
(classcommon ipc common_ipc)
(classcommon key_socket common_socket)
(classcommon lnk_file common_file)
(classcommon msgq common_ipc)
(classcommon netlink_audit_socket common_socket)
(classcommon netlink_connector_socket common_socket)
(classcommon netlink_crypto_socket common_socket)
(classcommon netlink_dnrt_socket common_socket)
(classcommon netlink_fib_lookup_socket common_socket)
(classcommon netlink_generic_socket common_socket)
(classcommon netlink_iscsi_socket common_socket)
(classcommon netlink_kobject_uevent_socket common_socket)
(classcommon netlink_netfilter_socket common_socket)
(classcommon netlink_nflog_socket common_socket)
(classcommon netlink_rdma_socket common_socket)
(classcommon netlink_route_socket common_socket)
(classcommon netlink_scsitransport_socket common_socket)
(classcommon netlink_selinux_socket common_socket)
(classcommon netlink_socket common_socket)
(classcommon netlink_tcpdiag_socket common_socket)
(classcommon netlink_xfrm_socket common_socket)
(classcommon packet_socket common_socket)
(classcommon rawip_socket common_socket)
(classcommon sem common_ipc)
(classcommon shm common_ipc)
(classcommon sock_file common_file)
(classcommon socket common_socket)
(classcommon tcp_socket common_socket)
(classcommon tun_socket common_socket)
(classcommon udp_socket common_socket)
(classcommon unix_dgram_socket common_socket)
(classcommon unix_stream_socket common_socket)

(classorder
 (security process system capability filesystem file dir fd lnk_file chr_file
           blk_file sock_file fifo_file socket tcp_socket udp_socket
           rawip_socket node netif netlink_socket packet_socket key_socket
           unix_stream_socket unix_dgram_socket sem msg msgq shm ipc passwd
           netlink_route_socket netlink_tcpdiag_socket netlink_nflog_socket
           netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket
           netlink_dnrt_socket association netlink_kobject_uevent_socket
           appletalk_socket packet key dccp_socket memprotect peer capability2
           kernel_service tun_socket binder netlink_iscsi_socket
           netlink_fib_lookup_socket netlink_connector_socket
           netlink_netfilter_socket netlink_generic_socket
           netlink_scsitransport_socket netlink_rdma_socket
           netlink_crypto_socket cap_userns cap2_userns infiniband_pkey
           infiniband_endport process2 bpf perf_event lockdown))

;; extended
(class
 alg_socket
 ())
(class
 atmpvc_socket
 ())
(class
 atmsvc_socket
 ())
(class
 ax25_socket
 ())
(class
 bluetooth_socket
 ())
(class
 caif_socket
 ())
(class
 can_socket
 ())
(class
 decnet_socket
 ())
(class
 icmp_socket
 (node_bind))
(class
 ieee802154_socket
 ())
(class
 ipx_socket
 ())
(class
 irda_socket
 ())
(class
 isdn_socket
 ())
(class
 iucv_socket
 ())
(class
 kcm_socket
 ())
(class
 llc_socket
 ())
(class
 netrom_socket
 ())
(class
 nfc_socket
 ())
(class
 phonet_socket
 ())
(class
 pppox_socket
 ())
(class
 qipcrtr_socket
 ())
(class
 rds_socket
 ())
(class
 rose_socket
 ())
(class
 rxrpc_socket
 ())
(class
 sctp_socket
 (association name_connect node_bind))
(class
 smc_socket
 ())
(class
 tipc_socket
 ())
(class
 vsock_socket
 ())
(class
 xdp_socket
 ())
(class
 x25_socket
 ())

(classcommon alg_socket common_socket)
(classcommon atmpvc_socket common_socket)
(classcommon atmsvc_socket common_socket)
(classcommon ax25_socket common_socket)
(classcommon bluetooth_socket common_socket)
(classcommon caif_socket common_socket)
(classcommon can_socket common_socket)
(classcommon decnet_socket common_socket)
(classcommon icmp_socket common_socket)
(classcommon ieee802154_socket common_socket)
(classcommon ipx_socket common_socket)
(classcommon irda_socket common_socket)
(classcommon isdn_socket common_socket)
(classcommon iucv_socket common_socket)
(classcommon kcm_socket common_socket)
(classcommon llc_socket common_socket)
(classcommon netrom_socket common_socket)
(classcommon nfc_socket common_socket)
(classcommon phonet_socket common_socket)
(classcommon pppox_socket common_socket)
(classcommon qipcrtr_socket common_socket)
(classcommon rds_socket common_socket)
(classcommon rose_socket common_socket)
(classcommon rxrpc_socket common_socket)
(classcommon sctp_socket common_socket)
(classcommon smc_socket common_socket)
(classcommon tipc_socket common_socket)
(classcommon vsock_socket common_socket)
(classcommon x25_socket common_socket)
(classcommon xdp_socket common_socket)

(classorder
 (unordered alg_socket atmpvc_socket atmsvc_socket ax25_socket bluetooth_socket
            caif_socket can_socket decnet_socket icmp_socket ieee802154_socket
            ipx_socket irda_socket isdn_socket iucv_socket kcm_socket
            llc_socket netrom_socket nfc_socket phonet_socket pppox_socket
            qipcrtr_socket rds_socket rose_socket rxrpc_socket sctp_socket
            smc_socket tipc_socket vsock_socket xdp_socket x25_socket))

(common
 common_capability
 (audit_control audit_write chown dac_read_search dac_override fowner fsetid
                ipc_lock ipc_owner kill linux_immutable lease mknod net_admin
                net_bind_service net_broadcast net_raw setfcap setgid setpcap
                setuid sys_admin sys_boot sys_chroot sys_module sys_nice
                sys_pacct sys_ptrace sys_rawio sys_resource sys_time
                sys_tty_config))
(common
 common_capability2
 (audit_read block_suspend bpf checkpoint_restore mac_admin mac_override
             perfmon syslog wake_alarm))
(common
 common_file
 (append audit_access create execmod execute getattr ioctl lock link map
         mounton open quotaon read relabelfrom relabelto rename setattr unlink
         write))
(common
 common_ipc
 (associate create destroy getattr read setattr unix_read unix_write write))
(common
 common_socket
 (accept append bind connect create getattr getopt ioctl listen lock map
         name_bind read recvfrom relabelfrom relabelto sendto setattr setopt
         shutdown write))

;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: © 2021 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block agent

       ;;
       ;; Policy
       ;;

       (blockinherit .subj.subj_all_macro_template)

       ;; this should eventually not be needed but at this time /rom in unlabeled
       (call .list_unlabeled_dirs (subj_typeattr))

       (call .sys.dontaudit_readwriteinherited_ptydev_chr_files
             (subj_typeattr))

       (call .console.dontaudit_readwriteinherited_ttydev_chr_files
             (subj_typeattr))

       (call .dev.dontaudit_readwriteinherited_ttydev_chr_files
             (subj_typeattr))

       (call .file.list_homefile_dirs (subj_typeattr))

       ;; the big hammer
       (call .mountroot.use_fds (subj_typeattr))

       (call .subj.useinteractivefd.subj_type (subj_typeattr))

       ;; is this leaked from initscript?
       (call .tmpfile.writeinherited_locktmpfile_files (subj_typeattr))

       (optional agent_opt_luci
                 (call .luci.writeinherited_fifo_files (subj_typeattr)))

       (optional agent_opt_rpcd
                 (call .rpcd.readwriteinherited_fifo_files (subj_typeattr)))

       (optional agent_opt_ttyd
                 (call .ttyd.dontaudit_readwriteinherited_ptydev_chr_files
                       (subj_typeattr)))

       (block exec

              ;;
              ;; Policy
              ;;

              (blockinherit .file.obj_all_macro_template))

       ;;
       ;; Templates
       ;;

       (block base_template

              ;;
              ;; Macros
              ;;

              (macro subj_type_transition ((type ARG1))
                     (allow ARG1 subj (process (transition)))
                     (dontaudit ARG1 subj
                                (process (noatsecure siginh rlimitinh)))

                     (allow subj ARG1 (process (sigchld)))

                     (call execfile_subj_type_transition (ARG1 subj))
                     (call mapexecute_execfile_files (ARG1))
                     (call read_execfile_files (ARG1)))

              ;;
              ;; Policy
              ;;

              (blockabstract base_template)

              (blockinherit .file.exec.obj_template)
              (blockinherit .subj.common.subj_template)

              (call entrypoint_execfile_files (subj))
              (call mapexecute_execfile_files (subj))
              (call read_execfile_files (subj))

              (call .agent.exec.obj_type (execfile))
              (call .agent.subj_type (subj))))
